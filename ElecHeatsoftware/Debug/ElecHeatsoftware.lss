
ElecHeatsoftware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001082  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000010f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001b  00800060  00800060  000010f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001128  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001164  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ff8  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085b  00000000  00000000  0000226c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a66  00000000  00000000  00002ac7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00003530  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000670  00000000  00000000  00003790  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004ec  00000000  00000000  00003e00  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  000042ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
       4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
       8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
       c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      20:	0c 94 19 04 	jmp	0x832	; 0x832 <__vector_8>
      24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      54:	3b 02       	muls	r19, r27
      56:	32 02       	muls	r19, r18
      58:	20 02       	muls	r18, r16
      5a:	0e 02       	muls	r16, r30
      5c:	fc 01       	movw	r30, r24
      5e:	29 02       	muls	r18, r25
      60:	f3 01       	movw	r30, r6
      62:	05 02       	muls	r16, r21
      64:	17 02       	muls	r17, r23
      66:	7e 03       	fmul	r23, r22
      68:	7b 03       	fmul	r23, r19
      6a:	75 03       	mulsu	r23, r21
      6c:	6f 03       	fmul	r22, r23
      6e:	69 03       	fmul	r22, r17
      70:	78 03       	fmul	r23, r16
      72:	66 03       	mulsu	r22, r22
      74:	6c 03       	fmul	r22, r20
      76:	72 03       	mulsu	r23, r18
      78:	07 63       	ori	r16, 0x37	; 55
      7a:	42 36       	cpi	r20, 0x62	; 98
      7c:	b7 9b       	sbis	0x16, 7	; 22
      7e:	d8 a7       	std	Y+40, r29	; 0x28
      80:	1a 39       	cpi	r17, 0x9A	; 154
      82:	68 56       	subi	r22, 0x68	; 104
      84:	18 ae       	std	Y+56, r1	; 0x38
      86:	ba ab       	std	Y+50, r27	; 0x32
      88:	55 8c       	ldd	r5, Z+29	; 0x1d
      8a:	1d 3c       	cpi	r17, 0xCD	; 205
      8c:	b7 cc       	rjmp	.-1682   	; 0xfffff9fc <__eeprom_end+0xff7ef9fc>
      8e:	57 63       	ori	r21, 0x37	; 55
      90:	bd 6d       	ori	r27, 0xDD	; 221
      92:	ed fd       	.word	0xfded	; ????
      94:	75 3e       	cpi	r23, 0xE5	; 229
      96:	f6 17       	cp	r31, r22
      98:	72 31       	cpi	r23, 0x12	; 18
      9a:	bf 00       	.word	0x00bf	; ????
      9c:	00 00       	nop
      9e:	80 3f       	cpi	r24, 0xF0	; 240
      a0:	08 00       	.word	0x0008	; ????
      a2:	00 00       	nop
      a4:	be 92       	st	-X, r11
      a6:	24 49       	sbci	r18, 0x94	; 148
      a8:	12 3e       	cpi	r17, 0xE2	; 226
      aa:	ab aa       	std	Y+51, r10	; 0x33
      ac:	aa 2a       	or	r10, r26
      ae:	be cd       	rjmp	.-1156   	; 0xfffffc2c <__eeprom_end+0xff7efc2c>
      b0:	cc cc       	rjmp	.-1640   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
      b2:	4c 3e       	cpi	r20, 0xEC	; 236
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	be ab       	std	Y+54, r27	; 0x36
      ba:	aa aa       	std	Y+50, r10	; 0x32
      bc:	aa 3e       	cpi	r26, 0xEA	; 234
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	bf 00       	.word	0x00bf	; ????
      c4:	00 00       	nop
      c6:	80 3f       	cpi	r24, 0xF0	; 240
      c8:	00 00       	nop
      ca:	00 00       	nop
      cc:	00 08       	sbc	r0, r0
      ce:	41 78       	andi	r20, 0x81	; 129
      d0:	d3 bb       	out	0x13, r29	; 19
      d2:	43 87       	std	Z+11, r20	; 0x0b
      d4:	d1 13       	cpse	r29, r17
      d6:	3d 19       	sub	r19, r13
      d8:	0e 3c       	cpi	r16, 0xCE	; 206
      da:	c3 bd       	out	0x23, r28	; 35
      dc:	42 82       	std	Z+2, r4	; 0x02
      de:	ad 2b       	or	r26, r29
      e0:	3e 68       	ori	r19, 0x8E	; 142
      e2:	ec 82       	std	Y+4, r14	; 0x04
      e4:	76 be       	out	0x36, r7	; 54
      e6:	d9 8f       	std	Y+25, r29	; 0x19
      e8:	e1 a9       	ldd	r30, Z+49	; 0x31
      ea:	3e 4c       	sbci	r19, 0xCE	; 206
      ec:	80 ef       	ldi	r24, 0xF0	; 240
      ee:	ff be       	out	0x3f, r15	; 63
      f0:	01 c4       	rjmp	.+2050   	; 0x8f4 <__addsf3+0x1e>
      f2:	ff 7f       	andi	r31, 0xFF	; 255
      f4:	3f 00       	.word	0x003f	; ????
      f6:	00 00       	nop
	...

000000fa <__ctors_end>:
      fa:	11 24       	eor	r1, r1
      fc:	1f be       	out	0x3f, r1	; 63
      fe:	cf e5       	ldi	r28, 0x5F	; 95
     100:	d4 e0       	ldi	r29, 0x04	; 4
     102:	de bf       	out	0x3e, r29	; 62
     104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_clear_bss>:
     106:	20 e0       	ldi	r18, 0x00	; 0
     108:	a0 e6       	ldi	r26, 0x60	; 96
     10a:	b0 e0       	ldi	r27, 0x00	; 0
     10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
     10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
     110:	ab 37       	cpi	r26, 0x7B	; 123
     112:	b2 07       	cpc	r27, r18
     114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
     116:	0e 94 4c 04 	call	0x898	; 0x898 <main>
     11a:	0c 94 3f 08 	jmp	0x107e	; 0x107e <_exit>

0000011e <__bad_interrupt>:
     11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_init>:
	/* ADMUX Register Bits Description:
	 * REFS1:0 = 00 to choose to connect external reference voltage by input this voltage through AREF pin
	 * ADLAR   = 0 right adjusted
	 * MUX4:0  = 00000 to choose channel 0 as initialization
	 */
	ADMUX = 0x00;
     122:	17 b8       	out	0x07, r1	; 7
	/* ADCSRA Register Bits Description:
	 * ADEN    = 1 Enable ADC
	 * ADIE    = 0 Disable ADC Interrupt
	 * ADPS2:0 = 011 to choose ADC_Clock=F_CPU/8=1Mhz/8=125Khz --> ADC must operate in range 50-200Khz
	 */
	ADCSRA = (1<<7) | (1<<1) | (1<<0);
     124:	83 e8       	ldi	r24, 0x83	; 131
     126:	86 b9       	out	0x06, r24	; 6
     128:	08 95       	ret

0000012a <ADC_readChannel>:
}

unsigned short ADC_readChannel(unsigned char channel_num)
{
	//channel_num &= 0x07; /* channel number must be from 0 --> 7 */
	ADMUX &= 0xE0; /* clear first 5 bits in the ADMUX (channel number MUX4:0 bits) before set the required channel */
     12a:	97 b1       	in	r25, 0x07	; 7
     12c:	90 7e       	andi	r25, 0xE0	; 224
     12e:	97 b9       	out	0x07, r25	; 7
	ADMUX = ADMUX | channel_num; /* choose the correct channel by setting the channel number in MUX4:0 bits */
     130:	97 b1       	in	r25, 0x07	; 7
     132:	89 2b       	or	r24, r25
     134:	87 b9       	out	0x07, r24	; 7
	SET_BIT(ADCSRA,6); /* start conversion write '1' to ADSC */
     136:	86 b1       	in	r24, 0x06	; 6
     138:	80 64       	ori	r24, 0x40	; 64
     13a:	86 b9       	out	0x06, r24	; 6
	//ADCSRA |= (1<<ADSC);
	while(BIT_IS_CLEAR(ADCSRA,4)); /* wait for conversion to complete ADIF becomes '1' */
     13c:	34 9b       	sbis	0x06, 4	; 6
     13e:	fe cf       	rjmp	.-4      	; 0x13c <ADC_readChannel+0x12>
		SET_BIT(ADCSRA,4); /* clear ADIF by write '1' to it :) */
     140:	86 b1       	in	r24, 0x06	; 6
     142:	80 61       	ori	r24, 0x10	; 16
     144:	86 b9       	out	0x06, r24	; 6
	return ADC; /* return the data register */
     146:	84 b1       	in	r24, 0x04	; 4
     148:	95 b1       	in	r25, 0x05	; 5
	

}
     14a:	08 95       	ret

0000014c <DATA_DIRECTION_REGISTER>:
// turns a BCD-encoded byte back into a standard one
u8 Bcd_to_decimal (u8 value)
{
	value=TWDR;
	return( ((value>>4)*10)+(value &0xF));
}
     14c:	8f 34       	cpi	r24, 0x4F	; 79
     14e:	41 f5       	brne	.+80     	; 0x1a0 <DATA_DIRECTION_REGISTER+0x54>
     150:	81 b3       	in	r24, 0x11	; 17
     152:	81 60       	ori	r24, 0x01	; 1
     154:	81 bb       	out	0x11, r24	; 17
     156:	81 b3       	in	r24, 0x11	; 17
     158:	82 60       	ori	r24, 0x02	; 2
     15a:	81 bb       	out	0x11, r24	; 17
     15c:	81 b3       	in	r24, 0x11	; 17
     15e:	84 60       	ori	r24, 0x04	; 4
     160:	81 bb       	out	0x11, r24	; 17
     162:	81 b3       	in	r24, 0x11	; 17
     164:	88 60       	ori	r24, 0x08	; 8
     166:	81 bb       	out	0x11, r24	; 17
     168:	81 b3       	in	r24, 0x11	; 17
     16a:	80 61       	ori	r24, 0x10	; 16
     16c:	81 bb       	out	0x11, r24	; 17
     16e:	81 b3       	in	r24, 0x11	; 17
     170:	80 62       	ori	r24, 0x20	; 32
     172:	81 bb       	out	0x11, r24	; 17
     174:	81 b3       	in	r24, 0x11	; 17
     176:	80 64       	ori	r24, 0x40	; 64
     178:	81 bb       	out	0x11, r24	; 17
     17a:	81 b3       	in	r24, 0x11	; 17
     17c:	80 68       	ori	r24, 0x80	; 128
     17e:	81 bb       	out	0x11, r24	; 17
     180:	87 b3       	in	r24, 0x17	; 23
     182:	81 60       	ori	r24, 0x01	; 1
     184:	87 bb       	out	0x17, r24	; 23
     186:	87 b3       	in	r24, 0x17	; 23
     188:	80 68       	ori	r24, 0x80	; 128
     18a:	87 bb       	out	0x17, r24	; 23
     18c:	87 b3       	in	r24, 0x17	; 23
     18e:	80 62       	ori	r24, 0x20	; 32
     190:	87 bb       	out	0x17, r24	; 23
     192:	87 b3       	in	r24, 0x17	; 23
     194:	80 64       	ori	r24, 0x40	; 64
     196:	87 bb       	out	0x17, r24	; 23
     198:	87 b3       	in	r24, 0x17	; 23
     19a:	80 61       	ori	r24, 0x10	; 16
     19c:	87 bb       	out	0x17, r24	; 23
     19e:	08 95       	ret
     1a0:	69 34       	cpi	r22, 0x49	; 73
     1a2:	49 f4       	brne	.+18     	; 0x1b6 <DATA_DIRECTION_REGISTER+0x6a>
     1a4:	87 b3       	in	r24, 0x17	; 23
     1a6:	87 7f       	andi	r24, 0xF7	; 247
     1a8:	87 bb       	out	0x17, r24	; 23
     1aa:	87 b3       	in	r24, 0x17	; 23
     1ac:	8b 7f       	andi	r24, 0xFB	; 251
     1ae:	87 bb       	out	0x17, r24	; 23
     1b0:	87 b3       	in	r24, 0x17	; 23
     1b2:	8d 7f       	andi	r24, 0xFD	; 253
     1b4:	87 bb       	out	0x17, r24	; 23
     1b6:	08 95       	ret

000001b8 <Init_VARIABLES>:
     1b8:	ef 92       	push	r14
     1ba:	0f 93       	push	r16
     1bc:	83 35       	cpi	r24, 0x53	; 83
     1be:	19 f4       	brne	.+6      	; 0x1c6 <Init_VARIABLES+0xe>
     1c0:	98 b3       	in	r25, 0x18	; 24
     1c2:	91 60       	ori	r25, 0x01	; 1
     1c4:	98 bb       	out	0x18, r25	; 24
     1c6:	63 35       	cpi	r22, 0x53	; 83
     1c8:	21 f4       	brne	.+8      	; 0x1d2 <Init_VARIABLES+0x1a>
     1ca:	88 b3       	in	r24, 0x18	; 24
     1cc:	80 68       	ori	r24, 0x80	; 128
     1ce:	88 bb       	out	0x18, r24	; 24
     1d0:	31 c0       	rjmp	.+98     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     1d2:	49 34       	cpi	r20, 0x49	; 73
     1d4:	e9 f4       	brne	.+58     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     1d6:	83 35       	cpi	r24, 0x53	; 83
     1d8:	d9 f4       	brne	.+54     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     1da:	63 35       	cpi	r22, 0x53	; 83
     1dc:	c9 f4       	brne	.+50     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     1de:	82 b3       	in	r24, 0x12	; 18
     1e0:	8f 77       	andi	r24, 0x7F	; 127
     1e2:	82 bb       	out	0x12, r24	; 18
     1e4:	82 b3       	in	r24, 0x12	; 18
     1e6:	80 64       	ori	r24, 0x40	; 64
     1e8:	82 bb       	out	0x12, r24	; 18
     1ea:	82 b3       	in	r24, 0x12	; 18
     1ec:	80 62       	ori	r24, 0x20	; 32
     1ee:	82 bb       	out	0x12, r24	; 18
     1f0:	82 b3       	in	r24, 0x12	; 18
     1f2:	8f 7e       	andi	r24, 0xEF	; 239
     1f4:	82 bb       	out	0x12, r24	; 18
     1f6:	82 b3       	in	r24, 0x12	; 18
     1f8:	87 7f       	andi	r24, 0xF7	; 247
     1fa:	82 bb       	out	0x12, r24	; 18
     1fc:	82 b3       	in	r24, 0x12	; 18
     1fe:	8b 7f       	andi	r24, 0xFB	; 251
     200:	82 bb       	out	0x12, r24	; 18
     202:	82 b3       	in	r24, 0x12	; 18
     204:	8d 7f       	andi	r24, 0xFD	; 253
     206:	82 bb       	out	0x12, r24	; 18
     208:	82 b3       	in	r24, 0x12	; 18
     20a:	8e 7f       	andi	r24, 0xFE	; 254
     20c:	82 bb       	out	0x12, r24	; 18
     20e:	12 c0       	rjmp	.+36     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     210:	22 35       	cpi	r18, 0x52	; 82
     212:	21 f4       	brne	.+8      	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     214:	88 b3       	in	r24, 0x18	; 24
     216:	8f 7e       	andi	r24, 0xEF	; 239
     218:	88 bb       	out	0x18, r24	; 24
     21a:	0c c0       	rjmp	.+24     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     21c:	02 35       	cpi	r16, 0x52	; 82
     21e:	21 f4       	brne	.+8      	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
     220:	88 b3       	in	r24, 0x18	; 24
     222:	8f 7d       	andi	r24, 0xDF	; 223
     224:	88 bb       	out	0x18, r24	; 24
     226:	06 c0       	rjmp	.+12     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     228:	82 e5       	ldi	r24, 0x52	; 82
     22a:	e8 12       	cpse	r14, r24
     22c:	03 c0       	rjmp	.+6      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     22e:	88 b3       	in	r24, 0x18	; 24
     230:	8f 7b       	andi	r24, 0xBF	; 191
     232:	88 bb       	out	0x18, r24	; 24
     234:	0f 91       	pop	r16
     236:	ef 90       	pop	r14
     238:	08 95       	ret

0000023a <Avg_reading>:
     23a:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <x>
     23e:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <x+0x1>
     242:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <x+0x2>
     246:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <x+0x3>
     24a:	20 91 6d 00 	lds	r18, 0x006D	; 0x80006d <sum>
     24e:	30 91 6e 00 	lds	r19, 0x006E	; 0x80006e <sum+0x1>
     252:	40 91 6f 00 	lds	r20, 0x006F	; 0x80006f <sum+0x2>
     256:	50 91 70 00 	lds	r21, 0x0070	; 0x800070 <sum+0x3>
     25a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3>
     25e:	60 93 6d 00 	sts	0x006D, r22	; 0x80006d <sum>
     262:	70 93 6e 00 	sts	0x006E, r23	; 0x80006e <sum+0x1>
     266:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <sum+0x2>
     26a:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <sum+0x3>
     26e:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <i>
     272:	2f 5f       	subi	r18, 0xFF	; 255
     274:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <i>
     278:	29 30       	cpi	r18, 0x09	; 9
     27a:	c1 f4       	brne	.+48     	; 0x2ac <Avg_reading+0x72>
     27c:	24 e1       	ldi	r18, 0x14	; 20
     27e:	3e ea       	ldi	r19, 0xAE	; 174
     280:	41 e1       	ldi	r20, 0x11	; 17
     282:	51 e4       	ldi	r21, 0x41	; 65
     284:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__divsf3>
     288:	60 93 71 00 	sts	0x0071, r22	; 0x800071 <average>
     28c:	70 93 72 00 	sts	0x0072, r23	; 0x800072 <average+0x1>
     290:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <average+0x2>
     294:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <average+0x3>
     298:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <i>
     29c:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <sum>
     2a0:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <sum+0x1>
     2a4:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sum+0x2>
     2a8:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <sum+0x3>
     2ac:	08 95       	ret

000002ae <Temperature_reading>:
     2ae:	80 e0       	ldi	r24, 0x00	; 0
     2b0:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_readChannel>
     2b4:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <volt+0x1>
     2b8:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <volt>
     2bc:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <volt>
     2c0:	70 91 7a 00 	lds	r23, 0x007A	; 0x80007a <volt+0x1>
     2c4:	cb 01       	movw	r24, r22
     2c6:	88 0f       	add	r24, r24
     2c8:	99 1f       	adc	r25, r25
     2ca:	88 0f       	add	r24, r24
     2cc:	99 1f       	adc	r25, r25
     2ce:	68 0f       	add	r22, r24
     2d0:	79 1f       	adc	r23, r25
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 7d 05 	call	0xafa	; 0xafa <__floatunsisf>
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	30 ec       	ldi	r19, 0xC0	; 192
     2de:	4f e7       	ldi	r20, 0x7F	; 127
     2e0:	54 e4       	ldi	r21, 0x44	; 68
     2e2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__divsf3>
     2e6:	60 93 75 00 	sts	0x0075, r22	; 0x800075 <x>
     2ea:	70 93 76 00 	sts	0x0076, r23	; 0x800076 <x+0x1>
     2ee:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <x+0x2>
     2f2:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <x+0x3>
     2f6:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <x>
     2fa:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <x+0x1>
     2fe:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <x+0x2>
     302:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <x+0x3>
     306:	20 e0       	ldi	r18, 0x00	; 0
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	48 ec       	ldi	r20, 0xC8	; 200
     30c:	52 e4       	ldi	r21, 0x42	; 66
     30e:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__mulsf3>
     312:	60 93 75 00 	sts	0x0075, r22	; 0x800075 <x>
     316:	70 93 76 00 	sts	0x0076, r23	; 0x800076 <x+0x1>
     31a:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <x+0x2>
     31e:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <x+0x3>
     322:	0e 94 1d 01 	call	0x23a	; 0x23a <Avg_reading>
     326:	08 95       	ret

00000328 <ACTIVATION>:
     328:	cf 92       	push	r12
     32a:	df 92       	push	r13
     32c:	ef 92       	push	r14
     32e:	ff 92       	push	r15
     330:	cf 93       	push	r28
     332:	20 91 6b 00 	lds	r18, 0x006B	; 0x80006b <counter>
     336:	30 91 6c 00 	lds	r19, 0x006C	; 0x80006c <counter+0x1>
     33a:	28 17       	cp	r18, r24
     33c:	39 07       	cpc	r19, r25
     33e:	09 f0       	breq	.+2      	; 0x342 <ACTIVATION+0x1a>
     340:	3f c0       	rjmp	.+126    	; 0x3c0 <ACTIVATION+0x98>
     342:	c4 2f       	mov	r28, r20
     344:	70 e0       	ldi	r23, 0x00	; 0
     346:	80 e0       	ldi	r24, 0x00	; 0
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	0e 94 7f 05 	call	0xafe	; 0xafe <__floatsisf>
     34e:	c0 90 71 00 	lds	r12, 0x0071	; 0x800071 <average>
     352:	d0 90 72 00 	lds	r13, 0x0072	; 0x800072 <average+0x1>
     356:	e0 90 73 00 	lds	r14, 0x0073	; 0x800073 <average+0x2>
     35a:	f0 90 74 00 	lds	r15, 0x0074	; 0x800074 <average+0x3>
     35e:	a7 01       	movw	r20, r14
     360:	96 01       	movw	r18, r12
     362:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__cmpsf2>
     366:	18 16       	cp	r1, r24
     368:	54 f0       	brlt	.+20     	; 0x37e <ACTIVATION+0x56>
     36a:	88 b3       	in	r24, 0x18	; 24
     36c:	80 62       	ori	r24, 0x20	; 32
     36e:	88 bb       	out	0x18, r24	; 24
     370:	88 b3       	in	r24, 0x18	; 24
     372:	8f 7b       	andi	r24, 0xBF	; 191
     374:	88 bb       	out	0x18, r24	; 24
     376:	88 b3       	in	r24, 0x18	; 24
     378:	80 61       	ori	r24, 0x10	; 16
     37a:	88 bb       	out	0x18, r24	; 24
     37c:	21 c0       	rjmp	.+66     	; 0x3c0 <ACTIVATION+0x98>
     37e:	6c 2f       	mov	r22, r28
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 7f 05 	call	0xafe	; 0xafe <__floatsisf>
     38a:	9b 01       	movw	r18, r22
     38c:	ac 01       	movw	r20, r24
     38e:	c7 01       	movw	r24, r14
     390:	b6 01       	movw	r22, r12
     392:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__cmpsf2>
     396:	18 16       	cp	r1, r24
     398:	9c f0       	brlt	.+38     	; 0x3c0 <ACTIVATION+0x98>
     39a:	88 b3       	in	r24, 0x18	; 24
     39c:	8f 7d       	andi	r24, 0xDF	; 223
     39e:	88 bb       	out	0x18, r24	; 24
     3a0:	88 b3       	in	r24, 0x18	; 24
     3a2:	80 64       	ori	r24, 0x40	; 64
     3a4:	88 bb       	out	0x18, r24	; 24
     3a6:	98 b3       	in	r25, 0x18	; 24
     3a8:	80 e1       	ldi	r24, 0x10	; 16
     3aa:	89 27       	eor	r24, r25
     3ac:	88 bb       	out	0x18, r24	; 24
     3ae:	2f ed       	ldi	r18, 0xDF	; 223
     3b0:	82 e2       	ldi	r24, 0x22	; 34
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	21 50       	subi	r18, 0x01	; 1
     3b6:	80 40       	sbci	r24, 0x00	; 0
     3b8:	90 40       	sbci	r25, 0x00	; 0
     3ba:	e1 f7       	brne	.-8      	; 0x3b4 <ACTIVATION+0x8c>
     3bc:	00 c0       	rjmp	.+0      	; 0x3be <ACTIVATION+0x96>
     3be:	00 00       	nop
     3c0:	cf 91       	pop	r28
     3c2:	ff 90       	pop	r15
     3c4:	ef 90       	pop	r14
     3c6:	df 90       	pop	r13
     3c8:	cf 90       	pop	r12
     3ca:	08 95       	ret

000003cc <ELEMENTS>:
     3cc:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <counter>
     3d0:	f0 91 6c 00 	lds	r31, 0x006C	; 0x80006c <counter+0x1>
     3d4:	35 96       	adiw	r30, 0x05	; 5
     3d6:	e9 30       	cpi	r30, 0x09	; 9
     3d8:	f1 05       	cpc	r31, r1
     3da:	08 f0       	brcs	.+2      	; 0x3de <ELEMENTS+0x12>
     3dc:	54 c0       	rjmp	.+168    	; 0x486 <__stack+0x27>
     3de:	e6 5d       	subi	r30, 0xD6	; 214
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__tablejump2__>
     3e6:	4c e3       	ldi	r20, 0x3C	; 60
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	66 e4       	ldi	r22, 0x46	; 70
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     3f6:	08 95       	ret
     3f8:	42 e3       	ldi	r20, 0x32	; 50
     3fa:	50 e0       	ldi	r21, 0x00	; 0
     3fc:	6c e3       	ldi	r22, 0x3C	; 60
     3fe:	70 e0       	ldi	r23, 0x00	; 0
     400:	8f ef       	ldi	r24, 0xFF	; 255
     402:	9f ef       	ldi	r25, 0xFF	; 255
     404:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     408:	08 95       	ret
     40a:	41 e4       	ldi	r20, 0x41	; 65
     40c:	50 e0       	ldi	r21, 0x00	; 0
     40e:	6b e4       	ldi	r22, 0x4B	; 75
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	82 e0       	ldi	r24, 0x02	; 2
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     41a:	08 95       	ret
     41c:	4d e2       	ldi	r20, 0x2D	; 45
     41e:	50 e0       	ldi	r21, 0x00	; 0
     420:	67 e3       	ldi	r22, 0x37	; 55
     422:	70 e0       	ldi	r23, 0x00	; 0
     424:	8e ef       	ldi	r24, 0xFE	; 254
     426:	9f ef       	ldi	r25, 0xFF	; 255
     428:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     42c:	08 95       	ret
     42e:	46 e4       	ldi	r20, 0x46	; 70
     430:	50 e0       	ldi	r21, 0x00	; 0
     432:	60 e5       	ldi	r22, 0x50	; 80
     434:	70 e0       	ldi	r23, 0x00	; 0
     436:	83 e0       	ldi	r24, 0x03	; 3
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     43e:	08 95       	ret
     440:	48 e2       	ldi	r20, 0x28	; 40
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	62 e3       	ldi	r22, 0x32	; 50
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	8d ef       	ldi	r24, 0xFD	; 253
     44a:	9f ef       	ldi	r25, 0xFF	; 255
     44c:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     450:	08 95       	ret
     452:	47 e3       	ldi	r20, 0x37	; 55
     454:	50 e0       	ldi	r21, 0x00	; 0
     456:	61 e4       	ldi	r22, 0x41	; 65
     458:	70 e0       	ldi	r23, 0x00	; 0
     45a:	80 e0       	ldi	r24, 0x00	; 0
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     462:	08 95       	ret
     464:	43 e2       	ldi	r20, 0x23	; 35
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	6d e2       	ldi	r22, 0x2D	; 45
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	8c ef       	ldi	r24, 0xFC	; 252
     46e:	9f ef       	ldi	r25, 0xFF	; 255
     470:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     474:	08 95       	ret
     476:	4e e1       	ldi	r20, 0x1E	; 30
     478:	50 e0       	ldi	r21, 0x00	; 0
     47a:	68 e2       	ldi	r22, 0x28	; 40
     47c:	70 e0       	ldi	r23, 0x00	; 0
     47e:	8b ef       	ldi	r24, 0xFB	; 251
     480:	9f ef       	ldi	r25, 0xFF	; 255
     482:	0e 94 94 01 	call	0x328	; 0x328 <ACTIVATION>
     486:	08 95       	ret

00000488 <on_off_7_segment>:
     488:	81 30       	cpi	r24, 0x01	; 1
     48a:	39 f4       	brne	.+14     	; 0x49a <on_off_7_segment+0x12>
     48c:	88 b3       	in	r24, 0x18	; 24
     48e:	8e 7f       	andi	r24, 0xFE	; 254
     490:	88 bb       	out	0x18, r24	; 24
     492:	88 b3       	in	r24, 0x18	; 24
     494:	8f 77       	andi	r24, 0x7F	; 127
     496:	88 bb       	out	0x18, r24	; 24
     498:	08 95       	ret
     49a:	81 11       	cpse	r24, r1
     49c:	06 c0       	rjmp	.+12     	; 0x4aa <on_off_7_segment+0x22>
     49e:	88 b3       	in	r24, 0x18	; 24
     4a0:	81 60       	ori	r24, 0x01	; 1
     4a2:	88 bb       	out	0x18, r24	; 24
     4a4:	88 b3       	in	r24, 0x18	; 24
     4a6:	80 68       	ori	r24, 0x80	; 128
     4a8:	88 bb       	out	0x18, r24	; 24
     4aa:	08 95       	ret

000004ac <OFF_MODE>:
     4ac:	88 b3       	in	r24, 0x18	; 24
     4ae:	8f 7d       	andi	r24, 0xDF	; 223
     4b0:	88 bb       	out	0x18, r24	; 24
     4b2:	88 b3       	in	r24, 0x18	; 24
     4b4:	8f 7b       	andi	r24, 0xBF	; 191
     4b6:	88 bb       	out	0x18, r24	; 24
     4b8:	88 b3       	in	r24, 0x18	; 24
     4ba:	8f 7e       	andi	r24, 0xEF	; 239
     4bc:	88 bb       	out	0x18, r24	; 24
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	0e 94 44 02 	call	0x488	; 0x488 <on_off_7_segment>
     4c4:	08 95       	ret

000004c6 <on_off_mode>:
     4c6:	b1 9b       	sbis	0x16, 1	; 22
     4c8:	0c c0       	rjmp	.+24     	; 0x4e2 <on_off_mode+0x1c>
     4ca:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     4ce:	81 11       	cpse	r24, r1
     4d0:	08 c0       	rjmp	.+16     	; 0x4e2 <on_off_mode+0x1c>
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <flag>
     4d8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <Start_Mode>
     4dc:	b1 99       	sbic	0x16, 1	; 22
     4de:	fe cf       	rjmp	.-4      	; 0x4dc <on_off_mode+0x16>
     4e0:	08 95       	ret
     4e2:	b1 9b       	sbis	0x16, 1	; 22
     4e4:	0a c0       	rjmp	.+20     	; 0x4fa <on_off_mode+0x34>
     4e6:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     4ea:	81 30       	cpi	r24, 0x01	; 1
     4ec:	31 f4       	brne	.+12     	; 0x4fa <on_off_mode+0x34>
     4ee:	b1 99       	sbic	0x16, 1	; 22
     4f0:	fe cf       	rjmp	.-4      	; 0x4ee <on_off_mode+0x28>
     4f2:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <flag>
     4f6:	0e 94 56 02 	call	0x4ac	; 0x4ac <OFF_MODE>
     4fa:	08 95       	ret

000004fc <I2C_Init>:
     4fc:	11 b8       	out	0x01, r1	; 1
     4fe:	61 b1       	in	r22, 0x01	; 1
     500:	63 70       	andi	r22, 0x03	; 3
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 7f 05 	call	0xafe	; 0xafe <__floatsisf>
     50c:	9b 01       	movw	r18, r22
     50e:	ac 01       	movw	r20, r24
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	80 e8       	ldi	r24, 0x80	; 128
     516:	90 e4       	ldi	r25, 0x40	; 64
     518:	0e 94 9c 06 	call	0xd38	; 0xd38 <pow>
     51c:	9b 01       	movw	r18, r22
     51e:	ac 01       	movw	r20, r24
     520:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3>
     524:	9b 01       	movw	r18, r22
     526:	ac 01       	movw	r20, r24
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	80 e8       	ldi	r24, 0x80	; 128
     52e:	9f e4       	ldi	r25, 0x4F	; 79
     530:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__divsf3>
     534:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__fixunssfsi>
     538:	60 b9       	out	0x00, r22	; 0
     53a:	08 95       	ret

0000053c <I2C_Start>:
     53c:	94 ea       	ldi	r25, 0xA4	; 164
     53e:	96 bf       	out	0x36, r25	; 54
     540:	06 b6       	in	r0, 0x36	; 54
     542:	07 fe       	sbrs	r0, 7
     544:	fd cf       	rjmp	.-6      	; 0x540 <I2C_Start+0x4>
     546:	83 b9       	out	0x03, r24	; 3
     548:	84 e8       	ldi	r24, 0x84	; 132
     54a:	86 bf       	out	0x36, r24	; 54
     54c:	06 b6       	in	r0, 0x36	; 54
     54e:	07 fe       	sbrs	r0, 7
     550:	fd cf       	rjmp	.-6      	; 0x54c <I2C_Start+0x10>
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	08 95       	ret

00000556 <I2C_Repeated_Start>:
     556:	94 ea       	ldi	r25, 0xA4	; 164
     558:	96 bf       	out	0x36, r25	; 54
     55a:	06 b6       	in	r0, 0x36	; 54
     55c:	07 fe       	sbrs	r0, 7
     55e:	fd cf       	rjmp	.-6      	; 0x55a <I2C_Repeated_Start+0x4>
     560:	83 b9       	out	0x03, r24	; 3
     562:	84 e8       	ldi	r24, 0x84	; 132
     564:	86 bf       	out	0x36, r24	; 54
     566:	06 b6       	in	r0, 0x36	; 54
     568:	07 fe       	sbrs	r0, 7
     56a:	fd cf       	rjmp	.-6      	; 0x566 <I2C_Repeated_Start+0x10>
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	08 95       	ret

00000570 <I2C_Read_Nack>:
     570:	84 e8       	ldi	r24, 0x84	; 132
     572:	86 bf       	out	0x36, r24	; 54
     574:	06 b6       	in	r0, 0x36	; 54
     576:	07 fe       	sbrs	r0, 7
     578:	fd cf       	rjmp	.-6      	; 0x574 <I2C_Read_Nack+0x4>
     57a:	83 b1       	in	r24, 0x03	; 3
     57c:	08 95       	ret

0000057e <I2C_Stop>:
     57e:	84 e9       	ldi	r24, 0x94	; 148
     580:	86 bf       	out	0x36, r24	; 54
     582:	86 b7       	in	r24, 0x36	; 54
     584:	08 95       	ret

00000586 <decimal_to_bcd>:
     586:	9d ec       	ldi	r25, 0xCD	; 205
     588:	89 9f       	mul	r24, r25
     58a:	91 2d       	mov	r25, r1
     58c:	11 24       	eor	r1, r1
     58e:	96 95       	lsr	r25
     590:	96 95       	lsr	r25
     592:	96 95       	lsr	r25
     594:	39 2f       	mov	r19, r25
     596:	33 0f       	add	r19, r19
     598:	23 2f       	mov	r18, r19
     59a:	22 0f       	add	r18, r18
     59c:	22 0f       	add	r18, r18
     59e:	23 0f       	add	r18, r19
     5a0:	82 1b       	sub	r24, r18
     5a2:	30 e1       	ldi	r19, 0x10	; 16
     5a4:	93 9f       	mul	r25, r19
     5a6:	80 0d       	add	r24, r0
     5a8:	11 24       	eor	r1, r1
     5aa:	08 95       	ret

000005ac <current_water_temperature>:
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	0e 94 44 02 	call	0x488	; 0x488 <on_off_7_segment>
     5b4:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <x>
     5b8:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <x+0x1>
     5bc:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <x+0x2>
     5c0:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <x+0x3>
     5c4:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__fixunssfsi>
     5c8:	86 2f       	mov	r24, r22
     5ca:	0e 94 c3 02 	call	0x586	; 0x586 <decimal_to_bcd>
     5ce:	82 bb       	out	0x12, r24	; 18
     5d0:	08 95       	ret

000005d2 <I2C_Write>:
     5d2:	0e 94 c3 02 	call	0x586	; 0x586 <decimal_to_bcd>
     5d6:	83 b9       	out	0x03, r24	; 3
     5d8:	84 e8       	ldi	r24, 0x84	; 132
     5da:	86 bf       	out	0x36, r24	; 54
     5dc:	06 b6       	in	r0, 0x36	; 54
     5de:	07 fe       	sbrs	r0, 7
     5e0:	fd cf       	rjmp	.-6      	; 0x5dc <I2C_Write+0xa>
     5e2:	08 95       	ret

000005e4 <EEPROM_write_read>:

u8 EEPROM_write_read(u8 stored_data)
{
     5e4:	cf 93       	push	r28
     5e6:	c8 2f       	mov	r28, r24
	u8 data;
	I2C_Init();
     5e8:	0e 94 7e 02 	call	0x4fc	; 0x4fc <I2C_Init>
	I2C_Start(0xA0);
     5ec:	80 ea       	ldi	r24, 0xA0	; 160
     5ee:	0e 94 9e 02 	call	0x53c	; 0x53c <I2C_Start>
	I2C_Write(stored_data);
     5f2:	8c 2f       	mov	r24, r28
     5f4:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <I2C_Write>
	I2C_Repeated_Start(0xA1);
     5f8:	81 ea       	ldi	r24, 0xA1	; 161
     5fa:	0e 94 ab 02 	call	0x556	; 0x556 <I2C_Repeated_Start>
	data=I2C_Read_Nack ();
     5fe:	0e 94 b8 02 	call	0x570	; 0x570 <I2C_Read_Nack>
     602:	c8 2f       	mov	r28, r24
	I2C_Stop();
     604:	0e 94 bf 02 	call	0x57e	; 0x57e <I2C_Stop>
	return data;
	
}
     608:	8c 2f       	mov	r24, r28
     60a:	cf 91       	pop	r28
     60c:	08 95       	ret

0000060e <setting_temp>:

void setting_temp(void)

{
	
	if(PINB&(1<<3)&&counter<3 )
     60e:	b3 9b       	sbis	0x16, 3	; 22
     610:	1d c0       	rjmp	.+58     	; 0x64c <setting_temp+0x3e>
     612:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <counter>
     616:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <counter+0x1>
     61a:	83 30       	cpi	r24, 0x03	; 3
     61c:	91 05       	cpc	r25, r1
     61e:	b4 f4       	brge	.+44     	; 0x64c <setting_temp+0x3e>
	{
		counter++;
     620:	01 96       	adiw	r24, 0x01	; 1
     622:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <counter+0x1>
     626:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <counter>
		counter_for_Timer=0;
     62a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     62e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     632:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     636:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     63a:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     63e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     642:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     646:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     64a:	34 c0       	rjmp	.+104    	; 0x6b4 <setting_temp+0xa6>
	}
	else if(PINB&(1<<2)&&counter>-5)
     64c:	b2 9b       	sbis	0x16, 2	; 22
     64e:	1e c0       	rjmp	.+60     	; 0x68c <setting_temp+0x7e>
     650:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <counter>
     654:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <counter+0x1>
     658:	8c 3f       	cpi	r24, 0xFC	; 252
     65a:	2f ef       	ldi	r18, 0xFF	; 255
     65c:	92 07       	cpc	r25, r18
     65e:	b4 f0       	brlt	.+44     	; 0x68c <setting_temp+0x7e>
	{
		counter--;
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <counter+0x1>
     666:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <counter>
		counter_for_Timer=0;
     66a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     66e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     672:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     676:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     67a:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     67e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     682:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     686:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     68a:	14 c0       	rjmp	.+40     	; 0x6b4 <setting_temp+0xa6>
	}
	
	else if (PINB&(1<<3) || PINB&(1<<2))
     68c:	b3 99       	sbic	0x16, 3	; 22
     68e:	02 c0       	rjmp	.+4      	; 0x694 <setting_temp+0x86>
     690:	b2 9b       	sbis	0x16, 2	; 22
     692:	10 c0       	rjmp	.+32     	; 0x6b4 <setting_temp+0xa6>
	{
		counter_for_Timer=0;
     694:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     698:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     69c:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     6a0:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     6a4:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     6a8:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     6ac:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     6b0:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	}
	switch(counter)
     6b4:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <counter>
     6b8:	f0 91 6c 00 	lds	r31, 0x006C	; 0x80006c <counter+0x1>
     6bc:	35 96       	adiw	r30, 0x05	; 5
     6be:	e9 30       	cpi	r30, 0x09	; 9
     6c0:	f1 05       	cpc	r31, r1
     6c2:	f0 f4       	brcc	.+60     	; 0x700 <setting_temp+0xf2>
     6c4:	ed 5c       	subi	r30, 0xCD	; 205
     6c6:	ff 4f       	sbci	r31, 0xFF	; 255
     6c8:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__tablejump2__>
	{
		case 1:
		PORTD=0x65;
     6cc:	85 e6       	ldi	r24, 0x65	; 101
     6ce:	82 bb       	out	0x12, r24	; 18
		break;
     6d0:	17 c0       	rjmp	.+46     	; 0x700 <setting_temp+0xf2>
		case -1:
		PORTD=0x55;
     6d2:	85 e5       	ldi	r24, 0x55	; 85
     6d4:	82 bb       	out	0x12, r24	; 18
		break;
     6d6:	14 c0       	rjmp	.+40     	; 0x700 <setting_temp+0xf2>
		case 2:
		PORTD=0x70;
     6d8:	80 e7       	ldi	r24, 0x70	; 112
     6da:	82 bb       	out	0x12, r24	; 18
		break;
     6dc:	11 c0       	rjmp	.+34     	; 0x700 <setting_temp+0xf2>
		case -2:
		PORTD=0x50;
     6de:	80 e5       	ldi	r24, 0x50	; 80
     6e0:	82 bb       	out	0x12, r24	; 18
		break;
     6e2:	0e c0       	rjmp	.+28     	; 0x700 <setting_temp+0xf2>
		case 3:
		PORTD=0x75;
     6e4:	85 e7       	ldi	r24, 0x75	; 117
     6e6:	82 bb       	out	0x12, r24	; 18
		break;
     6e8:	0b c0       	rjmp	.+22     	; 0x700 <setting_temp+0xf2>
		case -3:
		PORTD=0x45;
     6ea:	85 e4       	ldi	r24, 0x45	; 69
     6ec:	82 bb       	out	0x12, r24	; 18
		break;
     6ee:	08 c0       	rjmp	.+16     	; 0x700 <setting_temp+0xf2>
		case 0:
		PORTD=0x60;
     6f0:	80 e6       	ldi	r24, 0x60	; 96
     6f2:	82 bb       	out	0x12, r24	; 18
		break;
     6f4:	05 c0       	rjmp	.+10     	; 0x700 <setting_temp+0xf2>
		case -4:
		PORTD=0x40;
     6f6:	80 e4       	ldi	r24, 0x40	; 64
     6f8:	82 bb       	out	0x12, r24	; 18
		break;
     6fa:	02 c0       	rjmp	.+4      	; 0x700 <setting_temp+0xf2>
		case -5:
		PORTD=0x35;
     6fc:	85 e3       	ldi	r24, 0x35	; 53
     6fe:	82 bb       	out	0x12, r24	; 18
		break;
	}
	
	EEPROM_write_read(counter);   // store value of counter to read it in EEPROM
     700:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <counter>
     704:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <EEPROM_write_read>
     708:	08 95       	ret

0000070a <ON_MODE_Process>:
	
}

void ON_MODE_Process (void)
{
	while(flag==1)
     70a:	8d c0       	rjmp	.+282    	; 0x826 <ON_MODE_Process+0x11c>
	{
		
		current_water_temperature();
     70c:	0e 94 d6 02 	call	0x5ac	; 0x5ac <current_water_temperature>
		ELEMENTS();
     710:	0e 94 e6 01 	call	0x3cc	; 0x3cc <ELEMENTS>
		on_off_mode();
     714:	0e 94 63 02 	call	0x4c6	; 0x4c6 <on_off_mode>
		if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
     718:	b3 99       	sbic	0x16, 3	; 22
     71a:	5b c0       	rjmp	.+182    	; 0x7d2 <ON_MODE_Process+0xc8>
     71c:	b2 99       	sbic	0x16, 2	; 22
     71e:	59 c0       	rjmp	.+178    	; 0x7d2 <ON_MODE_Process+0xc8>
     720:	82 c0       	rjmp	.+260    	; 0x826 <ON_MODE_Process+0x11c>
		{
			
			while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
			{
				on_off_7_segment(1);
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	0e 94 44 02 	call	0x488	; 0x488 <on_off_7_segment>
				setting_temp();
     728:	0e 94 07 03 	call	0x60e	; 0x60e <setting_temp>
				ELEMENTS();
     72c:	0e 94 e6 01 	call	0x3cc	; 0x3cc <ELEMENTS>
				on_off_mode();
     730:	0e 94 63 02 	call	0x4c6	; 0x4c6 <on_off_mode>
				counter_for_Timer++;
     734:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     738:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     73c:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     740:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     744:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     748:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     74c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     750:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     754:	a1 e0       	ldi	r26, 0x01	; 1
     756:	0e 94 27 08 	call	0x104e	; 0x104e <__adddi3_s8>
     75a:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
     75e:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     762:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     766:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     76a:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     76e:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     772:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     776:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
				on_off_7_segment(0);
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	0e 94 44 02 	call	0x488	; 0x488 <on_off_7_segment>
				setting_temp();
     780:	0e 94 07 03 	call	0x60e	; 0x60e <setting_temp>
				ELEMENTS();
     784:	0e 94 e6 01 	call	0x3cc	; 0x3cc <ELEMENTS>
				on_off_mode();
     788:	0e 94 63 02 	call	0x4c6	; 0x4c6 <on_off_mode>
				counter_for_Timer++;
     78c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     790:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     794:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     798:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     79c:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     7a0:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     7a4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     7a8:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     7ac:	a1 e0       	ldi	r26, 0x01	; 1
     7ae:	0e 94 27 08 	call	0x104e	; 0x104e <__adddi3_s8>
     7b2:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
     7b6:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     7ba:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     7be:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     7c2:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     7c6:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     7ca:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     7ce:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		ELEMENTS();
		on_off_mode();
		if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
		{
			
			while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
     7d2:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     7d6:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     7da:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     7de:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     7e2:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     7e6:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     7ea:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     7ee:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     7f2:	a9 e0       	ldi	r26, 0x09	; 9
     7f4:	0e 94 33 08 	call	0x1066	; 0x1066 <__cmpdi2_s8>
     7f8:	09 f0       	breq	.+2      	; 0x7fc <ON_MODE_Process+0xf2>
     7fa:	2c f4       	brge	.+10     	; 0x806 <ON_MODE_Process+0xfc>
     7fc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     800:	81 30       	cpi	r24, 0x01	; 1
     802:	09 f4       	brne	.+2      	; 0x806 <ON_MODE_Process+0xfc>
     804:	8e cf       	rjmp	.-228    	; 0x722 <ON_MODE_Process+0x18>
				counter_for_Timer++;
				
				
				
			}
			counter_for_Timer=0;
     806:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     80a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     80e:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     812:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     816:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     81a:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     81e:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     822:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	
}

void ON_MODE_Process (void)
{
	while(flag==1)
     826:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     82a:	81 30       	cpi	r24, 0x01	; 1
     82c:	09 f4       	brne	.+2      	; 0x830 <ON_MODE_Process+0x126>
     82e:	6e cf       	rjmp	.-292    	; 0x70c <ON_MODE_Process+0x2>
				
			}
			counter_for_Timer=0;
		}
	}
}
     830:	08 95       	ret

00000832 <__vector_8>:
#ifndef INTERRUPT_H
#define INTERRUPT_H 
void Temperature_reading(void); 
#endif
ISR (TIMER1_OVF_vect)    // Timer1 ISR
{
     832:	1f 92       	push	r1
     834:	0f 92       	push	r0
     836:	0f b6       	in	r0, 0x3f	; 63
     838:	0f 92       	push	r0
     83a:	11 24       	eor	r1, r1
     83c:	2f 93       	push	r18
     83e:	3f 93       	push	r19
     840:	4f 93       	push	r20
     842:	5f 93       	push	r21
     844:	6f 93       	push	r22
     846:	7f 93       	push	r23
     848:	8f 93       	push	r24
     84a:	9f 93       	push	r25
     84c:	af 93       	push	r26
     84e:	bf 93       	push	r27
     850:	ef 93       	push	r30
     852:	ff 93       	push	r31
	TCNT1 = 65380;  // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64"
     854:	84 e6       	ldi	r24, 0x64	; 100
     856:	9f ef       	ldi	r25, 0xFF	; 255
     858:	9d bd       	out	0x2d, r25	; 45
     85a:	8c bd       	out	0x2c, r24	; 44
		Temperature_reading();  //read temperature each 100 ms 
     85c:	0e 94 57 01 	call	0x2ae	; 0x2ae <Temperature_reading>
	
		}
     860:	ff 91       	pop	r31
     862:	ef 91       	pop	r30
     864:	bf 91       	pop	r27
     866:	af 91       	pop	r26
     868:	9f 91       	pop	r25
     86a:	8f 91       	pop	r24
     86c:	7f 91       	pop	r23
     86e:	6f 91       	pop	r22
     870:	5f 91       	pop	r21
     872:	4f 91       	pop	r20
     874:	3f 91       	pop	r19
     876:	2f 91       	pop	r18
     878:	0f 90       	pop	r0
     87a:	0f be       	out	0x3f, r0	; 63
     87c:	0f 90       	pop	r0
     87e:	1f 90       	pop	r1
     880:	18 95       	reti

00000882 <INT_interrupt>:


void INT_interrupt (void)
{
	
	TCNT1 = 65380;   // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64" 
     882:	84 e6       	ldi	r24, 0x64	; 100
     884:	9f ef       	ldi	r25, 0xFF	; 255
     886:	9d bd       	out	0x2d, r25	; 45
     888:	8c bd       	out	0x2c, r24	; 44
	TCCR1A = 0x00;
     88a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1<<CS10) | (1<<CS12);;  // Timer mode with 1024 pre_scaler
     88c:	85 e0       	ldi	r24, 0x05	; 5
     88e:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1) ;   // Enable timer1 overflow interrupt(TOIE1)
     890:	84 e0       	ldi	r24, 0x04	; 4
     892:	89 bf       	out	0x39, r24	; 57
	sei();        // Enable global interrupts by setting global interrupt enable bit in SREG
     894:	78 94       	sei
     896:	08 95       	ret

00000898 <main>:
 when your program is compiled.

the main function that executes in this project*/
int main(void)
{
	DATA_DIRECTION_REGISTER('O','I'); //Activate all input/Outputs sensors,actuators Pins 
     898:	69 e4       	ldi	r22, 0x49	; 73
     89a:	8f e4       	ldi	r24, 0x4F	; 79
     89c:	0e 94 a6 00 	call	0x14c	; 0x14c <DATA_DIRECTION_REGISTER>
INT_interrupt(); //Initialize the internal Timer 1 Driver
     8a0:	0e 94 41 04 	call	0x882	; 0x882 <INT_interrupt>
ADC_init(); //Initialize the Analog/Digital converter Driver
     8a4:	0e 94 91 00 	call	0x122	; 0x122 <ADC_init>
Init_VARIABLES('S','S','I','R','R','R'); //Initialize All variables that used in this project by required values.
     8a8:	0f 2e       	mov	r0, r31
     8aa:	f2 e5       	ldi	r31, 0x52	; 82
     8ac:	ef 2e       	mov	r14, r31
     8ae:	f0 2d       	mov	r31, r0
     8b0:	02 e5       	ldi	r16, 0x52	; 82
     8b2:	22 e5       	ldi	r18, 0x52	; 82
     8b4:	49 e4       	ldi	r20, 0x49	; 73
     8b6:	63 e5       	ldi	r22, 0x53	; 83
     8b8:	83 e5       	ldi	r24, 0x53	; 83
     8ba:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <Init_VARIABLES>
    /* super loop for repeating process infinitely number of cycles */
    while (1) 
    {
		on_off_mode();  // wait until user switch on the Heater.
     8be:	0e 94 63 02 	call	0x4c6	; 0x4c6 <on_off_mode>
		if(flag==1) 
     8c2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     8c6:	81 30       	cpi	r24, 0x01	; 1
     8c8:	d1 f7       	brne	.-12     	; 0x8be <main+0x26>
		; so that It will execute this scope*/
		{
			/*The main Process will execute that covered all requirements of project
			with asking user if the Heater is set/Reset for each cycle Until the Flag 
			reset terminates this scope. */
			ON_MODE_Process (); 
     8ca:	0e 94 85 03 	call	0x70a	; 0x70a <ON_MODE_Process>
			/*Monitoring On/OFF mode the change the state of flag according to On/OFF switch*/
			on_off_mode();
     8ce:	0e 94 63 02 	call	0x4c6	; 0x4c6 <on_off_mode>
     8d2:	f5 cf       	rjmp	.-22     	; 0x8be <main+0x26>

000008d4 <__subsf3>:
     8d4:	50 58       	subi	r21, 0x80	; 128

000008d6 <__addsf3>:
     8d6:	bb 27       	eor	r27, r27
     8d8:	aa 27       	eor	r26, r26
     8da:	0e 94 82 04 	call	0x904	; 0x904 <__addsf3x>
     8de:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_round>
     8e2:	0e 94 e7 05 	call	0xbce	; 0xbce <__fp_pscA>
     8e6:	38 f0       	brcs	.+14     	; 0x8f6 <__addsf3+0x20>
     8e8:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_pscB>
     8ec:	20 f0       	brcs	.+8      	; 0x8f6 <__addsf3+0x20>
     8ee:	39 f4       	brne	.+14     	; 0x8fe <__addsf3+0x28>
     8f0:	9f 3f       	cpi	r25, 0xFF	; 255
     8f2:	19 f4       	brne	.+6      	; 0x8fa <__addsf3+0x24>
     8f4:	26 f4       	brtc	.+8      	; 0x8fe <__addsf3+0x28>
     8f6:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_nan>
     8fa:	0e f4       	brtc	.+2      	; 0x8fe <__addsf3+0x28>
     8fc:	e0 95       	com	r30
     8fe:	e7 fb       	bst	r30, 7
     900:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>

00000904 <__addsf3x>:
     904:	e9 2f       	mov	r30, r25
     906:	0e 94 06 06 	call	0xc0c	; 0xc0c <__fp_split3>
     90a:	58 f3       	brcs	.-42     	; 0x8e2 <__addsf3+0xc>
     90c:	ba 17       	cp	r27, r26
     90e:	62 07       	cpc	r22, r18
     910:	73 07       	cpc	r23, r19
     912:	84 07       	cpc	r24, r20
     914:	95 07       	cpc	r25, r21
     916:	20 f0       	brcs	.+8      	; 0x920 <__addsf3x+0x1c>
     918:	79 f4       	brne	.+30     	; 0x938 <__addsf3x+0x34>
     91a:	a6 f5       	brtc	.+104    	; 0x984 <__addsf3x+0x80>
     91c:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__fp_zero>
     920:	0e f4       	brtc	.+2      	; 0x924 <__addsf3x+0x20>
     922:	e0 95       	com	r30
     924:	0b 2e       	mov	r0, r27
     926:	ba 2f       	mov	r27, r26
     928:	a0 2d       	mov	r26, r0
     92a:	0b 01       	movw	r0, r22
     92c:	b9 01       	movw	r22, r18
     92e:	90 01       	movw	r18, r0
     930:	0c 01       	movw	r0, r24
     932:	ca 01       	movw	r24, r20
     934:	a0 01       	movw	r20, r0
     936:	11 24       	eor	r1, r1
     938:	ff 27       	eor	r31, r31
     93a:	59 1b       	sub	r21, r25
     93c:	99 f0       	breq	.+38     	; 0x964 <__addsf3x+0x60>
     93e:	59 3f       	cpi	r21, 0xF9	; 249
     940:	50 f4       	brcc	.+20     	; 0x956 <__addsf3x+0x52>
     942:	50 3e       	cpi	r21, 0xE0	; 224
     944:	68 f1       	brcs	.+90     	; 0x9a0 <__addsf3x+0x9c>
     946:	1a 16       	cp	r1, r26
     948:	f0 40       	sbci	r31, 0x00	; 0
     94a:	a2 2f       	mov	r26, r18
     94c:	23 2f       	mov	r18, r19
     94e:	34 2f       	mov	r19, r20
     950:	44 27       	eor	r20, r20
     952:	58 5f       	subi	r21, 0xF8	; 248
     954:	f3 cf       	rjmp	.-26     	; 0x93c <__addsf3x+0x38>
     956:	46 95       	lsr	r20
     958:	37 95       	ror	r19
     95a:	27 95       	ror	r18
     95c:	a7 95       	ror	r26
     95e:	f0 40       	sbci	r31, 0x00	; 0
     960:	53 95       	inc	r21
     962:	c9 f7       	brne	.-14     	; 0x956 <__addsf3x+0x52>
     964:	7e f4       	brtc	.+30     	; 0x984 <__addsf3x+0x80>
     966:	1f 16       	cp	r1, r31
     968:	ba 0b       	sbc	r27, r26
     96a:	62 0b       	sbc	r22, r18
     96c:	73 0b       	sbc	r23, r19
     96e:	84 0b       	sbc	r24, r20
     970:	ba f0       	brmi	.+46     	; 0x9a0 <__addsf3x+0x9c>
     972:	91 50       	subi	r25, 0x01	; 1
     974:	a1 f0       	breq	.+40     	; 0x99e <__addsf3x+0x9a>
     976:	ff 0f       	add	r31, r31
     978:	bb 1f       	adc	r27, r27
     97a:	66 1f       	adc	r22, r22
     97c:	77 1f       	adc	r23, r23
     97e:	88 1f       	adc	r24, r24
     980:	c2 f7       	brpl	.-16     	; 0x972 <__addsf3x+0x6e>
     982:	0e c0       	rjmp	.+28     	; 0x9a0 <__addsf3x+0x9c>
     984:	ba 0f       	add	r27, r26
     986:	62 1f       	adc	r22, r18
     988:	73 1f       	adc	r23, r19
     98a:	84 1f       	adc	r24, r20
     98c:	48 f4       	brcc	.+18     	; 0x9a0 <__addsf3x+0x9c>
     98e:	87 95       	ror	r24
     990:	77 95       	ror	r23
     992:	67 95       	ror	r22
     994:	b7 95       	ror	r27
     996:	f7 95       	ror	r31
     998:	9e 3f       	cpi	r25, 0xFE	; 254
     99a:	08 f0       	brcs	.+2      	; 0x99e <__addsf3x+0x9a>
     99c:	b0 cf       	rjmp	.-160    	; 0x8fe <__addsf3+0x28>
     99e:	93 95       	inc	r25
     9a0:	88 0f       	add	r24, r24
     9a2:	08 f0       	brcs	.+2      	; 0x9a6 <__addsf3x+0xa2>
     9a4:	99 27       	eor	r25, r25
     9a6:	ee 0f       	add	r30, r30
     9a8:	97 95       	ror	r25
     9aa:	87 95       	ror	r24
     9ac:	08 95       	ret

000009ae <__cmpsf2>:
     9ae:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fp_cmp>
     9b2:	08 f4       	brcc	.+2      	; 0x9b6 <__cmpsf2+0x8>
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	08 95       	ret

000009b8 <__divsf3>:
     9b8:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__divsf3x>
     9bc:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_round>
     9c0:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_pscB>
     9c4:	58 f0       	brcs	.+22     	; 0x9dc <__divsf3+0x24>
     9c6:	0e 94 e7 05 	call	0xbce	; 0xbce <__fp_pscA>
     9ca:	40 f0       	brcs	.+16     	; 0x9dc <__divsf3+0x24>
     9cc:	29 f4       	brne	.+10     	; 0x9d8 <__divsf3+0x20>
     9ce:	5f 3f       	cpi	r21, 0xFF	; 255
     9d0:	29 f0       	breq	.+10     	; 0x9dc <__divsf3+0x24>
     9d2:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>
     9d6:	51 11       	cpse	r21, r1
     9d8:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_szero>
     9dc:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_nan>

000009e0 <__divsf3x>:
     9e0:	0e 94 06 06 	call	0xc0c	; 0xc0c <__fp_split3>
     9e4:	68 f3       	brcs	.-38     	; 0x9c0 <__divsf3+0x8>

000009e6 <__divsf3_pse>:
     9e6:	99 23       	and	r25, r25
     9e8:	b1 f3       	breq	.-20     	; 0x9d6 <__divsf3+0x1e>
     9ea:	55 23       	and	r21, r21
     9ec:	91 f3       	breq	.-28     	; 0x9d2 <__divsf3+0x1a>
     9ee:	95 1b       	sub	r25, r21
     9f0:	55 0b       	sbc	r21, r21
     9f2:	bb 27       	eor	r27, r27
     9f4:	aa 27       	eor	r26, r26
     9f6:	62 17       	cp	r22, r18
     9f8:	73 07       	cpc	r23, r19
     9fa:	84 07       	cpc	r24, r20
     9fc:	38 f0       	brcs	.+14     	; 0xa0c <__divsf3_pse+0x26>
     9fe:	9f 5f       	subi	r25, 0xFF	; 255
     a00:	5f 4f       	sbci	r21, 0xFF	; 255
     a02:	22 0f       	add	r18, r18
     a04:	33 1f       	adc	r19, r19
     a06:	44 1f       	adc	r20, r20
     a08:	aa 1f       	adc	r26, r26
     a0a:	a9 f3       	breq	.-22     	; 0x9f6 <__divsf3_pse+0x10>
     a0c:	35 d0       	rcall	.+106    	; 0xa78 <__divsf3_pse+0x92>
     a0e:	0e 2e       	mov	r0, r30
     a10:	3a f0       	brmi	.+14     	; 0xa20 <__divsf3_pse+0x3a>
     a12:	e0 e8       	ldi	r30, 0x80	; 128
     a14:	32 d0       	rcall	.+100    	; 0xa7a <__divsf3_pse+0x94>
     a16:	91 50       	subi	r25, 0x01	; 1
     a18:	50 40       	sbci	r21, 0x00	; 0
     a1a:	e6 95       	lsr	r30
     a1c:	00 1c       	adc	r0, r0
     a1e:	ca f7       	brpl	.-14     	; 0xa12 <__divsf3_pse+0x2c>
     a20:	2b d0       	rcall	.+86     	; 0xa78 <__divsf3_pse+0x92>
     a22:	fe 2f       	mov	r31, r30
     a24:	29 d0       	rcall	.+82     	; 0xa78 <__divsf3_pse+0x92>
     a26:	66 0f       	add	r22, r22
     a28:	77 1f       	adc	r23, r23
     a2a:	88 1f       	adc	r24, r24
     a2c:	bb 1f       	adc	r27, r27
     a2e:	26 17       	cp	r18, r22
     a30:	37 07       	cpc	r19, r23
     a32:	48 07       	cpc	r20, r24
     a34:	ab 07       	cpc	r26, r27
     a36:	b0 e8       	ldi	r27, 0x80	; 128
     a38:	09 f0       	breq	.+2      	; 0xa3c <__divsf3_pse+0x56>
     a3a:	bb 0b       	sbc	r27, r27
     a3c:	80 2d       	mov	r24, r0
     a3e:	bf 01       	movw	r22, r30
     a40:	ff 27       	eor	r31, r31
     a42:	93 58       	subi	r25, 0x83	; 131
     a44:	5f 4f       	sbci	r21, 0xFF	; 255
     a46:	3a f0       	brmi	.+14     	; 0xa56 <__divsf3_pse+0x70>
     a48:	9e 3f       	cpi	r25, 0xFE	; 254
     a4a:	51 05       	cpc	r21, r1
     a4c:	78 f0       	brcs	.+30     	; 0xa6c <__divsf3_pse+0x86>
     a4e:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>
     a52:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_szero>
     a56:	5f 3f       	cpi	r21, 0xFF	; 255
     a58:	e4 f3       	brlt	.-8      	; 0xa52 <__divsf3_pse+0x6c>
     a5a:	98 3e       	cpi	r25, 0xE8	; 232
     a5c:	d4 f3       	brlt	.-12     	; 0xa52 <__divsf3_pse+0x6c>
     a5e:	86 95       	lsr	r24
     a60:	77 95       	ror	r23
     a62:	67 95       	ror	r22
     a64:	b7 95       	ror	r27
     a66:	f7 95       	ror	r31
     a68:	9f 5f       	subi	r25, 0xFF	; 255
     a6a:	c9 f7       	brne	.-14     	; 0xa5e <__divsf3_pse+0x78>
     a6c:	88 0f       	add	r24, r24
     a6e:	91 1d       	adc	r25, r1
     a70:	96 95       	lsr	r25
     a72:	87 95       	ror	r24
     a74:	97 f9       	bld	r25, 7
     a76:	08 95       	ret
     a78:	e1 e0       	ldi	r30, 0x01	; 1
     a7a:	66 0f       	add	r22, r22
     a7c:	77 1f       	adc	r23, r23
     a7e:	88 1f       	adc	r24, r24
     a80:	bb 1f       	adc	r27, r27
     a82:	62 17       	cp	r22, r18
     a84:	73 07       	cpc	r23, r19
     a86:	84 07       	cpc	r24, r20
     a88:	ba 07       	cpc	r27, r26
     a8a:	20 f0       	brcs	.+8      	; 0xa94 <__divsf3_pse+0xae>
     a8c:	62 1b       	sub	r22, r18
     a8e:	73 0b       	sbc	r23, r19
     a90:	84 0b       	sbc	r24, r20
     a92:	ba 0b       	sbc	r27, r26
     a94:	ee 1f       	adc	r30, r30
     a96:	88 f7       	brcc	.-30     	; 0xa7a <__divsf3_pse+0x94>
     a98:	e0 95       	com	r30
     a9a:	08 95       	ret

00000a9c <__fixunssfsi>:
     a9c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__fp_splitA>
     aa0:	88 f0       	brcs	.+34     	; 0xac4 <__fixunssfsi+0x28>
     aa2:	9f 57       	subi	r25, 0x7F	; 127
     aa4:	98 f0       	brcs	.+38     	; 0xacc <__fixunssfsi+0x30>
     aa6:	b9 2f       	mov	r27, r25
     aa8:	99 27       	eor	r25, r25
     aaa:	b7 51       	subi	r27, 0x17	; 23
     aac:	b0 f0       	brcs	.+44     	; 0xada <__fixunssfsi+0x3e>
     aae:	e1 f0       	breq	.+56     	; 0xae8 <__fixunssfsi+0x4c>
     ab0:	66 0f       	add	r22, r22
     ab2:	77 1f       	adc	r23, r23
     ab4:	88 1f       	adc	r24, r24
     ab6:	99 1f       	adc	r25, r25
     ab8:	1a f0       	brmi	.+6      	; 0xac0 <__fixunssfsi+0x24>
     aba:	ba 95       	dec	r27
     abc:	c9 f7       	brne	.-14     	; 0xab0 <__fixunssfsi+0x14>
     abe:	14 c0       	rjmp	.+40     	; 0xae8 <__fixunssfsi+0x4c>
     ac0:	b1 30       	cpi	r27, 0x01	; 1
     ac2:	91 f0       	breq	.+36     	; 0xae8 <__fixunssfsi+0x4c>
     ac4:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_zero>
     ac8:	b1 e0       	ldi	r27, 0x01	; 1
     aca:	08 95       	ret
     acc:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__fp_zero>
     ad0:	67 2f       	mov	r22, r23
     ad2:	78 2f       	mov	r23, r24
     ad4:	88 27       	eor	r24, r24
     ad6:	b8 5f       	subi	r27, 0xF8	; 248
     ad8:	39 f0       	breq	.+14     	; 0xae8 <__fixunssfsi+0x4c>
     ada:	b9 3f       	cpi	r27, 0xF9	; 249
     adc:	cc f3       	brlt	.-14     	; 0xad0 <__fixunssfsi+0x34>
     ade:	86 95       	lsr	r24
     ae0:	77 95       	ror	r23
     ae2:	67 95       	ror	r22
     ae4:	b3 95       	inc	r27
     ae6:	d9 f7       	brne	.-10     	; 0xade <__fixunssfsi+0x42>
     ae8:	3e f4       	brtc	.+14     	; 0xaf8 <__fixunssfsi+0x5c>
     aea:	90 95       	com	r25
     aec:	80 95       	com	r24
     aee:	70 95       	com	r23
     af0:	61 95       	neg	r22
     af2:	7f 4f       	sbci	r23, 0xFF	; 255
     af4:	8f 4f       	sbci	r24, 0xFF	; 255
     af6:	9f 4f       	sbci	r25, 0xFF	; 255
     af8:	08 95       	ret

00000afa <__floatunsisf>:
     afa:	e8 94       	clt
     afc:	09 c0       	rjmp	.+18     	; 0xb10 <__floatsisf+0x12>

00000afe <__floatsisf>:
     afe:	97 fb       	bst	r25, 7
     b00:	3e f4       	brtc	.+14     	; 0xb10 <__floatsisf+0x12>
     b02:	90 95       	com	r25
     b04:	80 95       	com	r24
     b06:	70 95       	com	r23
     b08:	61 95       	neg	r22
     b0a:	7f 4f       	sbci	r23, 0xFF	; 255
     b0c:	8f 4f       	sbci	r24, 0xFF	; 255
     b0e:	9f 4f       	sbci	r25, 0xFF	; 255
     b10:	99 23       	and	r25, r25
     b12:	a9 f0       	breq	.+42     	; 0xb3e <__floatsisf+0x40>
     b14:	f9 2f       	mov	r31, r25
     b16:	96 e9       	ldi	r25, 0x96	; 150
     b18:	bb 27       	eor	r27, r27
     b1a:	93 95       	inc	r25
     b1c:	f6 95       	lsr	r31
     b1e:	87 95       	ror	r24
     b20:	77 95       	ror	r23
     b22:	67 95       	ror	r22
     b24:	b7 95       	ror	r27
     b26:	f1 11       	cpse	r31, r1
     b28:	f8 cf       	rjmp	.-16     	; 0xb1a <__floatsisf+0x1c>
     b2a:	fa f4       	brpl	.+62     	; 0xb6a <__floatsisf+0x6c>
     b2c:	bb 0f       	add	r27, r27
     b2e:	11 f4       	brne	.+4      	; 0xb34 <__floatsisf+0x36>
     b30:	60 ff       	sbrs	r22, 0
     b32:	1b c0       	rjmp	.+54     	; 0xb6a <__floatsisf+0x6c>
     b34:	6f 5f       	subi	r22, 0xFF	; 255
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	8f 4f       	sbci	r24, 0xFF	; 255
     b3a:	9f 4f       	sbci	r25, 0xFF	; 255
     b3c:	16 c0       	rjmp	.+44     	; 0xb6a <__floatsisf+0x6c>
     b3e:	88 23       	and	r24, r24
     b40:	11 f0       	breq	.+4      	; 0xb46 <__floatsisf+0x48>
     b42:	96 e9       	ldi	r25, 0x96	; 150
     b44:	11 c0       	rjmp	.+34     	; 0xb68 <__floatsisf+0x6a>
     b46:	77 23       	and	r23, r23
     b48:	21 f0       	breq	.+8      	; 0xb52 <__floatsisf+0x54>
     b4a:	9e e8       	ldi	r25, 0x8E	; 142
     b4c:	87 2f       	mov	r24, r23
     b4e:	76 2f       	mov	r23, r22
     b50:	05 c0       	rjmp	.+10     	; 0xb5c <__floatsisf+0x5e>
     b52:	66 23       	and	r22, r22
     b54:	71 f0       	breq	.+28     	; 0xb72 <__floatsisf+0x74>
     b56:	96 e8       	ldi	r25, 0x86	; 134
     b58:	86 2f       	mov	r24, r22
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	2a f0       	brmi	.+10     	; 0xb6a <__floatsisf+0x6c>
     b60:	9a 95       	dec	r25
     b62:	66 0f       	add	r22, r22
     b64:	77 1f       	adc	r23, r23
     b66:	88 1f       	adc	r24, r24
     b68:	da f7       	brpl	.-10     	; 0xb60 <__floatsisf+0x62>
     b6a:	88 0f       	add	r24, r24
     b6c:	96 95       	lsr	r25
     b6e:	87 95       	ror	r24
     b70:	97 f9       	bld	r25, 7
     b72:	08 95       	ret

00000b74 <__fp_cmp>:
     b74:	99 0f       	add	r25, r25
     b76:	00 08       	sbc	r0, r0
     b78:	55 0f       	add	r21, r21
     b7a:	aa 0b       	sbc	r26, r26
     b7c:	e0 e8       	ldi	r30, 0x80	; 128
     b7e:	fe ef       	ldi	r31, 0xFE	; 254
     b80:	16 16       	cp	r1, r22
     b82:	17 06       	cpc	r1, r23
     b84:	e8 07       	cpc	r30, r24
     b86:	f9 07       	cpc	r31, r25
     b88:	c0 f0       	brcs	.+48     	; 0xbba <__fp_cmp+0x46>
     b8a:	12 16       	cp	r1, r18
     b8c:	13 06       	cpc	r1, r19
     b8e:	e4 07       	cpc	r30, r20
     b90:	f5 07       	cpc	r31, r21
     b92:	98 f0       	brcs	.+38     	; 0xbba <__fp_cmp+0x46>
     b94:	62 1b       	sub	r22, r18
     b96:	73 0b       	sbc	r23, r19
     b98:	84 0b       	sbc	r24, r20
     b9a:	95 0b       	sbc	r25, r21
     b9c:	39 f4       	brne	.+14     	; 0xbac <__fp_cmp+0x38>
     b9e:	0a 26       	eor	r0, r26
     ba0:	61 f0       	breq	.+24     	; 0xbba <__fp_cmp+0x46>
     ba2:	23 2b       	or	r18, r19
     ba4:	24 2b       	or	r18, r20
     ba6:	25 2b       	or	r18, r21
     ba8:	21 f4       	brne	.+8      	; 0xbb2 <__fp_cmp+0x3e>
     baa:	08 95       	ret
     bac:	0a 26       	eor	r0, r26
     bae:	09 f4       	brne	.+2      	; 0xbb2 <__fp_cmp+0x3e>
     bb0:	a1 40       	sbci	r26, 0x01	; 1
     bb2:	a6 95       	lsr	r26
     bb4:	8f ef       	ldi	r24, 0xFF	; 255
     bb6:	81 1d       	adc	r24, r1
     bb8:	81 1d       	adc	r24, r1
     bba:	08 95       	ret

00000bbc <__fp_inf>:
     bbc:	97 f9       	bld	r25, 7
     bbe:	9f 67       	ori	r25, 0x7F	; 127
     bc0:	80 e8       	ldi	r24, 0x80	; 128
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	08 95       	ret

00000bc8 <__fp_nan>:
     bc8:	9f ef       	ldi	r25, 0xFF	; 255
     bca:	80 ec       	ldi	r24, 0xC0	; 192
     bcc:	08 95       	ret

00000bce <__fp_pscA>:
     bce:	00 24       	eor	r0, r0
     bd0:	0a 94       	dec	r0
     bd2:	16 16       	cp	r1, r22
     bd4:	17 06       	cpc	r1, r23
     bd6:	18 06       	cpc	r1, r24
     bd8:	09 06       	cpc	r0, r25
     bda:	08 95       	ret

00000bdc <__fp_pscB>:
     bdc:	00 24       	eor	r0, r0
     bde:	0a 94       	dec	r0
     be0:	12 16       	cp	r1, r18
     be2:	13 06       	cpc	r1, r19
     be4:	14 06       	cpc	r1, r20
     be6:	05 06       	cpc	r0, r21
     be8:	08 95       	ret

00000bea <__fp_round>:
     bea:	09 2e       	mov	r0, r25
     bec:	03 94       	inc	r0
     bee:	00 0c       	add	r0, r0
     bf0:	11 f4       	brne	.+4      	; 0xbf6 <__fp_round+0xc>
     bf2:	88 23       	and	r24, r24
     bf4:	52 f0       	brmi	.+20     	; 0xc0a <__fp_round+0x20>
     bf6:	bb 0f       	add	r27, r27
     bf8:	40 f4       	brcc	.+16     	; 0xc0a <__fp_round+0x20>
     bfa:	bf 2b       	or	r27, r31
     bfc:	11 f4       	brne	.+4      	; 0xc02 <__fp_round+0x18>
     bfe:	60 ff       	sbrs	r22, 0
     c00:	04 c0       	rjmp	.+8      	; 0xc0a <__fp_round+0x20>
     c02:	6f 5f       	subi	r22, 0xFF	; 255
     c04:	7f 4f       	sbci	r23, 0xFF	; 255
     c06:	8f 4f       	sbci	r24, 0xFF	; 255
     c08:	9f 4f       	sbci	r25, 0xFF	; 255
     c0a:	08 95       	ret

00000c0c <__fp_split3>:
     c0c:	57 fd       	sbrc	r21, 7
     c0e:	90 58       	subi	r25, 0x80	; 128
     c10:	44 0f       	add	r20, r20
     c12:	55 1f       	adc	r21, r21
     c14:	59 f0       	breq	.+22     	; 0xc2c <__fp_splitA+0x10>
     c16:	5f 3f       	cpi	r21, 0xFF	; 255
     c18:	71 f0       	breq	.+28     	; 0xc36 <__fp_splitA+0x1a>
     c1a:	47 95       	ror	r20

00000c1c <__fp_splitA>:
     c1c:	88 0f       	add	r24, r24
     c1e:	97 fb       	bst	r25, 7
     c20:	99 1f       	adc	r25, r25
     c22:	61 f0       	breq	.+24     	; 0xc3c <__fp_splitA+0x20>
     c24:	9f 3f       	cpi	r25, 0xFF	; 255
     c26:	79 f0       	breq	.+30     	; 0xc46 <__fp_splitA+0x2a>
     c28:	87 95       	ror	r24
     c2a:	08 95       	ret
     c2c:	12 16       	cp	r1, r18
     c2e:	13 06       	cpc	r1, r19
     c30:	14 06       	cpc	r1, r20
     c32:	55 1f       	adc	r21, r21
     c34:	f2 cf       	rjmp	.-28     	; 0xc1a <__fp_split3+0xe>
     c36:	46 95       	lsr	r20
     c38:	f1 df       	rcall	.-30     	; 0xc1c <__fp_splitA>
     c3a:	08 c0       	rjmp	.+16     	; 0xc4c <__fp_splitA+0x30>
     c3c:	16 16       	cp	r1, r22
     c3e:	17 06       	cpc	r1, r23
     c40:	18 06       	cpc	r1, r24
     c42:	99 1f       	adc	r25, r25
     c44:	f1 cf       	rjmp	.-30     	; 0xc28 <__fp_splitA+0xc>
     c46:	86 95       	lsr	r24
     c48:	71 05       	cpc	r23, r1
     c4a:	61 05       	cpc	r22, r1
     c4c:	08 94       	sec
     c4e:	08 95       	ret

00000c50 <__fp_zero>:
     c50:	e8 94       	clt

00000c52 <__fp_szero>:
     c52:	bb 27       	eor	r27, r27
     c54:	66 27       	eor	r22, r22
     c56:	77 27       	eor	r23, r23
     c58:	cb 01       	movw	r24, r22
     c5a:	97 f9       	bld	r25, 7
     c5c:	08 95       	ret

00000c5e <__mulsf3>:
     c5e:	0e 94 42 06 	call	0xc84	; 0xc84 <__mulsf3x>
     c62:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_round>
     c66:	0e 94 e7 05 	call	0xbce	; 0xbce <__fp_pscA>
     c6a:	38 f0       	brcs	.+14     	; 0xc7a <__mulsf3+0x1c>
     c6c:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_pscB>
     c70:	20 f0       	brcs	.+8      	; 0xc7a <__mulsf3+0x1c>
     c72:	95 23       	and	r25, r21
     c74:	11 f0       	breq	.+4      	; 0xc7a <__mulsf3+0x1c>
     c76:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>
     c7a:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_nan>
     c7e:	11 24       	eor	r1, r1
     c80:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_szero>

00000c84 <__mulsf3x>:
     c84:	0e 94 06 06 	call	0xc0c	; 0xc0c <__fp_split3>
     c88:	70 f3       	brcs	.-36     	; 0xc66 <__mulsf3+0x8>

00000c8a <__mulsf3_pse>:
     c8a:	95 9f       	mul	r25, r21
     c8c:	c1 f3       	breq	.-16     	; 0xc7e <__mulsf3+0x20>
     c8e:	95 0f       	add	r25, r21
     c90:	50 e0       	ldi	r21, 0x00	; 0
     c92:	55 1f       	adc	r21, r21
     c94:	62 9f       	mul	r22, r18
     c96:	f0 01       	movw	r30, r0
     c98:	72 9f       	mul	r23, r18
     c9a:	bb 27       	eor	r27, r27
     c9c:	f0 0d       	add	r31, r0
     c9e:	b1 1d       	adc	r27, r1
     ca0:	63 9f       	mul	r22, r19
     ca2:	aa 27       	eor	r26, r26
     ca4:	f0 0d       	add	r31, r0
     ca6:	b1 1d       	adc	r27, r1
     ca8:	aa 1f       	adc	r26, r26
     caa:	64 9f       	mul	r22, r20
     cac:	66 27       	eor	r22, r22
     cae:	b0 0d       	add	r27, r0
     cb0:	a1 1d       	adc	r26, r1
     cb2:	66 1f       	adc	r22, r22
     cb4:	82 9f       	mul	r24, r18
     cb6:	22 27       	eor	r18, r18
     cb8:	b0 0d       	add	r27, r0
     cba:	a1 1d       	adc	r26, r1
     cbc:	62 1f       	adc	r22, r18
     cbe:	73 9f       	mul	r23, r19
     cc0:	b0 0d       	add	r27, r0
     cc2:	a1 1d       	adc	r26, r1
     cc4:	62 1f       	adc	r22, r18
     cc6:	83 9f       	mul	r24, r19
     cc8:	a0 0d       	add	r26, r0
     cca:	61 1d       	adc	r22, r1
     ccc:	22 1f       	adc	r18, r18
     cce:	74 9f       	mul	r23, r20
     cd0:	33 27       	eor	r19, r19
     cd2:	a0 0d       	add	r26, r0
     cd4:	61 1d       	adc	r22, r1
     cd6:	23 1f       	adc	r18, r19
     cd8:	84 9f       	mul	r24, r20
     cda:	60 0d       	add	r22, r0
     cdc:	21 1d       	adc	r18, r1
     cde:	82 2f       	mov	r24, r18
     ce0:	76 2f       	mov	r23, r22
     ce2:	6a 2f       	mov	r22, r26
     ce4:	11 24       	eor	r1, r1
     ce6:	9f 57       	subi	r25, 0x7F	; 127
     ce8:	50 40       	sbci	r21, 0x00	; 0
     cea:	9a f0       	brmi	.+38     	; 0xd12 <__mulsf3_pse+0x88>
     cec:	f1 f0       	breq	.+60     	; 0xd2a <__mulsf3_pse+0xa0>
     cee:	88 23       	and	r24, r24
     cf0:	4a f0       	brmi	.+18     	; 0xd04 <__mulsf3_pse+0x7a>
     cf2:	ee 0f       	add	r30, r30
     cf4:	ff 1f       	adc	r31, r31
     cf6:	bb 1f       	adc	r27, r27
     cf8:	66 1f       	adc	r22, r22
     cfa:	77 1f       	adc	r23, r23
     cfc:	88 1f       	adc	r24, r24
     cfe:	91 50       	subi	r25, 0x01	; 1
     d00:	50 40       	sbci	r21, 0x00	; 0
     d02:	a9 f7       	brne	.-22     	; 0xcee <__mulsf3_pse+0x64>
     d04:	9e 3f       	cpi	r25, 0xFE	; 254
     d06:	51 05       	cpc	r21, r1
     d08:	80 f0       	brcs	.+32     	; 0xd2a <__mulsf3_pse+0xa0>
     d0a:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>
     d0e:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_szero>
     d12:	5f 3f       	cpi	r21, 0xFF	; 255
     d14:	e4 f3       	brlt	.-8      	; 0xd0e <__mulsf3_pse+0x84>
     d16:	98 3e       	cpi	r25, 0xE8	; 232
     d18:	d4 f3       	brlt	.-12     	; 0xd0e <__mulsf3_pse+0x84>
     d1a:	86 95       	lsr	r24
     d1c:	77 95       	ror	r23
     d1e:	67 95       	ror	r22
     d20:	b7 95       	ror	r27
     d22:	f7 95       	ror	r31
     d24:	e7 95       	ror	r30
     d26:	9f 5f       	subi	r25, 0xFF	; 255
     d28:	c1 f7       	brne	.-16     	; 0xd1a <__mulsf3_pse+0x90>
     d2a:	fe 2b       	or	r31, r30
     d2c:	88 0f       	add	r24, r24
     d2e:	91 1d       	adc	r25, r1
     d30:	96 95       	lsr	r25
     d32:	87 95       	ror	r24
     d34:	97 f9       	bld	r25, 7
     d36:	08 95       	ret

00000d38 <pow>:
     d38:	fa 01       	movw	r30, r20
     d3a:	ee 0f       	add	r30, r30
     d3c:	ff 1f       	adc	r31, r31
     d3e:	30 96       	adiw	r30, 0x00	; 0
     d40:	21 05       	cpc	r18, r1
     d42:	31 05       	cpc	r19, r1
     d44:	a1 f1       	breq	.+104    	; 0xdae <pow+0x76>
     d46:	61 15       	cp	r22, r1
     d48:	71 05       	cpc	r23, r1
     d4a:	61 f4       	brne	.+24     	; 0xd64 <pow+0x2c>
     d4c:	80 38       	cpi	r24, 0x80	; 128
     d4e:	bf e3       	ldi	r27, 0x3F	; 63
     d50:	9b 07       	cpc	r25, r27
     d52:	49 f1       	breq	.+82     	; 0xda6 <pow+0x6e>
     d54:	68 94       	set
     d56:	90 38       	cpi	r25, 0x80	; 128
     d58:	81 05       	cpc	r24, r1
     d5a:	61 f0       	breq	.+24     	; 0xd74 <pow+0x3c>
     d5c:	80 38       	cpi	r24, 0x80	; 128
     d5e:	bf ef       	ldi	r27, 0xFF	; 255
     d60:	9b 07       	cpc	r25, r27
     d62:	41 f0       	breq	.+16     	; 0xd74 <pow+0x3c>
     d64:	99 23       	and	r25, r25
     d66:	4a f5       	brpl	.+82     	; 0xdba <pow+0x82>
     d68:	ff 3f       	cpi	r31, 0xFF	; 255
     d6a:	e1 05       	cpc	r30, r1
     d6c:	31 05       	cpc	r19, r1
     d6e:	21 05       	cpc	r18, r1
     d70:	19 f1       	breq	.+70     	; 0xdb8 <pow+0x80>
     d72:	e8 94       	clt
     d74:	08 94       	sec
     d76:	e7 95       	ror	r30
     d78:	d9 01       	movw	r26, r18
     d7a:	aa 23       	and	r26, r26
     d7c:	29 f4       	brne	.+10     	; 0xd88 <pow+0x50>
     d7e:	ab 2f       	mov	r26, r27
     d80:	be 2f       	mov	r27, r30
     d82:	f8 5f       	subi	r31, 0xF8	; 248
     d84:	d0 f3       	brcs	.-12     	; 0xd7a <pow+0x42>
     d86:	10 c0       	rjmp	.+32     	; 0xda8 <pow+0x70>
     d88:	ff 5f       	subi	r31, 0xFF	; 255
     d8a:	70 f4       	brcc	.+28     	; 0xda8 <pow+0x70>
     d8c:	a6 95       	lsr	r26
     d8e:	e0 f7       	brcc	.-8      	; 0xd88 <pow+0x50>
     d90:	f7 39       	cpi	r31, 0x97	; 151
     d92:	50 f0       	brcs	.+20     	; 0xda8 <pow+0x70>
     d94:	19 f0       	breq	.+6      	; 0xd9c <pow+0x64>
     d96:	ff 3a       	cpi	r31, 0xAF	; 175
     d98:	38 f4       	brcc	.+14     	; 0xda8 <pow+0x70>
     d9a:	9f 77       	andi	r25, 0x7F	; 127
     d9c:	9f 93       	push	r25
     d9e:	0d d0       	rcall	.+26     	; 0xdba <pow+0x82>
     da0:	0f 90       	pop	r0
     da2:	07 fc       	sbrc	r0, 7
     da4:	90 58       	subi	r25, 0x80	; 128
     da6:	08 95       	ret
     da8:	46 f0       	brts	.+16     	; 0xdba <pow+0x82>
     daa:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_nan>
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	80 e8       	ldi	r24, 0x80	; 128
     db4:	9f e3       	ldi	r25, 0x3F	; 63
     db6:	08 95       	ret
     db8:	4f e7       	ldi	r20, 0x7F	; 127
     dba:	9f 77       	andi	r25, 0x7F	; 127
     dbc:	5f 93       	push	r21
     dbe:	4f 93       	push	r20
     dc0:	3f 93       	push	r19
     dc2:	2f 93       	push	r18
     dc4:	0e 94 97 07 	call	0xf2e	; 0xf2e <log>
     dc8:	2f 91       	pop	r18
     dca:	3f 91       	pop	r19
     dcc:	4f 91       	pop	r20
     dce:	5f 91       	pop	r21
     dd0:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__mulsf3>
     dd4:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <exp>
     dd8:	29 f4       	brne	.+10     	; 0xde4 <pow+0xac>
     dda:	16 f0       	brts	.+4      	; 0xde0 <pow+0xa8>
     ddc:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>
     de0:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__fp_zero>
     de4:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_nan>

00000de8 <exp>:
     de8:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__fp_splitA>
     dec:	a8 f3       	brcs	.-22     	; 0xdd8 <pow+0xa0>
     dee:	96 38       	cpi	r25, 0x86	; 134
     df0:	a0 f7       	brcc	.-24     	; 0xdda <pow+0xa2>
     df2:	07 f8       	bld	r0, 7
     df4:	0f 92       	push	r0
     df6:	e8 94       	clt
     df8:	2b e3       	ldi	r18, 0x3B	; 59
     dfa:	3a ea       	ldi	r19, 0xAA	; 170
     dfc:	48 eb       	ldi	r20, 0xB8	; 184
     dfe:	5f e7       	ldi	r21, 0x7F	; 127
     e00:	0e 94 45 06 	call	0xc8a	; 0xc8a <__mulsf3_pse>
     e04:	0f 92       	push	r0
     e06:	0f 92       	push	r0
     e08:	0f 92       	push	r0
     e0a:	4d b7       	in	r20, 0x3d	; 61
     e0c:	5e b7       	in	r21, 0x3e	; 62
     e0e:	0f 92       	push	r0
     e10:	0e 94 df 07 	call	0xfbe	; 0xfbe <modf>
     e14:	e8 e7       	ldi	r30, 0x78	; 120
     e16:	f0 e0       	ldi	r31, 0x00	; 0
     e18:	0e 94 26 07 	call	0xe4c	; 0xe4c <__fp_powser>
     e1c:	4f 91       	pop	r20
     e1e:	5f 91       	pop	r21
     e20:	ef 91       	pop	r30
     e22:	ff 91       	pop	r31
     e24:	e5 95       	asr	r30
     e26:	ee 1f       	adc	r30, r30
     e28:	ff 1f       	adc	r31, r31
     e2a:	49 f0       	breq	.+18     	; 0xe3e <exp+0x56>
     e2c:	fe 57       	subi	r31, 0x7E	; 126
     e2e:	e0 68       	ori	r30, 0x80	; 128
     e30:	44 27       	eor	r20, r20
     e32:	ee 0f       	add	r30, r30
     e34:	44 1f       	adc	r20, r20
     e36:	fa 95       	dec	r31
     e38:	e1 f7       	brne	.-8      	; 0xe32 <exp+0x4a>
     e3a:	41 95       	neg	r20
     e3c:	55 0b       	sbc	r21, r21
     e3e:	0e 94 59 07 	call	0xeb2	; 0xeb2 <ldexp>
     e42:	0f 90       	pop	r0
     e44:	07 fe       	sbrs	r0, 7
     e46:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <inverse>
     e4a:	08 95       	ret

00000e4c <__fp_powser>:
     e4c:	df 93       	push	r29
     e4e:	cf 93       	push	r28
     e50:	1f 93       	push	r17
     e52:	0f 93       	push	r16
     e54:	ff 92       	push	r15
     e56:	ef 92       	push	r14
     e58:	df 92       	push	r13
     e5a:	7b 01       	movw	r14, r22
     e5c:	8c 01       	movw	r16, r24
     e5e:	68 94       	set
     e60:	06 c0       	rjmp	.+12     	; 0xe6e <__fp_powser+0x22>
     e62:	da 2e       	mov	r13, r26
     e64:	ef 01       	movw	r28, r30
     e66:	0e 94 42 06 	call	0xc84	; 0xc84 <__mulsf3x>
     e6a:	fe 01       	movw	r30, r28
     e6c:	e8 94       	clt
     e6e:	a5 91       	lpm	r26, Z+
     e70:	25 91       	lpm	r18, Z+
     e72:	35 91       	lpm	r19, Z+
     e74:	45 91       	lpm	r20, Z+
     e76:	55 91       	lpm	r21, Z+
     e78:	a6 f3       	brts	.-24     	; 0xe62 <__fp_powser+0x16>
     e7a:	ef 01       	movw	r28, r30
     e7c:	0e 94 82 04 	call	0x904	; 0x904 <__addsf3x>
     e80:	fe 01       	movw	r30, r28
     e82:	97 01       	movw	r18, r14
     e84:	a8 01       	movw	r20, r16
     e86:	da 94       	dec	r13
     e88:	69 f7       	brne	.-38     	; 0xe64 <__fp_powser+0x18>
     e8a:	df 90       	pop	r13
     e8c:	ef 90       	pop	r14
     e8e:	ff 90       	pop	r15
     e90:	0f 91       	pop	r16
     e92:	1f 91       	pop	r17
     e94:	cf 91       	pop	r28
     e96:	df 91       	pop	r29
     e98:	08 95       	ret

00000e9a <inverse>:
     e9a:	9b 01       	movw	r18, r22
     e9c:	ac 01       	movw	r20, r24
     e9e:	60 e0       	ldi	r22, 0x00	; 0
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	80 e8       	ldi	r24, 0x80	; 128
     ea4:	9f e3       	ldi	r25, 0x3F	; 63
     ea6:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__divsf3>
     eaa:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>
     eae:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_mpack>

00000eb2 <ldexp>:
     eb2:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__fp_splitA>
     eb6:	d8 f3       	brcs	.-10     	; 0xeae <inverse+0x14>
     eb8:	99 23       	and	r25, r25
     eba:	c9 f3       	breq	.-14     	; 0xeae <inverse+0x14>
     ebc:	94 0f       	add	r25, r20
     ebe:	51 1d       	adc	r21, r1
     ec0:	a3 f3       	brvs	.-24     	; 0xeaa <inverse+0x10>
     ec2:	91 50       	subi	r25, 0x01	; 1
     ec4:	50 40       	sbci	r21, 0x00	; 0
     ec6:	94 f0       	brlt	.+36     	; 0xeec <ldexp+0x3a>
     ec8:	59 f0       	breq	.+22     	; 0xee0 <ldexp+0x2e>
     eca:	88 23       	and	r24, r24
     ecc:	32 f0       	brmi	.+12     	; 0xeda <ldexp+0x28>
     ece:	66 0f       	add	r22, r22
     ed0:	77 1f       	adc	r23, r23
     ed2:	88 1f       	adc	r24, r24
     ed4:	91 50       	subi	r25, 0x01	; 1
     ed6:	50 40       	sbci	r21, 0x00	; 0
     ed8:	c1 f7       	brne	.-16     	; 0xeca <ldexp+0x18>
     eda:	9e 3f       	cpi	r25, 0xFE	; 254
     edc:	51 05       	cpc	r21, r1
     ede:	2c f7       	brge	.-54     	; 0xeaa <inverse+0x10>
     ee0:	88 0f       	add	r24, r24
     ee2:	91 1d       	adc	r25, r1
     ee4:	96 95       	lsr	r25
     ee6:	87 95       	ror	r24
     ee8:	97 f9       	bld	r25, 7
     eea:	08 95       	ret
     eec:	5f 3f       	cpi	r21, 0xFF	; 255
     eee:	ac f0       	brlt	.+42     	; 0xf1a <ldexp+0x68>
     ef0:	98 3e       	cpi	r25, 0xE8	; 232
     ef2:	9c f0       	brlt	.+38     	; 0xf1a <ldexp+0x68>
     ef4:	bb 27       	eor	r27, r27
     ef6:	86 95       	lsr	r24
     ef8:	77 95       	ror	r23
     efa:	67 95       	ror	r22
     efc:	b7 95       	ror	r27
     efe:	08 f4       	brcc	.+2      	; 0xf02 <ldexp+0x50>
     f00:	b1 60       	ori	r27, 0x01	; 1
     f02:	93 95       	inc	r25
     f04:	c1 f7       	brne	.-16     	; 0xef6 <ldexp+0x44>
     f06:	bb 0f       	add	r27, r27
     f08:	58 f7       	brcc	.-42     	; 0xee0 <ldexp+0x2e>
     f0a:	11 f4       	brne	.+4      	; 0xf10 <ldexp+0x5e>
     f0c:	60 ff       	sbrs	r22, 0
     f0e:	e8 cf       	rjmp	.-48     	; 0xee0 <ldexp+0x2e>
     f10:	6f 5f       	subi	r22, 0xFF	; 255
     f12:	7f 4f       	sbci	r23, 0xFF	; 255
     f14:	8f 4f       	sbci	r24, 0xFF	; 255
     f16:	9f 4f       	sbci	r25, 0xFF	; 255
     f18:	e3 cf       	rjmp	.-58     	; 0xee0 <ldexp+0x2e>
     f1a:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_szero>
     f1e:	16 f0       	brts	.+4      	; 0xf24 <ldexp+0x72>
     f20:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_mpack>
     f24:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_nan>
     f28:	68 94       	set
     f2a:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_inf>

00000f2e <log>:
     f2e:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__fp_splitA>
     f32:	a8 f3       	brcs	.-22     	; 0xf1e <ldexp+0x6c>
     f34:	99 23       	and	r25, r25
     f36:	c1 f3       	breq	.-16     	; 0xf28 <ldexp+0x76>
     f38:	ae f3       	brts	.-22     	; 0xf24 <ldexp+0x72>
     f3a:	df 93       	push	r29
     f3c:	cf 93       	push	r28
     f3e:	1f 93       	push	r17
     f40:	0f 93       	push	r16
     f42:	ff 92       	push	r15
     f44:	c9 2f       	mov	r28, r25
     f46:	dd 27       	eor	r29, r29
     f48:	88 23       	and	r24, r24
     f4a:	2a f0       	brmi	.+10     	; 0xf56 <log+0x28>
     f4c:	21 97       	sbiw	r28, 0x01	; 1
     f4e:	66 0f       	add	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	88 1f       	adc	r24, r24
     f54:	da f7       	brpl	.-10     	; 0xf4c <log+0x1e>
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e8       	ldi	r20, 0x80	; 128
     f5c:	5f eb       	ldi	r21, 0xBF	; 191
     f5e:	9f e3       	ldi	r25, 0x3F	; 63
     f60:	88 39       	cpi	r24, 0x98	; 152
     f62:	20 f0       	brcs	.+8      	; 0xf6c <log+0x3e>
     f64:	80 3e       	cpi	r24, 0xE0	; 224
     f66:	38 f0       	brcs	.+14     	; 0xf76 <log+0x48>
     f68:	21 96       	adiw	r28, 0x01	; 1
     f6a:	8f 77       	andi	r24, 0x7F	; 127
     f6c:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3>
     f70:	e0 ea       	ldi	r30, 0xA0	; 160
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	04 c0       	rjmp	.+8      	; 0xf7e <log+0x50>
     f76:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3>
     f7a:	ed ec       	ldi	r30, 0xCD	; 205
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	0e 94 26 07 	call	0xe4c	; 0xe4c <__fp_powser>
     f82:	8b 01       	movw	r16, r22
     f84:	be 01       	movw	r22, r28
     f86:	ec 01       	movw	r28, r24
     f88:	fb 2e       	mov	r15, r27
     f8a:	6f 57       	subi	r22, 0x7F	; 127
     f8c:	71 09       	sbc	r23, r1
     f8e:	75 95       	asr	r23
     f90:	77 1f       	adc	r23, r23
     f92:	88 0b       	sbc	r24, r24
     f94:	99 0b       	sbc	r25, r25
     f96:	0e 94 7f 05 	call	0xafe	; 0xafe <__floatsisf>
     f9a:	28 e1       	ldi	r18, 0x18	; 24
     f9c:	32 e7       	ldi	r19, 0x72	; 114
     f9e:	41 e3       	ldi	r20, 0x31	; 49
     fa0:	5f e3       	ldi	r21, 0x3F	; 63
     fa2:	0e 94 42 06 	call	0xc84	; 0xc84 <__mulsf3x>
     fa6:	af 2d       	mov	r26, r15
     fa8:	98 01       	movw	r18, r16
     faa:	ae 01       	movw	r20, r28
     fac:	ff 90       	pop	r15
     fae:	0f 91       	pop	r16
     fb0:	1f 91       	pop	r17
     fb2:	cf 91       	pop	r28
     fb4:	df 91       	pop	r29
     fb6:	0e 94 82 04 	call	0x904	; 0x904 <__addsf3x>
     fba:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_round>

00000fbe <modf>:
     fbe:	fa 01       	movw	r30, r20
     fc0:	dc 01       	movw	r26, r24
     fc2:	aa 0f       	add	r26, r26
     fc4:	bb 1f       	adc	r27, r27
     fc6:	9b 01       	movw	r18, r22
     fc8:	ac 01       	movw	r20, r24
     fca:	bf 57       	subi	r27, 0x7F	; 127
     fcc:	28 f4       	brcc	.+10     	; 0xfd8 <modf+0x1a>
     fce:	22 27       	eor	r18, r18
     fd0:	33 27       	eor	r19, r19
     fd2:	44 27       	eor	r20, r20
     fd4:	50 78       	andi	r21, 0x80	; 128
     fd6:	20 c0       	rjmp	.+64     	; 0x1018 <modf+0x5a>
     fd8:	b7 51       	subi	r27, 0x17	; 23
     fda:	90 f4       	brcc	.+36     	; 0x1000 <modf+0x42>
     fdc:	ab 2f       	mov	r26, r27
     fde:	00 24       	eor	r0, r0
     fe0:	46 95       	lsr	r20
     fe2:	37 95       	ror	r19
     fe4:	27 95       	ror	r18
     fe6:	01 1c       	adc	r0, r1
     fe8:	a3 95       	inc	r26
     fea:	d2 f3       	brmi	.-12     	; 0xfe0 <modf+0x22>
     fec:	00 20       	and	r0, r0
     fee:	71 f0       	breq	.+28     	; 0x100c <modf+0x4e>
     ff0:	22 0f       	add	r18, r18
     ff2:	33 1f       	adc	r19, r19
     ff4:	44 1f       	adc	r20, r20
     ff6:	b3 95       	inc	r27
     ff8:	da f3       	brmi	.-10     	; 0xff0 <modf+0x32>
     ffa:	0e d0       	rcall	.+28     	; 0x1018 <modf+0x5a>
     ffc:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__subsf3>
    1000:	61 30       	cpi	r22, 0x01	; 1
    1002:	71 05       	cpc	r23, r1
    1004:	a0 e8       	ldi	r26, 0x80	; 128
    1006:	8a 07       	cpc	r24, r26
    1008:	b9 46       	sbci	r27, 0x69	; 105
    100a:	30 f4       	brcc	.+12     	; 0x1018 <modf+0x5a>
    100c:	9b 01       	movw	r18, r22
    100e:	ac 01       	movw	r20, r24
    1010:	66 27       	eor	r22, r22
    1012:	77 27       	eor	r23, r23
    1014:	88 27       	eor	r24, r24
    1016:	90 78       	andi	r25, 0x80	; 128
    1018:	30 96       	adiw	r30, 0x00	; 0
    101a:	21 f0       	breq	.+8      	; 0x1024 <modf+0x66>
    101c:	20 83       	st	Z, r18
    101e:	31 83       	std	Z+1, r19	; 0x01
    1020:	42 83       	std	Z+2, r20	; 0x02
    1022:	53 83       	std	Z+3, r21	; 0x03
    1024:	08 95       	ret

00001026 <__fp_mpack>:
    1026:	9f 3f       	cpi	r25, 0xFF	; 255
    1028:	31 f0       	breq	.+12     	; 0x1036 <__fp_mpack_finite+0xc>

0000102a <__fp_mpack_finite>:
    102a:	91 50       	subi	r25, 0x01	; 1
    102c:	20 f4       	brcc	.+8      	; 0x1036 <__fp_mpack_finite+0xc>
    102e:	87 95       	ror	r24
    1030:	77 95       	ror	r23
    1032:	67 95       	ror	r22
    1034:	b7 95       	ror	r27
    1036:	88 0f       	add	r24, r24
    1038:	91 1d       	adc	r25, r1
    103a:	96 95       	lsr	r25
    103c:	87 95       	ror	r24
    103e:	97 f9       	bld	r25, 7
    1040:	08 95       	ret

00001042 <__tablejump2__>:
    1042:	ee 0f       	add	r30, r30
    1044:	ff 1f       	adc	r31, r31
    1046:	05 90       	lpm	r0, Z+
    1048:	f4 91       	lpm	r31, Z
    104a:	e0 2d       	mov	r30, r0
    104c:	09 94       	ijmp

0000104e <__adddi3_s8>:
    104e:	00 24       	eor	r0, r0
    1050:	a7 fd       	sbrc	r26, 7
    1052:	00 94       	com	r0
    1054:	2a 0f       	add	r18, r26
    1056:	30 1d       	adc	r19, r0
    1058:	40 1d       	adc	r20, r0
    105a:	50 1d       	adc	r21, r0
    105c:	60 1d       	adc	r22, r0
    105e:	70 1d       	adc	r23, r0
    1060:	80 1d       	adc	r24, r0
    1062:	90 1d       	adc	r25, r0
    1064:	08 95       	ret

00001066 <__cmpdi2_s8>:
    1066:	00 24       	eor	r0, r0
    1068:	a7 fd       	sbrc	r26, 7
    106a:	00 94       	com	r0
    106c:	2a 17       	cp	r18, r26
    106e:	30 05       	cpc	r19, r0
    1070:	40 05       	cpc	r20, r0
    1072:	50 05       	cpc	r21, r0
    1074:	60 05       	cpc	r22, r0
    1076:	70 05       	cpc	r23, r0
    1078:	80 05       	cpc	r24, r0
    107a:	90 05       	cpc	r25, r0
    107c:	08 95       	ret

0000107e <_exit>:
    107e:	f8 94       	cli

00001080 <__stop_program>:
    1080:	ff cf       	rjmp	.-2      	; 0x1080 <__stop_program>
