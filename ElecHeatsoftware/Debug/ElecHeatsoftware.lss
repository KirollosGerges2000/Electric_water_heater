
ElecHeatsoftware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000103e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000010b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001b  00800060  00800060  000010b2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000010e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001120  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f76  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085b  00000000  00000000  000021a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a53  00000000  00000000  00002a01  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000254  00000000  00000000  00003454  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d6  00000000  00000000  000036a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f6  00000000  00000000  00003c7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004074  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
       4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
       8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
       c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      20:	0c 94 00 04 	jmp	0x800	; 0x800 <__vector_8>
      24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      54:	22 02       	muls	r18, r18
      56:	19 02       	muls	r17, r25
      58:	07 02       	muls	r16, r23
      5a:	f5 01       	movw	r30, r10
      5c:	e3 01       	movw	r28, r6
      5e:	10 02       	muls	r17, r16
      60:	da 01       	movw	r26, r20
      62:	ec 01       	movw	r28, r24
      64:	fe 01       	movw	r30, r28
      66:	65 03       	mulsu	r22, r21
      68:	62 03       	mulsu	r22, r18
      6a:	5c 03       	fmul	r21, r20
      6c:	56 03       	mulsu	r21, r22
      6e:	50 03       	mulsu	r21, r16
      70:	5f 03       	fmul	r21, r23
      72:	4d 03       	fmul	r20, r21
      74:	53 03       	mulsu	r21, r19
      76:	59 03       	fmul	r21, r17
      78:	07 63       	ori	r16, 0x37	; 55
      7a:	42 36       	cpi	r20, 0x62	; 98
      7c:	b7 9b       	sbis	0x16, 7	; 22
      7e:	d8 a7       	std	Y+40, r29	; 0x28
      80:	1a 39       	cpi	r17, 0x9A	; 154
      82:	68 56       	subi	r22, 0x68	; 104
      84:	18 ae       	std	Y+56, r1	; 0x38
      86:	ba ab       	std	Y+50, r27	; 0x32
      88:	55 8c       	ldd	r5, Z+29	; 0x1d
      8a:	1d 3c       	cpi	r17, 0xCD	; 205
      8c:	b7 cc       	rjmp	.-1682   	; 0xfffff9fc <__eeprom_end+0xff7ef9fc>
      8e:	57 63       	ori	r21, 0x37	; 55
      90:	bd 6d       	ori	r27, 0xDD	; 221
      92:	ed fd       	.word	0xfded	; ????
      94:	75 3e       	cpi	r23, 0xE5	; 229
      96:	f6 17       	cp	r31, r22
      98:	72 31       	cpi	r23, 0x12	; 18
      9a:	bf 00       	.word	0x00bf	; ????
      9c:	00 00       	nop
      9e:	80 3f       	cpi	r24, 0xF0	; 240
      a0:	08 00       	.word	0x0008	; ????
      a2:	00 00       	nop
      a4:	be 92       	st	-X, r11
      a6:	24 49       	sbci	r18, 0x94	; 148
      a8:	12 3e       	cpi	r17, 0xE2	; 226
      aa:	ab aa       	std	Y+51, r10	; 0x33
      ac:	aa 2a       	or	r10, r26
      ae:	be cd       	rjmp	.-1156   	; 0xfffffc2c <__eeprom_end+0xff7efc2c>
      b0:	cc cc       	rjmp	.-1640   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
      b2:	4c 3e       	cpi	r20, 0xEC	; 236
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	be ab       	std	Y+54, r27	; 0x36
      ba:	aa aa       	std	Y+50, r10	; 0x32
      bc:	aa 3e       	cpi	r26, 0xEA	; 234
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	bf 00       	.word	0x00bf	; ????
      c4:	00 00       	nop
      c6:	80 3f       	cpi	r24, 0xF0	; 240
      c8:	00 00       	nop
      ca:	00 00       	nop
      cc:	00 08       	sbc	r0, r0
      ce:	41 78       	andi	r20, 0x81	; 129
      d0:	d3 bb       	out	0x13, r29	; 19
      d2:	43 87       	std	Z+11, r20	; 0x0b
      d4:	d1 13       	cpse	r29, r17
      d6:	3d 19       	sub	r19, r13
      d8:	0e 3c       	cpi	r16, 0xCE	; 206
      da:	c3 bd       	out	0x23, r28	; 35
      dc:	42 82       	std	Z+2, r4	; 0x02
      de:	ad 2b       	or	r26, r29
      e0:	3e 68       	ori	r19, 0x8E	; 142
      e2:	ec 82       	std	Y+4, r14	; 0x04
      e4:	76 be       	out	0x36, r7	; 54
      e6:	d9 8f       	std	Y+25, r29	; 0x19
      e8:	e1 a9       	ldd	r30, Z+49	; 0x31
      ea:	3e 4c       	sbci	r19, 0xCE	; 206
      ec:	80 ef       	ldi	r24, 0xF0	; 240
      ee:	ff be       	out	0x3f, r15	; 63
      f0:	01 c4       	rjmp	.+2050   	; 0x8f4 <__addsf3x+0x34>
      f2:	ff 7f       	andi	r31, 0xFF	; 255
      f4:	3f 00       	.word	0x003f	; ????
      f6:	00 00       	nop
	...

000000fa <__ctors_end>:
      fa:	11 24       	eor	r1, r1
      fc:	1f be       	out	0x3f, r1	; 63
      fe:	cf e5       	ldi	r28, 0x5F	; 95
     100:	d4 e0       	ldi	r29, 0x04	; 4
     102:	de bf       	out	0x3e, r29	; 62
     104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_clear_bss>:
     106:	20 e0       	ldi	r18, 0x00	; 0
     108:	a0 e6       	ldi	r26, 0x60	; 96
     10a:	b0 e0       	ldi	r27, 0x00	; 0
     10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
     10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
     110:	ab 37       	cpi	r26, 0x7B	; 123
     112:	b2 07       	cpc	r27, r18
     114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
     116:	0e 94 33 04 	call	0x866	; 0x866 <main>
     11a:	0c 94 1d 08 	jmp	0x103a	; 0x103a <_exit>

0000011e <__bad_interrupt>:
     11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_init>:
	/* ADMUX Register Bits Description:
	 * REFS1:0 = 00 to choose to connect external reference voltage by input this voltage through AREF pin
	 * ADLAR   = 0 right adjusted
	 * MUX4:0  = 00000 to choose channel 0 as initialization
	 */
	ADMUX = 0x00;
     122:	17 b8       	out	0x07, r1	; 7
	/* ADCSRA Register Bits Description:
	 * ADEN    = 1 Enable ADC
	 * ADIE    = 0 Disable ADC Interrupt
	 * ADPS2:0 = 011 to choose ADC_Clock=F_CPU/8=1Mhz/8=125Khz --> ADC must operate in range 50-200Khz
	 */
	ADCSRA = (1<<7) | (1<<1) | (1<<0);
     124:	83 e8       	ldi	r24, 0x83	; 131
     126:	86 b9       	out	0x06, r24	; 6
     128:	08 95       	ret

0000012a <ADC_readChannel>:
}

unsigned short ADC_readChannel(unsigned char channel_num)
{
	//channel_num &= 0x07; /* channel number must be from 0 --> 7 */
	ADMUX &= 0xE0; /* clear first 5 bits in the ADMUX (channel number MUX4:0 bits) before set the required channel */
     12a:	97 b1       	in	r25, 0x07	; 7
     12c:	90 7e       	andi	r25, 0xE0	; 224
     12e:	97 b9       	out	0x07, r25	; 7
	ADMUX = ADMUX | channel_num; /* choose the correct channel by setting the channel number in MUX4:0 bits */
     130:	97 b1       	in	r25, 0x07	; 7
     132:	89 2b       	or	r24, r25
     134:	87 b9       	out	0x07, r24	; 7
	SET_BIT(ADCSRA,6); /* start conversion write '1' to ADSC */
     136:	86 b1       	in	r24, 0x06	; 6
     138:	80 64       	ori	r24, 0x40	; 64
     13a:	86 b9       	out	0x06, r24	; 6
	//ADCSRA |= (1<<ADSC);
	while(BIT_IS_CLEAR(ADCSRA,4)); /* wait for conversion to complete ADIF becomes '1' */
     13c:	34 9b       	sbis	0x06, 4	; 6
     13e:	fe cf       	rjmp	.-4      	; 0x13c <ADC_readChannel+0x12>
		SET_BIT(ADCSRA,4); /* clear ADIF by write '1' to it :) */
     140:	86 b1       	in	r24, 0x06	; 6
     142:	80 61       	ori	r24, 0x10	; 16
     144:	86 b9       	out	0x06, r24	; 6
	return ADC; /* return the data register */
     146:	84 b1       	in	r24, 0x04	; 4
     148:	95 b1       	in	r25, 0x05	; 5
	

}
     14a:	08 95       	ret

0000014c <DATA_DIRECTION_REGISTER>:
// turns a BCD-encoded byte back into a standard one
u8 Bcd_to_decimal (u8 value)
{
	value=TWDR;
	return( ((value>>4)*10)+(value &0xF));
}
     14c:	8f 34       	cpi	r24, 0x4F	; 79
     14e:	41 f5       	brne	.+80     	; 0x1a0 <DATA_DIRECTION_REGISTER+0x54>
     150:	81 b3       	in	r24, 0x11	; 17
     152:	81 60       	ori	r24, 0x01	; 1
     154:	81 bb       	out	0x11, r24	; 17
     156:	81 b3       	in	r24, 0x11	; 17
     158:	82 60       	ori	r24, 0x02	; 2
     15a:	81 bb       	out	0x11, r24	; 17
     15c:	81 b3       	in	r24, 0x11	; 17
     15e:	84 60       	ori	r24, 0x04	; 4
     160:	81 bb       	out	0x11, r24	; 17
     162:	81 b3       	in	r24, 0x11	; 17
     164:	88 60       	ori	r24, 0x08	; 8
     166:	81 bb       	out	0x11, r24	; 17
     168:	81 b3       	in	r24, 0x11	; 17
     16a:	80 61       	ori	r24, 0x10	; 16
     16c:	81 bb       	out	0x11, r24	; 17
     16e:	81 b3       	in	r24, 0x11	; 17
     170:	80 62       	ori	r24, 0x20	; 32
     172:	81 bb       	out	0x11, r24	; 17
     174:	81 b3       	in	r24, 0x11	; 17
     176:	80 64       	ori	r24, 0x40	; 64
     178:	81 bb       	out	0x11, r24	; 17
     17a:	81 b3       	in	r24, 0x11	; 17
     17c:	80 68       	ori	r24, 0x80	; 128
     17e:	81 bb       	out	0x11, r24	; 17
     180:	87 b3       	in	r24, 0x17	; 23
     182:	81 60       	ori	r24, 0x01	; 1
     184:	87 bb       	out	0x17, r24	; 23
     186:	87 b3       	in	r24, 0x17	; 23
     188:	80 68       	ori	r24, 0x80	; 128
     18a:	87 bb       	out	0x17, r24	; 23
     18c:	87 b3       	in	r24, 0x17	; 23
     18e:	80 62       	ori	r24, 0x20	; 32
     190:	87 bb       	out	0x17, r24	; 23
     192:	87 b3       	in	r24, 0x17	; 23
     194:	80 64       	ori	r24, 0x40	; 64
     196:	87 bb       	out	0x17, r24	; 23
     198:	87 b3       	in	r24, 0x17	; 23
     19a:	80 61       	ori	r24, 0x10	; 16
     19c:	87 bb       	out	0x17, r24	; 23
     19e:	08 95       	ret
     1a0:	69 34       	cpi	r22, 0x49	; 73
     1a2:	49 f4       	brne	.+18     	; 0x1b6 <DATA_DIRECTION_REGISTER+0x6a>
     1a4:	87 b3       	in	r24, 0x17	; 23
     1a6:	87 7f       	andi	r24, 0xF7	; 247
     1a8:	87 bb       	out	0x17, r24	; 23
     1aa:	87 b3       	in	r24, 0x17	; 23
     1ac:	8b 7f       	andi	r24, 0xFB	; 251
     1ae:	87 bb       	out	0x17, r24	; 23
     1b0:	87 b3       	in	r24, 0x17	; 23
     1b2:	8d 7f       	andi	r24, 0xFD	; 253
     1b4:	87 bb       	out	0x17, r24	; 23
     1b6:	08 95       	ret

000001b8 <Init_VARIABLES>:
     1b8:	82 b3       	in	r24, 0x12	; 18
     1ba:	8f 77       	andi	r24, 0x7F	; 127
     1bc:	82 bb       	out	0x12, r24	; 18
     1be:	82 b3       	in	r24, 0x12	; 18
     1c0:	80 64       	ori	r24, 0x40	; 64
     1c2:	82 bb       	out	0x12, r24	; 18
     1c4:	82 b3       	in	r24, 0x12	; 18
     1c6:	80 62       	ori	r24, 0x20	; 32
     1c8:	82 bb       	out	0x12, r24	; 18
     1ca:	82 b3       	in	r24, 0x12	; 18
     1cc:	8f 7e       	andi	r24, 0xEF	; 239
     1ce:	82 bb       	out	0x12, r24	; 18
     1d0:	82 b3       	in	r24, 0x12	; 18
     1d2:	87 7f       	andi	r24, 0xF7	; 247
     1d4:	82 bb       	out	0x12, r24	; 18
     1d6:	82 b3       	in	r24, 0x12	; 18
     1d8:	8b 7f       	andi	r24, 0xFB	; 251
     1da:	82 bb       	out	0x12, r24	; 18
     1dc:	82 b3       	in	r24, 0x12	; 18
     1de:	8d 7f       	andi	r24, 0xFD	; 253
     1e0:	82 bb       	out	0x12, r24	; 18
     1e2:	82 b3       	in	r24, 0x12	; 18
     1e4:	8e 7f       	andi	r24, 0xFE	; 254
     1e6:	82 bb       	out	0x12, r24	; 18
     1e8:	88 b3       	in	r24, 0x18	; 24
     1ea:	8f 7e       	andi	r24, 0xEF	; 239
     1ec:	88 bb       	out	0x18, r24	; 24
     1ee:	88 b3       	in	r24, 0x18	; 24
     1f0:	8f 7d       	andi	r24, 0xDF	; 223
     1f2:	88 bb       	out	0x18, r24	; 24
     1f4:	88 b3       	in	r24, 0x18	; 24
     1f6:	8f 7b       	andi	r24, 0xBF	; 191
     1f8:	88 bb       	out	0x18, r24	; 24
     1fa:	88 b3       	in	r24, 0x18	; 24
     1fc:	81 60       	ori	r24, 0x01	; 1
     1fe:	88 bb       	out	0x18, r24	; 24
     200:	88 b3       	in	r24, 0x18	; 24
     202:	80 68       	ori	r24, 0x80	; 128
     204:	88 bb       	out	0x18, r24	; 24
     206:	08 95       	ret

00000208 <Avg_reading>:
     208:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <x>
     20c:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <x+0x1>
     210:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <x+0x2>
     214:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <x+0x3>
     218:	20 91 6d 00 	lds	r18, 0x006D	; 0x80006d <sum>
     21c:	30 91 6e 00 	lds	r19, 0x006E	; 0x80006e <sum+0x1>
     220:	40 91 6f 00 	lds	r20, 0x006F	; 0x80006f <sum+0x2>
     224:	50 91 70 00 	lds	r21, 0x0070	; 0x800070 <sum+0x3>
     228:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3>
     22c:	60 93 6d 00 	sts	0x006D, r22	; 0x80006d <sum>
     230:	70 93 6e 00 	sts	0x006E, r23	; 0x80006e <sum+0x1>
     234:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <sum+0x2>
     238:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <sum+0x3>
     23c:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <i>
     240:	2f 5f       	subi	r18, 0xFF	; 255
     242:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <i>
     246:	29 30       	cpi	r18, 0x09	; 9
     248:	c1 f4       	brne	.+48     	; 0x27a <Avg_reading+0x72>
     24a:	24 e1       	ldi	r18, 0x14	; 20
     24c:	3e ea       	ldi	r19, 0xAE	; 174
     24e:	41 e1       	ldi	r20, 0x11	; 17
     250:	51 e4       	ldi	r21, 0x41	; 65
     252:	0e 94 ba 04 	call	0x974	; 0x974 <__divsf3>
     256:	60 93 71 00 	sts	0x0071, r22	; 0x800071 <average>
     25a:	70 93 72 00 	sts	0x0072, r23	; 0x800072 <average+0x1>
     25e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <average+0x2>
     262:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <average+0x3>
     266:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <i>
     26a:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <sum>
     26e:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <sum+0x1>
     272:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sum+0x2>
     276:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <sum+0x3>
     27a:	08 95       	ret

0000027c <Temperature_reading>:
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_readChannel>
     282:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <volt+0x1>
     286:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <volt>
     28a:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <volt>
     28e:	70 91 7a 00 	lds	r23, 0x007A	; 0x80007a <volt+0x1>
     292:	cb 01       	movw	r24, r22
     294:	88 0f       	add	r24, r24
     296:	99 1f       	adc	r25, r25
     298:	88 0f       	add	r24, r24
     29a:	99 1f       	adc	r25, r25
     29c:	68 0f       	add	r22, r24
     29e:	79 1f       	adc	r23, r25
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0e 94 5b 05 	call	0xab6	; 0xab6 <__floatunsisf>
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 ec       	ldi	r19, 0xC0	; 192
     2ac:	4f e7       	ldi	r20, 0x7F	; 127
     2ae:	54 e4       	ldi	r21, 0x44	; 68
     2b0:	0e 94 ba 04 	call	0x974	; 0x974 <__divsf3>
     2b4:	60 93 75 00 	sts	0x0075, r22	; 0x800075 <x>
     2b8:	70 93 76 00 	sts	0x0076, r23	; 0x800076 <x+0x1>
     2bc:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <x+0x2>
     2c0:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <x+0x3>
     2c4:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <x>
     2c8:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <x+0x1>
     2cc:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <x+0x2>
     2d0:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <x+0x3>
     2d4:	20 e0       	ldi	r18, 0x00	; 0
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	48 ec       	ldi	r20, 0xC8	; 200
     2da:	52 e4       	ldi	r21, 0x42	; 66
     2dc:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__mulsf3>
     2e0:	60 93 75 00 	sts	0x0075, r22	; 0x800075 <x>
     2e4:	70 93 76 00 	sts	0x0076, r23	; 0x800076 <x+0x1>
     2e8:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <x+0x2>
     2ec:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <x+0x3>
     2f0:	0e 94 04 01 	call	0x208	; 0x208 <Avg_reading>
     2f4:	08 95       	ret

000002f6 <ACTIVATION>:
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	cf 93       	push	r28
     300:	20 91 6b 00 	lds	r18, 0x006B	; 0x80006b <counter>
     304:	30 91 6c 00 	lds	r19, 0x006C	; 0x80006c <counter+0x1>
     308:	28 17       	cp	r18, r24
     30a:	39 07       	cpc	r19, r25
     30c:	09 f0       	breq	.+2      	; 0x310 <ACTIVATION+0x1a>
     30e:	3f c0       	rjmp	.+126    	; 0x38e <ACTIVATION+0x98>
     310:	c4 2f       	mov	r28, r20
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	0e 94 5d 05 	call	0xaba	; 0xaba <__floatsisf>
     31c:	c0 90 71 00 	lds	r12, 0x0071	; 0x800071 <average>
     320:	d0 90 72 00 	lds	r13, 0x0072	; 0x800072 <average+0x1>
     324:	e0 90 73 00 	lds	r14, 0x0073	; 0x800073 <average+0x2>
     328:	f0 90 74 00 	lds	r15, 0x0074	; 0x800074 <average+0x3>
     32c:	a7 01       	movw	r20, r14
     32e:	96 01       	movw	r18, r12
     330:	0e 94 b5 04 	call	0x96a	; 0x96a <__cmpsf2>
     334:	18 16       	cp	r1, r24
     336:	54 f0       	brlt	.+20     	; 0x34c <ACTIVATION+0x56>
     338:	88 b3       	in	r24, 0x18	; 24
     33a:	80 62       	ori	r24, 0x20	; 32
     33c:	88 bb       	out	0x18, r24	; 24
     33e:	88 b3       	in	r24, 0x18	; 24
     340:	8f 7b       	andi	r24, 0xBF	; 191
     342:	88 bb       	out	0x18, r24	; 24
     344:	88 b3       	in	r24, 0x18	; 24
     346:	80 61       	ori	r24, 0x10	; 16
     348:	88 bb       	out	0x18, r24	; 24
     34a:	21 c0       	rjmp	.+66     	; 0x38e <ACTIVATION+0x98>
     34c:	6c 2f       	mov	r22, r28
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	0e 94 5d 05 	call	0xaba	; 0xaba <__floatsisf>
     358:	9b 01       	movw	r18, r22
     35a:	ac 01       	movw	r20, r24
     35c:	c7 01       	movw	r24, r14
     35e:	b6 01       	movw	r22, r12
     360:	0e 94 b5 04 	call	0x96a	; 0x96a <__cmpsf2>
     364:	18 16       	cp	r1, r24
     366:	9c f0       	brlt	.+38     	; 0x38e <ACTIVATION+0x98>
     368:	88 b3       	in	r24, 0x18	; 24
     36a:	8f 7d       	andi	r24, 0xDF	; 223
     36c:	88 bb       	out	0x18, r24	; 24
     36e:	88 b3       	in	r24, 0x18	; 24
     370:	80 64       	ori	r24, 0x40	; 64
     372:	88 bb       	out	0x18, r24	; 24
     374:	98 b3       	in	r25, 0x18	; 24
     376:	80 e1       	ldi	r24, 0x10	; 16
     378:	89 27       	eor	r24, r25
     37a:	88 bb       	out	0x18, r24	; 24
     37c:	2f ed       	ldi	r18, 0xDF	; 223
     37e:	82 e2       	ldi	r24, 0x22	; 34
     380:	92 e0       	ldi	r25, 0x02	; 2
     382:	21 50       	subi	r18, 0x01	; 1
     384:	80 40       	sbci	r24, 0x00	; 0
     386:	90 40       	sbci	r25, 0x00	; 0
     388:	e1 f7       	brne	.-8      	; 0x382 <ACTIVATION+0x8c>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <ACTIVATION+0x96>
     38c:	00 00       	nop
     38e:	cf 91       	pop	r28
     390:	ff 90       	pop	r15
     392:	ef 90       	pop	r14
     394:	df 90       	pop	r13
     396:	cf 90       	pop	r12
     398:	08 95       	ret

0000039a <ELEMENTS>:
     39a:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <counter>
     39e:	f0 91 6c 00 	lds	r31, 0x006C	; 0x80006c <counter+0x1>
     3a2:	35 96       	adiw	r30, 0x05	; 5
     3a4:	e9 30       	cpi	r30, 0x09	; 9
     3a6:	f1 05       	cpc	r31, r1
     3a8:	08 f0       	brcs	.+2      	; 0x3ac <ELEMENTS+0x12>
     3aa:	54 c0       	rjmp	.+168    	; 0x454 <__DATA_REGION_LENGTH__+0x54>
     3ac:	e6 5d       	subi	r30, 0xD6	; 214
     3ae:	ff 4f       	sbci	r31, 0xFF	; 255
     3b0:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__tablejump2__>
     3b4:	4c e3       	ldi	r20, 0x3C	; 60
     3b6:	50 e0       	ldi	r21, 0x00	; 0
     3b8:	66 e4       	ldi	r22, 0x46	; 70
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     3c4:	08 95       	ret
     3c6:	42 e3       	ldi	r20, 0x32	; 50
     3c8:	50 e0       	ldi	r21, 0x00	; 0
     3ca:	6c e3       	ldi	r22, 0x3C	; 60
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	8f ef       	ldi	r24, 0xFF	; 255
     3d0:	9f ef       	ldi	r25, 0xFF	; 255
     3d2:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     3d6:	08 95       	ret
     3d8:	41 e4       	ldi	r20, 0x41	; 65
     3da:	50 e0       	ldi	r21, 0x00	; 0
     3dc:	6b e4       	ldi	r22, 0x4B	; 75
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	82 e0       	ldi	r24, 0x02	; 2
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     3e8:	08 95       	ret
     3ea:	4d e2       	ldi	r20, 0x2D	; 45
     3ec:	50 e0       	ldi	r21, 0x00	; 0
     3ee:	67 e3       	ldi	r22, 0x37	; 55
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	8e ef       	ldi	r24, 0xFE	; 254
     3f4:	9f ef       	ldi	r25, 0xFF	; 255
     3f6:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     3fa:	08 95       	ret
     3fc:	46 e4       	ldi	r20, 0x46	; 70
     3fe:	50 e0       	ldi	r21, 0x00	; 0
     400:	60 e5       	ldi	r22, 0x50	; 80
     402:	70 e0       	ldi	r23, 0x00	; 0
     404:	83 e0       	ldi	r24, 0x03	; 3
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     40c:	08 95       	ret
     40e:	48 e2       	ldi	r20, 0x28	; 40
     410:	50 e0       	ldi	r21, 0x00	; 0
     412:	62 e3       	ldi	r22, 0x32	; 50
     414:	70 e0       	ldi	r23, 0x00	; 0
     416:	8d ef       	ldi	r24, 0xFD	; 253
     418:	9f ef       	ldi	r25, 0xFF	; 255
     41a:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     41e:	08 95       	ret
     420:	47 e3       	ldi	r20, 0x37	; 55
     422:	50 e0       	ldi	r21, 0x00	; 0
     424:	61 e4       	ldi	r22, 0x41	; 65
     426:	70 e0       	ldi	r23, 0x00	; 0
     428:	80 e0       	ldi	r24, 0x00	; 0
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     430:	08 95       	ret
     432:	43 e2       	ldi	r20, 0x23	; 35
     434:	50 e0       	ldi	r21, 0x00	; 0
     436:	6d e2       	ldi	r22, 0x2D	; 45
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	8c ef       	ldi	r24, 0xFC	; 252
     43c:	9f ef       	ldi	r25, 0xFF	; 255
     43e:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     442:	08 95       	ret
     444:	4e e1       	ldi	r20, 0x1E	; 30
     446:	50 e0       	ldi	r21, 0x00	; 0
     448:	68 e2       	ldi	r22, 0x28	; 40
     44a:	70 e0       	ldi	r23, 0x00	; 0
     44c:	8b ef       	ldi	r24, 0xFB	; 251
     44e:	9f ef       	ldi	r25, 0xFF	; 255
     450:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ACTIVATION>
     454:	08 95       	ret

00000456 <on_off_7_segment>:
     456:	81 30       	cpi	r24, 0x01	; 1
     458:	39 f4       	brne	.+14     	; 0x468 <__stack+0x9>
     45a:	88 b3       	in	r24, 0x18	; 24
     45c:	8e 7f       	andi	r24, 0xFE	; 254
     45e:	88 bb       	out	0x18, r24	; 24
     460:	88 b3       	in	r24, 0x18	; 24
     462:	8f 77       	andi	r24, 0x7F	; 127
     464:	88 bb       	out	0x18, r24	; 24
     466:	08 95       	ret
     468:	81 11       	cpse	r24, r1
     46a:	06 c0       	rjmp	.+12     	; 0x478 <__stack+0x19>
     46c:	88 b3       	in	r24, 0x18	; 24
     46e:	81 60       	ori	r24, 0x01	; 1
     470:	88 bb       	out	0x18, r24	; 24
     472:	88 b3       	in	r24, 0x18	; 24
     474:	80 68       	ori	r24, 0x80	; 128
     476:	88 bb       	out	0x18, r24	; 24
     478:	08 95       	ret

0000047a <OFF_MODE>:
     47a:	88 b3       	in	r24, 0x18	; 24
     47c:	8f 7d       	andi	r24, 0xDF	; 223
     47e:	88 bb       	out	0x18, r24	; 24
     480:	88 b3       	in	r24, 0x18	; 24
     482:	8f 7b       	andi	r24, 0xBF	; 191
     484:	88 bb       	out	0x18, r24	; 24
     486:	88 b3       	in	r24, 0x18	; 24
     488:	8f 7e       	andi	r24, 0xEF	; 239
     48a:	88 bb       	out	0x18, r24	; 24
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	0e 94 2b 02 	call	0x456	; 0x456 <on_off_7_segment>
     492:	08 95       	ret

00000494 <on_off_mode>:
     494:	b1 9b       	sbis	0x16, 1	; 22
     496:	0c c0       	rjmp	.+24     	; 0x4b0 <on_off_mode+0x1c>
     498:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     49c:	81 11       	cpse	r24, r1
     49e:	08 c0       	rjmp	.+16     	; 0x4b0 <on_off_mode+0x1c>
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <flag>
     4a6:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <Start_Mode>
     4aa:	b1 99       	sbic	0x16, 1	; 22
     4ac:	fe cf       	rjmp	.-4      	; 0x4aa <on_off_mode+0x16>
     4ae:	08 95       	ret
     4b0:	b1 9b       	sbis	0x16, 1	; 22
     4b2:	0a c0       	rjmp	.+20     	; 0x4c8 <on_off_mode+0x34>
     4b4:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     4b8:	81 30       	cpi	r24, 0x01	; 1
     4ba:	31 f4       	brne	.+12     	; 0x4c8 <on_off_mode+0x34>
     4bc:	b1 99       	sbic	0x16, 1	; 22
     4be:	fe cf       	rjmp	.-4      	; 0x4bc <on_off_mode+0x28>
     4c0:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <flag>
     4c4:	0e 94 3d 02 	call	0x47a	; 0x47a <OFF_MODE>
     4c8:	08 95       	ret

000004ca <I2C_Init>:
     4ca:	11 b8       	out	0x01, r1	; 1
     4cc:	61 b1       	in	r22, 0x01	; 1
     4ce:	63 70       	andi	r22, 0x03	; 3
     4d0:	70 e0       	ldi	r23, 0x00	; 0
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 5d 05 	call	0xaba	; 0xaba <__floatsisf>
     4da:	9b 01       	movw	r18, r22
     4dc:	ac 01       	movw	r20, r24
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	80 e8       	ldi	r24, 0x80	; 128
     4e4:	90 e4       	ldi	r25, 0x40	; 64
     4e6:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <pow>
     4ea:	9b 01       	movw	r18, r22
     4ec:	ac 01       	movw	r20, r24
     4ee:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3>
     4f2:	9b 01       	movw	r18, r22
     4f4:	ac 01       	movw	r20, r24
     4f6:	60 e0       	ldi	r22, 0x00	; 0
     4f8:	70 e0       	ldi	r23, 0x00	; 0
     4fa:	80 e8       	ldi	r24, 0x80	; 128
     4fc:	9f e4       	ldi	r25, 0x4F	; 79
     4fe:	0e 94 ba 04 	call	0x974	; 0x974 <__divsf3>
     502:	0e 94 2c 05 	call	0xa58	; 0xa58 <__fixunssfsi>
     506:	60 b9       	out	0x00, r22	; 0
     508:	08 95       	ret

0000050a <I2C_Start>:
     50a:	94 ea       	ldi	r25, 0xA4	; 164
     50c:	96 bf       	out	0x36, r25	; 54
     50e:	06 b6       	in	r0, 0x36	; 54
     510:	07 fe       	sbrs	r0, 7
     512:	fd cf       	rjmp	.-6      	; 0x50e <I2C_Start+0x4>
     514:	83 b9       	out	0x03, r24	; 3
     516:	84 e8       	ldi	r24, 0x84	; 132
     518:	86 bf       	out	0x36, r24	; 54
     51a:	06 b6       	in	r0, 0x36	; 54
     51c:	07 fe       	sbrs	r0, 7
     51e:	fd cf       	rjmp	.-6      	; 0x51a <I2C_Start+0x10>
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	08 95       	ret

00000524 <I2C_Repeated_Start>:
     524:	94 ea       	ldi	r25, 0xA4	; 164
     526:	96 bf       	out	0x36, r25	; 54
     528:	06 b6       	in	r0, 0x36	; 54
     52a:	07 fe       	sbrs	r0, 7
     52c:	fd cf       	rjmp	.-6      	; 0x528 <I2C_Repeated_Start+0x4>
     52e:	83 b9       	out	0x03, r24	; 3
     530:	84 e8       	ldi	r24, 0x84	; 132
     532:	86 bf       	out	0x36, r24	; 54
     534:	06 b6       	in	r0, 0x36	; 54
     536:	07 fe       	sbrs	r0, 7
     538:	fd cf       	rjmp	.-6      	; 0x534 <I2C_Repeated_Start+0x10>
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	08 95       	ret

0000053e <I2C_Read_Nack>:
     53e:	84 e8       	ldi	r24, 0x84	; 132
     540:	86 bf       	out	0x36, r24	; 54
     542:	06 b6       	in	r0, 0x36	; 54
     544:	07 fe       	sbrs	r0, 7
     546:	fd cf       	rjmp	.-6      	; 0x542 <I2C_Read_Nack+0x4>
     548:	83 b1       	in	r24, 0x03	; 3
     54a:	08 95       	ret

0000054c <I2C_Stop>:
     54c:	84 e9       	ldi	r24, 0x94	; 148
     54e:	86 bf       	out	0x36, r24	; 54
     550:	86 b7       	in	r24, 0x36	; 54
     552:	08 95       	ret

00000554 <decimal_to_bcd>:
     554:	9d ec       	ldi	r25, 0xCD	; 205
     556:	89 9f       	mul	r24, r25
     558:	91 2d       	mov	r25, r1
     55a:	11 24       	eor	r1, r1
     55c:	96 95       	lsr	r25
     55e:	96 95       	lsr	r25
     560:	96 95       	lsr	r25
     562:	39 2f       	mov	r19, r25
     564:	33 0f       	add	r19, r19
     566:	23 2f       	mov	r18, r19
     568:	22 0f       	add	r18, r18
     56a:	22 0f       	add	r18, r18
     56c:	23 0f       	add	r18, r19
     56e:	82 1b       	sub	r24, r18
     570:	30 e1       	ldi	r19, 0x10	; 16
     572:	93 9f       	mul	r25, r19
     574:	80 0d       	add	r24, r0
     576:	11 24       	eor	r1, r1
     578:	08 95       	ret

0000057a <current_water_temperature>:
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	0e 94 2b 02 	call	0x456	; 0x456 <on_off_7_segment>
     582:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <x>
     586:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <x+0x1>
     58a:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <x+0x2>
     58e:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <x+0x3>
     592:	0e 94 2c 05 	call	0xa58	; 0xa58 <__fixunssfsi>
     596:	86 2f       	mov	r24, r22
     598:	0e 94 aa 02 	call	0x554	; 0x554 <decimal_to_bcd>
     59c:	82 bb       	out	0x12, r24	; 18
     59e:	08 95       	ret

000005a0 <I2C_Write>:
     5a0:	0e 94 aa 02 	call	0x554	; 0x554 <decimal_to_bcd>
     5a4:	83 b9       	out	0x03, r24	; 3
     5a6:	84 e8       	ldi	r24, 0x84	; 132
     5a8:	86 bf       	out	0x36, r24	; 54
     5aa:	06 b6       	in	r0, 0x36	; 54
     5ac:	07 fe       	sbrs	r0, 7
     5ae:	fd cf       	rjmp	.-6      	; 0x5aa <I2C_Write+0xa>
     5b0:	08 95       	ret

000005b2 <EEPROM_write_read>:

u8 EEPROM_write_read(u8 stored_data)
{
     5b2:	cf 93       	push	r28
     5b4:	c8 2f       	mov	r28, r24
	u8 data;
	I2C_Init();
     5b6:	0e 94 65 02 	call	0x4ca	; 0x4ca <I2C_Init>
	I2C_Start(0xA0);
     5ba:	80 ea       	ldi	r24, 0xA0	; 160
     5bc:	0e 94 85 02 	call	0x50a	; 0x50a <I2C_Start>
	I2C_Write(stored_data);
     5c0:	8c 2f       	mov	r24, r28
     5c2:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <I2C_Write>
	I2C_Repeated_Start(0xA1);
     5c6:	81 ea       	ldi	r24, 0xA1	; 161
     5c8:	0e 94 92 02 	call	0x524	; 0x524 <I2C_Repeated_Start>
	data=I2C_Read_Nack ();
     5cc:	0e 94 9f 02 	call	0x53e	; 0x53e <I2C_Read_Nack>
     5d0:	c8 2f       	mov	r28, r24
	I2C_Stop();
     5d2:	0e 94 a6 02 	call	0x54c	; 0x54c <I2C_Stop>
	return data;
	
}
     5d6:	8c 2f       	mov	r24, r28
     5d8:	cf 91       	pop	r28
     5da:	08 95       	ret

000005dc <setting_temp>:

void setting_temp(void)

{
	
	if(PINB&(1<<3)&&counter<3 )
     5dc:	b3 9b       	sbis	0x16, 3	; 22
     5de:	1d c0       	rjmp	.+58     	; 0x61a <setting_temp+0x3e>
     5e0:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <counter>
     5e4:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <counter+0x1>
     5e8:	83 30       	cpi	r24, 0x03	; 3
     5ea:	91 05       	cpc	r25, r1
     5ec:	b4 f4       	brge	.+44     	; 0x61a <setting_temp+0x3e>
	{
		counter++;
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <counter+0x1>
     5f4:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <counter>
		counter_for_Timer=0;
     5f8:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     5fc:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     600:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     604:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     608:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     60c:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     610:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     614:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     618:	34 c0       	rjmp	.+104    	; 0x682 <setting_temp+0xa6>
	}
	else if(PINB&(1<<2)&&counter>-5)
     61a:	b2 9b       	sbis	0x16, 2	; 22
     61c:	1e c0       	rjmp	.+60     	; 0x65a <setting_temp+0x7e>
     61e:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <counter>
     622:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <counter+0x1>
     626:	8c 3f       	cpi	r24, 0xFC	; 252
     628:	2f ef       	ldi	r18, 0xFF	; 255
     62a:	92 07       	cpc	r25, r18
     62c:	b4 f0       	brlt	.+44     	; 0x65a <setting_temp+0x7e>
	{
		counter--;
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <counter+0x1>
     634:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <counter>
		counter_for_Timer=0;
     638:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     63c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     640:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     644:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     648:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     64c:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     650:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     654:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     658:	14 c0       	rjmp	.+40     	; 0x682 <setting_temp+0xa6>
	}
	
	else if (PINB&(1<<3) || PINB&(1<<2))
     65a:	b3 99       	sbic	0x16, 3	; 22
     65c:	02 c0       	rjmp	.+4      	; 0x662 <setting_temp+0x86>
     65e:	b2 9b       	sbis	0x16, 2	; 22
     660:	10 c0       	rjmp	.+32     	; 0x682 <setting_temp+0xa6>
	{
		counter_for_Timer=0;
     662:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     666:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     66a:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     66e:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     672:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     676:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     67a:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     67e:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	}
	switch(counter)
     682:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <counter>
     686:	f0 91 6c 00 	lds	r31, 0x006C	; 0x80006c <counter+0x1>
     68a:	35 96       	adiw	r30, 0x05	; 5
     68c:	e9 30       	cpi	r30, 0x09	; 9
     68e:	f1 05       	cpc	r31, r1
     690:	f0 f4       	brcc	.+60     	; 0x6ce <setting_temp+0xf2>
     692:	ed 5c       	subi	r30, 0xCD	; 205
     694:	ff 4f       	sbci	r31, 0xFF	; 255
     696:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__tablejump2__>
	{
		case 1:
		PORTD=0x65;
     69a:	85 e6       	ldi	r24, 0x65	; 101
     69c:	82 bb       	out	0x12, r24	; 18
		break;
     69e:	17 c0       	rjmp	.+46     	; 0x6ce <setting_temp+0xf2>
		case -1:
		PORTD=0x55;
     6a0:	85 e5       	ldi	r24, 0x55	; 85
     6a2:	82 bb       	out	0x12, r24	; 18
		break;
     6a4:	14 c0       	rjmp	.+40     	; 0x6ce <setting_temp+0xf2>
		case 2:
		PORTD=0x70;
     6a6:	80 e7       	ldi	r24, 0x70	; 112
     6a8:	82 bb       	out	0x12, r24	; 18
		break;
     6aa:	11 c0       	rjmp	.+34     	; 0x6ce <setting_temp+0xf2>
		case -2:
		PORTD=0x50;
     6ac:	80 e5       	ldi	r24, 0x50	; 80
     6ae:	82 bb       	out	0x12, r24	; 18
		break;
     6b0:	0e c0       	rjmp	.+28     	; 0x6ce <setting_temp+0xf2>
		case 3:
		PORTD=0x75;
     6b2:	85 e7       	ldi	r24, 0x75	; 117
     6b4:	82 bb       	out	0x12, r24	; 18
		break;
     6b6:	0b c0       	rjmp	.+22     	; 0x6ce <setting_temp+0xf2>
		case -3:
		PORTD=0x45;
     6b8:	85 e4       	ldi	r24, 0x45	; 69
     6ba:	82 bb       	out	0x12, r24	; 18
		break;
     6bc:	08 c0       	rjmp	.+16     	; 0x6ce <setting_temp+0xf2>
		case 0:
		PORTD=0x60;
     6be:	80 e6       	ldi	r24, 0x60	; 96
     6c0:	82 bb       	out	0x12, r24	; 18
		break;
     6c2:	05 c0       	rjmp	.+10     	; 0x6ce <setting_temp+0xf2>
		case -4:
		PORTD=0x40;
     6c4:	80 e4       	ldi	r24, 0x40	; 64
     6c6:	82 bb       	out	0x12, r24	; 18
		break;
     6c8:	02 c0       	rjmp	.+4      	; 0x6ce <setting_temp+0xf2>
		case -5:
		PORTD=0x35;
     6ca:	85 e3       	ldi	r24, 0x35	; 53
     6cc:	82 bb       	out	0x12, r24	; 18
		break;
	}
	
	EEPROM_write_read(counter);   // store value of counter to read it in EEPROM
     6ce:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <counter>
     6d2:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <EEPROM_write_read>
     6d6:	08 95       	ret

000006d8 <ON_MODE_Process>:
	
}

void ON_MODE_Process (void)
{
	while(flag==1)
     6d8:	8d c0       	rjmp	.+282    	; 0x7f4 <ON_MODE_Process+0x11c>
	{
		
		current_water_temperature();
     6da:	0e 94 bd 02 	call	0x57a	; 0x57a <current_water_temperature>
		ELEMENTS();
     6de:	0e 94 cd 01 	call	0x39a	; 0x39a <ELEMENTS>
		on_off_mode();
     6e2:	0e 94 4a 02 	call	0x494	; 0x494 <on_off_mode>
		if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
     6e6:	b3 99       	sbic	0x16, 3	; 22
     6e8:	5b c0       	rjmp	.+182    	; 0x7a0 <ON_MODE_Process+0xc8>
     6ea:	b2 99       	sbic	0x16, 2	; 22
     6ec:	59 c0       	rjmp	.+178    	; 0x7a0 <ON_MODE_Process+0xc8>
     6ee:	82 c0       	rjmp	.+260    	; 0x7f4 <ON_MODE_Process+0x11c>
		{
			
			while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
			{
				on_off_7_segment(1);
     6f0:	81 e0       	ldi	r24, 0x01	; 1
     6f2:	0e 94 2b 02 	call	0x456	; 0x456 <on_off_7_segment>
				setting_temp();
     6f6:	0e 94 ee 02 	call	0x5dc	; 0x5dc <setting_temp>
				ELEMENTS();
     6fa:	0e 94 cd 01 	call	0x39a	; 0x39a <ELEMENTS>
				on_off_mode();
     6fe:	0e 94 4a 02 	call	0x494	; 0x494 <on_off_mode>
				counter_for_Timer++;
     702:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     706:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     70a:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     70e:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     712:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     716:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     71a:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     71e:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     722:	a1 e0       	ldi	r26, 0x01	; 1
     724:	0e 94 05 08 	call	0x100a	; 0x100a <__adddi3_s8>
     728:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
     72c:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     730:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     734:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     738:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     73c:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     740:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     744:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
				on_off_7_segment(0);
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	0e 94 2b 02 	call	0x456	; 0x456 <on_off_7_segment>
				setting_temp();
     74e:	0e 94 ee 02 	call	0x5dc	; 0x5dc <setting_temp>
				ELEMENTS();
     752:	0e 94 cd 01 	call	0x39a	; 0x39a <ELEMENTS>
				on_off_mode();
     756:	0e 94 4a 02 	call	0x494	; 0x494 <on_off_mode>
				counter_for_Timer++;
     75a:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     75e:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     762:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     766:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     76a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     76e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     772:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     776:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     77a:	a1 e0       	ldi	r26, 0x01	; 1
     77c:	0e 94 05 08 	call	0x100a	; 0x100a <__adddi3_s8>
     780:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
     784:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     788:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     78c:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     790:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     794:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     798:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     79c:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		ELEMENTS();
		on_off_mode();
		if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
		{
			
			while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
     7a0:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     7a4:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     7a8:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     7ac:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     7b0:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     7b4:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     7b8:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     7bc:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
     7c0:	a9 e0       	ldi	r26, 0x09	; 9
     7c2:	0e 94 11 08 	call	0x1022	; 0x1022 <__cmpdi2_s8>
     7c6:	09 f0       	breq	.+2      	; 0x7ca <ON_MODE_Process+0xf2>
     7c8:	2c f4       	brge	.+10     	; 0x7d4 <ON_MODE_Process+0xfc>
     7ca:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     7ce:	81 30       	cpi	r24, 0x01	; 1
     7d0:	09 f4       	brne	.+2      	; 0x7d4 <ON_MODE_Process+0xfc>
     7d2:	8e cf       	rjmp	.-228    	; 0x6f0 <ON_MODE_Process+0x18>
				counter_for_Timer++;
				
				
				
			}
			counter_for_Timer=0;
     7d4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     7d8:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     7dc:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     7e0:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     7e4:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
     7e8:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
     7ec:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
     7f0:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	
}

void ON_MODE_Process (void)
{
	while(flag==1)
     7f4:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     7f8:	81 30       	cpi	r24, 0x01	; 1
     7fa:	09 f4       	brne	.+2      	; 0x7fe <ON_MODE_Process+0x126>
     7fc:	6e cf       	rjmp	.-292    	; 0x6da <ON_MODE_Process+0x2>
				
			}
			counter_for_Timer=0;
		}
	}
}
     7fe:	08 95       	ret

00000800 <__vector_8>:
#ifndef INTERRUPT_H
#define INTERRUPT_H 
void Temperature_reading(void); 
#endif
ISR (TIMER1_OVF_vect)    // Timer1 ISR
{
     800:	1f 92       	push	r1
     802:	0f 92       	push	r0
     804:	0f b6       	in	r0, 0x3f	; 63
     806:	0f 92       	push	r0
     808:	11 24       	eor	r1, r1
     80a:	2f 93       	push	r18
     80c:	3f 93       	push	r19
     80e:	4f 93       	push	r20
     810:	5f 93       	push	r21
     812:	6f 93       	push	r22
     814:	7f 93       	push	r23
     816:	8f 93       	push	r24
     818:	9f 93       	push	r25
     81a:	af 93       	push	r26
     81c:	bf 93       	push	r27
     81e:	ef 93       	push	r30
     820:	ff 93       	push	r31
	TCNT1 = 65380;  // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64"
     822:	84 e6       	ldi	r24, 0x64	; 100
     824:	9f ef       	ldi	r25, 0xFF	; 255
     826:	9d bd       	out	0x2d, r25	; 45
     828:	8c bd       	out	0x2c, r24	; 44
		Temperature_reading();  //read temperature each 100 ms 
     82a:	0e 94 3e 01 	call	0x27c	; 0x27c <Temperature_reading>
	
		}
     82e:	ff 91       	pop	r31
     830:	ef 91       	pop	r30
     832:	bf 91       	pop	r27
     834:	af 91       	pop	r26
     836:	9f 91       	pop	r25
     838:	8f 91       	pop	r24
     83a:	7f 91       	pop	r23
     83c:	6f 91       	pop	r22
     83e:	5f 91       	pop	r21
     840:	4f 91       	pop	r20
     842:	3f 91       	pop	r19
     844:	2f 91       	pop	r18
     846:	0f 90       	pop	r0
     848:	0f be       	out	0x3f, r0	; 63
     84a:	0f 90       	pop	r0
     84c:	1f 90       	pop	r1
     84e:	18 95       	reti

00000850 <INT_interrupt>:


void INT_interrupt (void)
{
	
	TCNT1 = 65380;   // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64" 
     850:	84 e6       	ldi	r24, 0x64	; 100
     852:	9f ef       	ldi	r25, 0xFF	; 255
     854:	9d bd       	out	0x2d, r25	; 45
     856:	8c bd       	out	0x2c, r24	; 44
	TCCR1A = 0x00;
     858:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1<<CS10) | (1<<CS12);;  // Timer mode with 1024 pre_scaler
     85a:	85 e0       	ldi	r24, 0x05	; 5
     85c:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1) ;   // Enable timer1 overflow interrupt(TOIE1)
     85e:	84 e0       	ldi	r24, 0x04	; 4
     860:	89 bf       	out	0x39, r24	; 57
	sei();        // Enable global interrupts by setting global interrupt enable bit in SREG
     862:	78 94       	sei
     864:	08 95       	ret

00000866 <main>:
 when your program is compiled.

the main function that executes in this project*/
int main(void)
{
	DATA_DIRECTION_REGISTER('O','I'); //Activate all input/Outputs sensors,actuators Pins 
     866:	69 e4       	ldi	r22, 0x49	; 73
     868:	8f e4       	ldi	r24, 0x4F	; 79
     86a:	0e 94 a6 00 	call	0x14c	; 0x14c <DATA_DIRECTION_REGISTER>
INT_interrupt(); //Initialize the internal Timer 1 Driver
     86e:	0e 94 28 04 	call	0x850	; 0x850 <INT_interrupt>
ADC_init(); //Initialize the Analog/Digital converter Driver
     872:	0e 94 91 00 	call	0x122	; 0x122 <ADC_init>
Init_VARIABLES(); //Initialize All variables that used in this project by required values.
     876:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <Init_VARIABLES>
    /* super loop for repeating process infinitely number of cycles */
    while (1) 
    {
		on_off_mode();  // wait until user switch on the Heater.
     87a:	0e 94 4a 02 	call	0x494	; 0x494 <on_off_mode>
		if(flag==1) 
     87e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <flag>
     882:	81 30       	cpi	r24, 0x01	; 1
     884:	d1 f7       	brne	.-12     	; 0x87a <main+0x14>
		; so that It will execute this scope*/
		{
			/*The main Process will execute that covered all requirements of project
			with asking user if the Heater is set/Reset for each cycle Until the Flag 
			reset terminates this scope. */
			ON_MODE_Process (); 
     886:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <ON_MODE_Process>
			/*Monitoring On/OFF mode the change the state of flag according to On/OFF switch*/
			on_off_mode();
     88a:	0e 94 4a 02 	call	0x494	; 0x494 <on_off_mode>
     88e:	f5 cf       	rjmp	.-22     	; 0x87a <main+0x14>

00000890 <__subsf3>:
     890:	50 58       	subi	r21, 0x80	; 128

00000892 <__addsf3>:
     892:	bb 27       	eor	r27, r27
     894:	aa 27       	eor	r26, r26
     896:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__addsf3x>
     89a:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_round>
     89e:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__fp_pscA>
     8a2:	38 f0       	brcs	.+14     	; 0x8b2 <__addsf3+0x20>
     8a4:	0e 94 cc 05 	call	0xb98	; 0xb98 <__fp_pscB>
     8a8:	20 f0       	brcs	.+8      	; 0x8b2 <__addsf3+0x20>
     8aa:	39 f4       	brne	.+14     	; 0x8ba <__addsf3+0x28>
     8ac:	9f 3f       	cpi	r25, 0xFF	; 255
     8ae:	19 f4       	brne	.+6      	; 0x8b6 <__addsf3+0x24>
     8b0:	26 f4       	brtc	.+8      	; 0x8ba <__addsf3+0x28>
     8b2:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_nan>
     8b6:	0e f4       	brtc	.+2      	; 0x8ba <__addsf3+0x28>
     8b8:	e0 95       	com	r30
     8ba:	e7 fb       	bst	r30, 7
     8bc:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>

000008c0 <__addsf3x>:
     8c0:	e9 2f       	mov	r30, r25
     8c2:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fp_split3>
     8c6:	58 f3       	brcs	.-42     	; 0x89e <__addsf3+0xc>
     8c8:	ba 17       	cp	r27, r26
     8ca:	62 07       	cpc	r22, r18
     8cc:	73 07       	cpc	r23, r19
     8ce:	84 07       	cpc	r24, r20
     8d0:	95 07       	cpc	r25, r21
     8d2:	20 f0       	brcs	.+8      	; 0x8dc <__addsf3x+0x1c>
     8d4:	79 f4       	brne	.+30     	; 0x8f4 <__addsf3x+0x34>
     8d6:	a6 f5       	brtc	.+104    	; 0x940 <__addsf3x+0x80>
     8d8:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <__fp_zero>
     8dc:	0e f4       	brtc	.+2      	; 0x8e0 <__addsf3x+0x20>
     8de:	e0 95       	com	r30
     8e0:	0b 2e       	mov	r0, r27
     8e2:	ba 2f       	mov	r27, r26
     8e4:	a0 2d       	mov	r26, r0
     8e6:	0b 01       	movw	r0, r22
     8e8:	b9 01       	movw	r22, r18
     8ea:	90 01       	movw	r18, r0
     8ec:	0c 01       	movw	r0, r24
     8ee:	ca 01       	movw	r24, r20
     8f0:	a0 01       	movw	r20, r0
     8f2:	11 24       	eor	r1, r1
     8f4:	ff 27       	eor	r31, r31
     8f6:	59 1b       	sub	r21, r25
     8f8:	99 f0       	breq	.+38     	; 0x920 <__addsf3x+0x60>
     8fa:	59 3f       	cpi	r21, 0xF9	; 249
     8fc:	50 f4       	brcc	.+20     	; 0x912 <__addsf3x+0x52>
     8fe:	50 3e       	cpi	r21, 0xE0	; 224
     900:	68 f1       	brcs	.+90     	; 0x95c <__addsf3x+0x9c>
     902:	1a 16       	cp	r1, r26
     904:	f0 40       	sbci	r31, 0x00	; 0
     906:	a2 2f       	mov	r26, r18
     908:	23 2f       	mov	r18, r19
     90a:	34 2f       	mov	r19, r20
     90c:	44 27       	eor	r20, r20
     90e:	58 5f       	subi	r21, 0xF8	; 248
     910:	f3 cf       	rjmp	.-26     	; 0x8f8 <__addsf3x+0x38>
     912:	46 95       	lsr	r20
     914:	37 95       	ror	r19
     916:	27 95       	ror	r18
     918:	a7 95       	ror	r26
     91a:	f0 40       	sbci	r31, 0x00	; 0
     91c:	53 95       	inc	r21
     91e:	c9 f7       	brne	.-14     	; 0x912 <__addsf3x+0x52>
     920:	7e f4       	brtc	.+30     	; 0x940 <__addsf3x+0x80>
     922:	1f 16       	cp	r1, r31
     924:	ba 0b       	sbc	r27, r26
     926:	62 0b       	sbc	r22, r18
     928:	73 0b       	sbc	r23, r19
     92a:	84 0b       	sbc	r24, r20
     92c:	ba f0       	brmi	.+46     	; 0x95c <__addsf3x+0x9c>
     92e:	91 50       	subi	r25, 0x01	; 1
     930:	a1 f0       	breq	.+40     	; 0x95a <__addsf3x+0x9a>
     932:	ff 0f       	add	r31, r31
     934:	bb 1f       	adc	r27, r27
     936:	66 1f       	adc	r22, r22
     938:	77 1f       	adc	r23, r23
     93a:	88 1f       	adc	r24, r24
     93c:	c2 f7       	brpl	.-16     	; 0x92e <__addsf3x+0x6e>
     93e:	0e c0       	rjmp	.+28     	; 0x95c <__addsf3x+0x9c>
     940:	ba 0f       	add	r27, r26
     942:	62 1f       	adc	r22, r18
     944:	73 1f       	adc	r23, r19
     946:	84 1f       	adc	r24, r20
     948:	48 f4       	brcc	.+18     	; 0x95c <__addsf3x+0x9c>
     94a:	87 95       	ror	r24
     94c:	77 95       	ror	r23
     94e:	67 95       	ror	r22
     950:	b7 95       	ror	r27
     952:	f7 95       	ror	r31
     954:	9e 3f       	cpi	r25, 0xFE	; 254
     956:	08 f0       	brcs	.+2      	; 0x95a <__addsf3x+0x9a>
     958:	b0 cf       	rjmp	.-160    	; 0x8ba <__addsf3+0x28>
     95a:	93 95       	inc	r25
     95c:	88 0f       	add	r24, r24
     95e:	08 f0       	brcs	.+2      	; 0x962 <__addsf3x+0xa2>
     960:	99 27       	eor	r25, r25
     962:	ee 0f       	add	r30, r30
     964:	97 95       	ror	r25
     966:	87 95       	ror	r24
     968:	08 95       	ret

0000096a <__cmpsf2>:
     96a:	0e 94 98 05 	call	0xb30	; 0xb30 <__fp_cmp>
     96e:	08 f4       	brcc	.+2      	; 0x972 <__cmpsf2+0x8>
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	08 95       	ret

00000974 <__divsf3>:
     974:	0e 94 ce 04 	call	0x99c	; 0x99c <__divsf3x>
     978:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_round>
     97c:	0e 94 cc 05 	call	0xb98	; 0xb98 <__fp_pscB>
     980:	58 f0       	brcs	.+22     	; 0x998 <__divsf3+0x24>
     982:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__fp_pscA>
     986:	40 f0       	brcs	.+16     	; 0x998 <__divsf3+0x24>
     988:	29 f4       	brne	.+10     	; 0x994 <__divsf3+0x20>
     98a:	5f 3f       	cpi	r21, 0xFF	; 255
     98c:	29 f0       	breq	.+10     	; 0x998 <__divsf3+0x24>
     98e:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>
     992:	51 11       	cpse	r21, r1
     994:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_szero>
     998:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_nan>

0000099c <__divsf3x>:
     99c:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fp_split3>
     9a0:	68 f3       	brcs	.-38     	; 0x97c <__divsf3+0x8>

000009a2 <__divsf3_pse>:
     9a2:	99 23       	and	r25, r25
     9a4:	b1 f3       	breq	.-20     	; 0x992 <__divsf3+0x1e>
     9a6:	55 23       	and	r21, r21
     9a8:	91 f3       	breq	.-28     	; 0x98e <__divsf3+0x1a>
     9aa:	95 1b       	sub	r25, r21
     9ac:	55 0b       	sbc	r21, r21
     9ae:	bb 27       	eor	r27, r27
     9b0:	aa 27       	eor	r26, r26
     9b2:	62 17       	cp	r22, r18
     9b4:	73 07       	cpc	r23, r19
     9b6:	84 07       	cpc	r24, r20
     9b8:	38 f0       	brcs	.+14     	; 0x9c8 <__divsf3_pse+0x26>
     9ba:	9f 5f       	subi	r25, 0xFF	; 255
     9bc:	5f 4f       	sbci	r21, 0xFF	; 255
     9be:	22 0f       	add	r18, r18
     9c0:	33 1f       	adc	r19, r19
     9c2:	44 1f       	adc	r20, r20
     9c4:	aa 1f       	adc	r26, r26
     9c6:	a9 f3       	breq	.-22     	; 0x9b2 <__divsf3_pse+0x10>
     9c8:	35 d0       	rcall	.+106    	; 0xa34 <__divsf3_pse+0x92>
     9ca:	0e 2e       	mov	r0, r30
     9cc:	3a f0       	brmi	.+14     	; 0x9dc <__divsf3_pse+0x3a>
     9ce:	e0 e8       	ldi	r30, 0x80	; 128
     9d0:	32 d0       	rcall	.+100    	; 0xa36 <__divsf3_pse+0x94>
     9d2:	91 50       	subi	r25, 0x01	; 1
     9d4:	50 40       	sbci	r21, 0x00	; 0
     9d6:	e6 95       	lsr	r30
     9d8:	00 1c       	adc	r0, r0
     9da:	ca f7       	brpl	.-14     	; 0x9ce <__divsf3_pse+0x2c>
     9dc:	2b d0       	rcall	.+86     	; 0xa34 <__divsf3_pse+0x92>
     9de:	fe 2f       	mov	r31, r30
     9e0:	29 d0       	rcall	.+82     	; 0xa34 <__divsf3_pse+0x92>
     9e2:	66 0f       	add	r22, r22
     9e4:	77 1f       	adc	r23, r23
     9e6:	88 1f       	adc	r24, r24
     9e8:	bb 1f       	adc	r27, r27
     9ea:	26 17       	cp	r18, r22
     9ec:	37 07       	cpc	r19, r23
     9ee:	48 07       	cpc	r20, r24
     9f0:	ab 07       	cpc	r26, r27
     9f2:	b0 e8       	ldi	r27, 0x80	; 128
     9f4:	09 f0       	breq	.+2      	; 0x9f8 <__divsf3_pse+0x56>
     9f6:	bb 0b       	sbc	r27, r27
     9f8:	80 2d       	mov	r24, r0
     9fa:	bf 01       	movw	r22, r30
     9fc:	ff 27       	eor	r31, r31
     9fe:	93 58       	subi	r25, 0x83	; 131
     a00:	5f 4f       	sbci	r21, 0xFF	; 255
     a02:	3a f0       	brmi	.+14     	; 0xa12 <__divsf3_pse+0x70>
     a04:	9e 3f       	cpi	r25, 0xFE	; 254
     a06:	51 05       	cpc	r21, r1
     a08:	78 f0       	brcs	.+30     	; 0xa28 <__divsf3_pse+0x86>
     a0a:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>
     a0e:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_szero>
     a12:	5f 3f       	cpi	r21, 0xFF	; 255
     a14:	e4 f3       	brlt	.-8      	; 0xa0e <__divsf3_pse+0x6c>
     a16:	98 3e       	cpi	r25, 0xE8	; 232
     a18:	d4 f3       	brlt	.-12     	; 0xa0e <__divsf3_pse+0x6c>
     a1a:	86 95       	lsr	r24
     a1c:	77 95       	ror	r23
     a1e:	67 95       	ror	r22
     a20:	b7 95       	ror	r27
     a22:	f7 95       	ror	r31
     a24:	9f 5f       	subi	r25, 0xFF	; 255
     a26:	c9 f7       	brne	.-14     	; 0xa1a <__divsf3_pse+0x78>
     a28:	88 0f       	add	r24, r24
     a2a:	91 1d       	adc	r25, r1
     a2c:	96 95       	lsr	r25
     a2e:	87 95       	ror	r24
     a30:	97 f9       	bld	r25, 7
     a32:	08 95       	ret
     a34:	e1 e0       	ldi	r30, 0x01	; 1
     a36:	66 0f       	add	r22, r22
     a38:	77 1f       	adc	r23, r23
     a3a:	88 1f       	adc	r24, r24
     a3c:	bb 1f       	adc	r27, r27
     a3e:	62 17       	cp	r22, r18
     a40:	73 07       	cpc	r23, r19
     a42:	84 07       	cpc	r24, r20
     a44:	ba 07       	cpc	r27, r26
     a46:	20 f0       	brcs	.+8      	; 0xa50 <__divsf3_pse+0xae>
     a48:	62 1b       	sub	r22, r18
     a4a:	73 0b       	sbc	r23, r19
     a4c:	84 0b       	sbc	r24, r20
     a4e:	ba 0b       	sbc	r27, r26
     a50:	ee 1f       	adc	r30, r30
     a52:	88 f7       	brcc	.-30     	; 0xa36 <__divsf3_pse+0x94>
     a54:	e0 95       	com	r30
     a56:	08 95       	ret

00000a58 <__fixunssfsi>:
     a58:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__fp_splitA>
     a5c:	88 f0       	brcs	.+34     	; 0xa80 <__fixunssfsi+0x28>
     a5e:	9f 57       	subi	r25, 0x7F	; 127
     a60:	98 f0       	brcs	.+38     	; 0xa88 <__fixunssfsi+0x30>
     a62:	b9 2f       	mov	r27, r25
     a64:	99 27       	eor	r25, r25
     a66:	b7 51       	subi	r27, 0x17	; 23
     a68:	b0 f0       	brcs	.+44     	; 0xa96 <__fixunssfsi+0x3e>
     a6a:	e1 f0       	breq	.+56     	; 0xaa4 <__fixunssfsi+0x4c>
     a6c:	66 0f       	add	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	88 1f       	adc	r24, r24
     a72:	99 1f       	adc	r25, r25
     a74:	1a f0       	brmi	.+6      	; 0xa7c <__fixunssfsi+0x24>
     a76:	ba 95       	dec	r27
     a78:	c9 f7       	brne	.-14     	; 0xa6c <__fixunssfsi+0x14>
     a7a:	14 c0       	rjmp	.+40     	; 0xaa4 <__fixunssfsi+0x4c>
     a7c:	b1 30       	cpi	r27, 0x01	; 1
     a7e:	91 f0       	breq	.+36     	; 0xaa4 <__fixunssfsi+0x4c>
     a80:	0e 94 06 06 	call	0xc0c	; 0xc0c <__fp_zero>
     a84:	b1 e0       	ldi	r27, 0x01	; 1
     a86:	08 95       	ret
     a88:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <__fp_zero>
     a8c:	67 2f       	mov	r22, r23
     a8e:	78 2f       	mov	r23, r24
     a90:	88 27       	eor	r24, r24
     a92:	b8 5f       	subi	r27, 0xF8	; 248
     a94:	39 f0       	breq	.+14     	; 0xaa4 <__fixunssfsi+0x4c>
     a96:	b9 3f       	cpi	r27, 0xF9	; 249
     a98:	cc f3       	brlt	.-14     	; 0xa8c <__fixunssfsi+0x34>
     a9a:	86 95       	lsr	r24
     a9c:	77 95       	ror	r23
     a9e:	67 95       	ror	r22
     aa0:	b3 95       	inc	r27
     aa2:	d9 f7       	brne	.-10     	; 0xa9a <__fixunssfsi+0x42>
     aa4:	3e f4       	brtc	.+14     	; 0xab4 <__fixunssfsi+0x5c>
     aa6:	90 95       	com	r25
     aa8:	80 95       	com	r24
     aaa:	70 95       	com	r23
     aac:	61 95       	neg	r22
     aae:	7f 4f       	sbci	r23, 0xFF	; 255
     ab0:	8f 4f       	sbci	r24, 0xFF	; 255
     ab2:	9f 4f       	sbci	r25, 0xFF	; 255
     ab4:	08 95       	ret

00000ab6 <__floatunsisf>:
     ab6:	e8 94       	clt
     ab8:	09 c0       	rjmp	.+18     	; 0xacc <__floatsisf+0x12>

00000aba <__floatsisf>:
     aba:	97 fb       	bst	r25, 7
     abc:	3e f4       	brtc	.+14     	; 0xacc <__floatsisf+0x12>
     abe:	90 95       	com	r25
     ac0:	80 95       	com	r24
     ac2:	70 95       	com	r23
     ac4:	61 95       	neg	r22
     ac6:	7f 4f       	sbci	r23, 0xFF	; 255
     ac8:	8f 4f       	sbci	r24, 0xFF	; 255
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	99 23       	and	r25, r25
     ace:	a9 f0       	breq	.+42     	; 0xafa <__floatsisf+0x40>
     ad0:	f9 2f       	mov	r31, r25
     ad2:	96 e9       	ldi	r25, 0x96	; 150
     ad4:	bb 27       	eor	r27, r27
     ad6:	93 95       	inc	r25
     ad8:	f6 95       	lsr	r31
     ada:	87 95       	ror	r24
     adc:	77 95       	ror	r23
     ade:	67 95       	ror	r22
     ae0:	b7 95       	ror	r27
     ae2:	f1 11       	cpse	r31, r1
     ae4:	f8 cf       	rjmp	.-16     	; 0xad6 <__floatsisf+0x1c>
     ae6:	fa f4       	brpl	.+62     	; 0xb26 <__floatsisf+0x6c>
     ae8:	bb 0f       	add	r27, r27
     aea:	11 f4       	brne	.+4      	; 0xaf0 <__floatsisf+0x36>
     aec:	60 ff       	sbrs	r22, 0
     aee:	1b c0       	rjmp	.+54     	; 0xb26 <__floatsisf+0x6c>
     af0:	6f 5f       	subi	r22, 0xFF	; 255
     af2:	7f 4f       	sbci	r23, 0xFF	; 255
     af4:	8f 4f       	sbci	r24, 0xFF	; 255
     af6:	9f 4f       	sbci	r25, 0xFF	; 255
     af8:	16 c0       	rjmp	.+44     	; 0xb26 <__floatsisf+0x6c>
     afa:	88 23       	and	r24, r24
     afc:	11 f0       	breq	.+4      	; 0xb02 <__floatsisf+0x48>
     afe:	96 e9       	ldi	r25, 0x96	; 150
     b00:	11 c0       	rjmp	.+34     	; 0xb24 <__floatsisf+0x6a>
     b02:	77 23       	and	r23, r23
     b04:	21 f0       	breq	.+8      	; 0xb0e <__floatsisf+0x54>
     b06:	9e e8       	ldi	r25, 0x8E	; 142
     b08:	87 2f       	mov	r24, r23
     b0a:	76 2f       	mov	r23, r22
     b0c:	05 c0       	rjmp	.+10     	; 0xb18 <__floatsisf+0x5e>
     b0e:	66 23       	and	r22, r22
     b10:	71 f0       	breq	.+28     	; 0xb2e <__floatsisf+0x74>
     b12:	96 e8       	ldi	r25, 0x86	; 134
     b14:	86 2f       	mov	r24, r22
     b16:	70 e0       	ldi	r23, 0x00	; 0
     b18:	60 e0       	ldi	r22, 0x00	; 0
     b1a:	2a f0       	brmi	.+10     	; 0xb26 <__floatsisf+0x6c>
     b1c:	9a 95       	dec	r25
     b1e:	66 0f       	add	r22, r22
     b20:	77 1f       	adc	r23, r23
     b22:	88 1f       	adc	r24, r24
     b24:	da f7       	brpl	.-10     	; 0xb1c <__floatsisf+0x62>
     b26:	88 0f       	add	r24, r24
     b28:	96 95       	lsr	r25
     b2a:	87 95       	ror	r24
     b2c:	97 f9       	bld	r25, 7
     b2e:	08 95       	ret

00000b30 <__fp_cmp>:
     b30:	99 0f       	add	r25, r25
     b32:	00 08       	sbc	r0, r0
     b34:	55 0f       	add	r21, r21
     b36:	aa 0b       	sbc	r26, r26
     b38:	e0 e8       	ldi	r30, 0x80	; 128
     b3a:	fe ef       	ldi	r31, 0xFE	; 254
     b3c:	16 16       	cp	r1, r22
     b3e:	17 06       	cpc	r1, r23
     b40:	e8 07       	cpc	r30, r24
     b42:	f9 07       	cpc	r31, r25
     b44:	c0 f0       	brcs	.+48     	; 0xb76 <__fp_cmp+0x46>
     b46:	12 16       	cp	r1, r18
     b48:	13 06       	cpc	r1, r19
     b4a:	e4 07       	cpc	r30, r20
     b4c:	f5 07       	cpc	r31, r21
     b4e:	98 f0       	brcs	.+38     	; 0xb76 <__fp_cmp+0x46>
     b50:	62 1b       	sub	r22, r18
     b52:	73 0b       	sbc	r23, r19
     b54:	84 0b       	sbc	r24, r20
     b56:	95 0b       	sbc	r25, r21
     b58:	39 f4       	brne	.+14     	; 0xb68 <__fp_cmp+0x38>
     b5a:	0a 26       	eor	r0, r26
     b5c:	61 f0       	breq	.+24     	; 0xb76 <__fp_cmp+0x46>
     b5e:	23 2b       	or	r18, r19
     b60:	24 2b       	or	r18, r20
     b62:	25 2b       	or	r18, r21
     b64:	21 f4       	brne	.+8      	; 0xb6e <__fp_cmp+0x3e>
     b66:	08 95       	ret
     b68:	0a 26       	eor	r0, r26
     b6a:	09 f4       	brne	.+2      	; 0xb6e <__fp_cmp+0x3e>
     b6c:	a1 40       	sbci	r26, 0x01	; 1
     b6e:	a6 95       	lsr	r26
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	81 1d       	adc	r24, r1
     b74:	81 1d       	adc	r24, r1
     b76:	08 95       	ret

00000b78 <__fp_inf>:
     b78:	97 f9       	bld	r25, 7
     b7a:	9f 67       	ori	r25, 0x7F	; 127
     b7c:	80 e8       	ldi	r24, 0x80	; 128
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	08 95       	ret

00000b84 <__fp_nan>:
     b84:	9f ef       	ldi	r25, 0xFF	; 255
     b86:	80 ec       	ldi	r24, 0xC0	; 192
     b88:	08 95       	ret

00000b8a <__fp_pscA>:
     b8a:	00 24       	eor	r0, r0
     b8c:	0a 94       	dec	r0
     b8e:	16 16       	cp	r1, r22
     b90:	17 06       	cpc	r1, r23
     b92:	18 06       	cpc	r1, r24
     b94:	09 06       	cpc	r0, r25
     b96:	08 95       	ret

00000b98 <__fp_pscB>:
     b98:	00 24       	eor	r0, r0
     b9a:	0a 94       	dec	r0
     b9c:	12 16       	cp	r1, r18
     b9e:	13 06       	cpc	r1, r19
     ba0:	14 06       	cpc	r1, r20
     ba2:	05 06       	cpc	r0, r21
     ba4:	08 95       	ret

00000ba6 <__fp_round>:
     ba6:	09 2e       	mov	r0, r25
     ba8:	03 94       	inc	r0
     baa:	00 0c       	add	r0, r0
     bac:	11 f4       	brne	.+4      	; 0xbb2 <__fp_round+0xc>
     bae:	88 23       	and	r24, r24
     bb0:	52 f0       	brmi	.+20     	; 0xbc6 <__fp_round+0x20>
     bb2:	bb 0f       	add	r27, r27
     bb4:	40 f4       	brcc	.+16     	; 0xbc6 <__fp_round+0x20>
     bb6:	bf 2b       	or	r27, r31
     bb8:	11 f4       	brne	.+4      	; 0xbbe <__fp_round+0x18>
     bba:	60 ff       	sbrs	r22, 0
     bbc:	04 c0       	rjmp	.+8      	; 0xbc6 <__fp_round+0x20>
     bbe:	6f 5f       	subi	r22, 0xFF	; 255
     bc0:	7f 4f       	sbci	r23, 0xFF	; 255
     bc2:	8f 4f       	sbci	r24, 0xFF	; 255
     bc4:	9f 4f       	sbci	r25, 0xFF	; 255
     bc6:	08 95       	ret

00000bc8 <__fp_split3>:
     bc8:	57 fd       	sbrc	r21, 7
     bca:	90 58       	subi	r25, 0x80	; 128
     bcc:	44 0f       	add	r20, r20
     bce:	55 1f       	adc	r21, r21
     bd0:	59 f0       	breq	.+22     	; 0xbe8 <__fp_splitA+0x10>
     bd2:	5f 3f       	cpi	r21, 0xFF	; 255
     bd4:	71 f0       	breq	.+28     	; 0xbf2 <__fp_splitA+0x1a>
     bd6:	47 95       	ror	r20

00000bd8 <__fp_splitA>:
     bd8:	88 0f       	add	r24, r24
     bda:	97 fb       	bst	r25, 7
     bdc:	99 1f       	adc	r25, r25
     bde:	61 f0       	breq	.+24     	; 0xbf8 <__fp_splitA+0x20>
     be0:	9f 3f       	cpi	r25, 0xFF	; 255
     be2:	79 f0       	breq	.+30     	; 0xc02 <__fp_splitA+0x2a>
     be4:	87 95       	ror	r24
     be6:	08 95       	ret
     be8:	12 16       	cp	r1, r18
     bea:	13 06       	cpc	r1, r19
     bec:	14 06       	cpc	r1, r20
     bee:	55 1f       	adc	r21, r21
     bf0:	f2 cf       	rjmp	.-28     	; 0xbd6 <__fp_split3+0xe>
     bf2:	46 95       	lsr	r20
     bf4:	f1 df       	rcall	.-30     	; 0xbd8 <__fp_splitA>
     bf6:	08 c0       	rjmp	.+16     	; 0xc08 <__fp_splitA+0x30>
     bf8:	16 16       	cp	r1, r22
     bfa:	17 06       	cpc	r1, r23
     bfc:	18 06       	cpc	r1, r24
     bfe:	99 1f       	adc	r25, r25
     c00:	f1 cf       	rjmp	.-30     	; 0xbe4 <__fp_splitA+0xc>
     c02:	86 95       	lsr	r24
     c04:	71 05       	cpc	r23, r1
     c06:	61 05       	cpc	r22, r1
     c08:	08 94       	sec
     c0a:	08 95       	ret

00000c0c <__fp_zero>:
     c0c:	e8 94       	clt

00000c0e <__fp_szero>:
     c0e:	bb 27       	eor	r27, r27
     c10:	66 27       	eor	r22, r22
     c12:	77 27       	eor	r23, r23
     c14:	cb 01       	movw	r24, r22
     c16:	97 f9       	bld	r25, 7
     c18:	08 95       	ret

00000c1a <__mulsf3>:
     c1a:	0e 94 20 06 	call	0xc40	; 0xc40 <__mulsf3x>
     c1e:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_round>
     c22:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__fp_pscA>
     c26:	38 f0       	brcs	.+14     	; 0xc36 <__mulsf3+0x1c>
     c28:	0e 94 cc 05 	call	0xb98	; 0xb98 <__fp_pscB>
     c2c:	20 f0       	brcs	.+8      	; 0xc36 <__mulsf3+0x1c>
     c2e:	95 23       	and	r25, r21
     c30:	11 f0       	breq	.+4      	; 0xc36 <__mulsf3+0x1c>
     c32:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>
     c36:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_nan>
     c3a:	11 24       	eor	r1, r1
     c3c:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_szero>

00000c40 <__mulsf3x>:
     c40:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fp_split3>
     c44:	70 f3       	brcs	.-36     	; 0xc22 <__mulsf3+0x8>

00000c46 <__mulsf3_pse>:
     c46:	95 9f       	mul	r25, r21
     c48:	c1 f3       	breq	.-16     	; 0xc3a <__mulsf3+0x20>
     c4a:	95 0f       	add	r25, r21
     c4c:	50 e0       	ldi	r21, 0x00	; 0
     c4e:	55 1f       	adc	r21, r21
     c50:	62 9f       	mul	r22, r18
     c52:	f0 01       	movw	r30, r0
     c54:	72 9f       	mul	r23, r18
     c56:	bb 27       	eor	r27, r27
     c58:	f0 0d       	add	r31, r0
     c5a:	b1 1d       	adc	r27, r1
     c5c:	63 9f       	mul	r22, r19
     c5e:	aa 27       	eor	r26, r26
     c60:	f0 0d       	add	r31, r0
     c62:	b1 1d       	adc	r27, r1
     c64:	aa 1f       	adc	r26, r26
     c66:	64 9f       	mul	r22, r20
     c68:	66 27       	eor	r22, r22
     c6a:	b0 0d       	add	r27, r0
     c6c:	a1 1d       	adc	r26, r1
     c6e:	66 1f       	adc	r22, r22
     c70:	82 9f       	mul	r24, r18
     c72:	22 27       	eor	r18, r18
     c74:	b0 0d       	add	r27, r0
     c76:	a1 1d       	adc	r26, r1
     c78:	62 1f       	adc	r22, r18
     c7a:	73 9f       	mul	r23, r19
     c7c:	b0 0d       	add	r27, r0
     c7e:	a1 1d       	adc	r26, r1
     c80:	62 1f       	adc	r22, r18
     c82:	83 9f       	mul	r24, r19
     c84:	a0 0d       	add	r26, r0
     c86:	61 1d       	adc	r22, r1
     c88:	22 1f       	adc	r18, r18
     c8a:	74 9f       	mul	r23, r20
     c8c:	33 27       	eor	r19, r19
     c8e:	a0 0d       	add	r26, r0
     c90:	61 1d       	adc	r22, r1
     c92:	23 1f       	adc	r18, r19
     c94:	84 9f       	mul	r24, r20
     c96:	60 0d       	add	r22, r0
     c98:	21 1d       	adc	r18, r1
     c9a:	82 2f       	mov	r24, r18
     c9c:	76 2f       	mov	r23, r22
     c9e:	6a 2f       	mov	r22, r26
     ca0:	11 24       	eor	r1, r1
     ca2:	9f 57       	subi	r25, 0x7F	; 127
     ca4:	50 40       	sbci	r21, 0x00	; 0
     ca6:	9a f0       	brmi	.+38     	; 0xcce <__mulsf3_pse+0x88>
     ca8:	f1 f0       	breq	.+60     	; 0xce6 <__mulsf3_pse+0xa0>
     caa:	88 23       	and	r24, r24
     cac:	4a f0       	brmi	.+18     	; 0xcc0 <__mulsf3_pse+0x7a>
     cae:	ee 0f       	add	r30, r30
     cb0:	ff 1f       	adc	r31, r31
     cb2:	bb 1f       	adc	r27, r27
     cb4:	66 1f       	adc	r22, r22
     cb6:	77 1f       	adc	r23, r23
     cb8:	88 1f       	adc	r24, r24
     cba:	91 50       	subi	r25, 0x01	; 1
     cbc:	50 40       	sbci	r21, 0x00	; 0
     cbe:	a9 f7       	brne	.-22     	; 0xcaa <__mulsf3_pse+0x64>
     cc0:	9e 3f       	cpi	r25, 0xFE	; 254
     cc2:	51 05       	cpc	r21, r1
     cc4:	80 f0       	brcs	.+32     	; 0xce6 <__mulsf3_pse+0xa0>
     cc6:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>
     cca:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_szero>
     cce:	5f 3f       	cpi	r21, 0xFF	; 255
     cd0:	e4 f3       	brlt	.-8      	; 0xcca <__mulsf3_pse+0x84>
     cd2:	98 3e       	cpi	r25, 0xE8	; 232
     cd4:	d4 f3       	brlt	.-12     	; 0xcca <__mulsf3_pse+0x84>
     cd6:	86 95       	lsr	r24
     cd8:	77 95       	ror	r23
     cda:	67 95       	ror	r22
     cdc:	b7 95       	ror	r27
     cde:	f7 95       	ror	r31
     ce0:	e7 95       	ror	r30
     ce2:	9f 5f       	subi	r25, 0xFF	; 255
     ce4:	c1 f7       	brne	.-16     	; 0xcd6 <__mulsf3_pse+0x90>
     ce6:	fe 2b       	or	r31, r30
     ce8:	88 0f       	add	r24, r24
     cea:	91 1d       	adc	r25, r1
     cec:	96 95       	lsr	r25
     cee:	87 95       	ror	r24
     cf0:	97 f9       	bld	r25, 7
     cf2:	08 95       	ret

00000cf4 <pow>:
     cf4:	fa 01       	movw	r30, r20
     cf6:	ee 0f       	add	r30, r30
     cf8:	ff 1f       	adc	r31, r31
     cfa:	30 96       	adiw	r30, 0x00	; 0
     cfc:	21 05       	cpc	r18, r1
     cfe:	31 05       	cpc	r19, r1
     d00:	a1 f1       	breq	.+104    	; 0xd6a <pow+0x76>
     d02:	61 15       	cp	r22, r1
     d04:	71 05       	cpc	r23, r1
     d06:	61 f4       	brne	.+24     	; 0xd20 <pow+0x2c>
     d08:	80 38       	cpi	r24, 0x80	; 128
     d0a:	bf e3       	ldi	r27, 0x3F	; 63
     d0c:	9b 07       	cpc	r25, r27
     d0e:	49 f1       	breq	.+82     	; 0xd62 <pow+0x6e>
     d10:	68 94       	set
     d12:	90 38       	cpi	r25, 0x80	; 128
     d14:	81 05       	cpc	r24, r1
     d16:	61 f0       	breq	.+24     	; 0xd30 <pow+0x3c>
     d18:	80 38       	cpi	r24, 0x80	; 128
     d1a:	bf ef       	ldi	r27, 0xFF	; 255
     d1c:	9b 07       	cpc	r25, r27
     d1e:	41 f0       	breq	.+16     	; 0xd30 <pow+0x3c>
     d20:	99 23       	and	r25, r25
     d22:	4a f5       	brpl	.+82     	; 0xd76 <pow+0x82>
     d24:	ff 3f       	cpi	r31, 0xFF	; 255
     d26:	e1 05       	cpc	r30, r1
     d28:	31 05       	cpc	r19, r1
     d2a:	21 05       	cpc	r18, r1
     d2c:	19 f1       	breq	.+70     	; 0xd74 <pow+0x80>
     d2e:	e8 94       	clt
     d30:	08 94       	sec
     d32:	e7 95       	ror	r30
     d34:	d9 01       	movw	r26, r18
     d36:	aa 23       	and	r26, r26
     d38:	29 f4       	brne	.+10     	; 0xd44 <pow+0x50>
     d3a:	ab 2f       	mov	r26, r27
     d3c:	be 2f       	mov	r27, r30
     d3e:	f8 5f       	subi	r31, 0xF8	; 248
     d40:	d0 f3       	brcs	.-12     	; 0xd36 <pow+0x42>
     d42:	10 c0       	rjmp	.+32     	; 0xd64 <pow+0x70>
     d44:	ff 5f       	subi	r31, 0xFF	; 255
     d46:	70 f4       	brcc	.+28     	; 0xd64 <pow+0x70>
     d48:	a6 95       	lsr	r26
     d4a:	e0 f7       	brcc	.-8      	; 0xd44 <pow+0x50>
     d4c:	f7 39       	cpi	r31, 0x97	; 151
     d4e:	50 f0       	brcs	.+20     	; 0xd64 <pow+0x70>
     d50:	19 f0       	breq	.+6      	; 0xd58 <pow+0x64>
     d52:	ff 3a       	cpi	r31, 0xAF	; 175
     d54:	38 f4       	brcc	.+14     	; 0xd64 <pow+0x70>
     d56:	9f 77       	andi	r25, 0x7F	; 127
     d58:	9f 93       	push	r25
     d5a:	0d d0       	rcall	.+26     	; 0xd76 <pow+0x82>
     d5c:	0f 90       	pop	r0
     d5e:	07 fc       	sbrc	r0, 7
     d60:	90 58       	subi	r25, 0x80	; 128
     d62:	08 95       	ret
     d64:	46 f0       	brts	.+16     	; 0xd76 <pow+0x82>
     d66:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_nan>
     d6a:	60 e0       	ldi	r22, 0x00	; 0
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	80 e8       	ldi	r24, 0x80	; 128
     d70:	9f e3       	ldi	r25, 0x3F	; 63
     d72:	08 95       	ret
     d74:	4f e7       	ldi	r20, 0x7F	; 127
     d76:	9f 77       	andi	r25, 0x7F	; 127
     d78:	5f 93       	push	r21
     d7a:	4f 93       	push	r20
     d7c:	3f 93       	push	r19
     d7e:	2f 93       	push	r18
     d80:	0e 94 75 07 	call	0xeea	; 0xeea <log>
     d84:	2f 91       	pop	r18
     d86:	3f 91       	pop	r19
     d88:	4f 91       	pop	r20
     d8a:	5f 91       	pop	r21
     d8c:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__mulsf3>
     d90:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <exp>
     d94:	29 f4       	brne	.+10     	; 0xda0 <pow+0xac>
     d96:	16 f0       	brts	.+4      	; 0xd9c <pow+0xa8>
     d98:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>
     d9c:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <__fp_zero>
     da0:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_nan>

00000da4 <exp>:
     da4:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__fp_splitA>
     da8:	a8 f3       	brcs	.-22     	; 0xd94 <pow+0xa0>
     daa:	96 38       	cpi	r25, 0x86	; 134
     dac:	a0 f7       	brcc	.-24     	; 0xd96 <pow+0xa2>
     dae:	07 f8       	bld	r0, 7
     db0:	0f 92       	push	r0
     db2:	e8 94       	clt
     db4:	2b e3       	ldi	r18, 0x3B	; 59
     db6:	3a ea       	ldi	r19, 0xAA	; 170
     db8:	48 eb       	ldi	r20, 0xB8	; 184
     dba:	5f e7       	ldi	r21, 0x7F	; 127
     dbc:	0e 94 23 06 	call	0xc46	; 0xc46 <__mulsf3_pse>
     dc0:	0f 92       	push	r0
     dc2:	0f 92       	push	r0
     dc4:	0f 92       	push	r0
     dc6:	4d b7       	in	r20, 0x3d	; 61
     dc8:	5e b7       	in	r21, 0x3e	; 62
     dca:	0f 92       	push	r0
     dcc:	0e 94 bd 07 	call	0xf7a	; 0xf7a <modf>
     dd0:	e8 e7       	ldi	r30, 0x78	; 120
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	0e 94 04 07 	call	0xe08	; 0xe08 <__fp_powser>
     dd8:	4f 91       	pop	r20
     dda:	5f 91       	pop	r21
     ddc:	ef 91       	pop	r30
     dde:	ff 91       	pop	r31
     de0:	e5 95       	asr	r30
     de2:	ee 1f       	adc	r30, r30
     de4:	ff 1f       	adc	r31, r31
     de6:	49 f0       	breq	.+18     	; 0xdfa <exp+0x56>
     de8:	fe 57       	subi	r31, 0x7E	; 126
     dea:	e0 68       	ori	r30, 0x80	; 128
     dec:	44 27       	eor	r20, r20
     dee:	ee 0f       	add	r30, r30
     df0:	44 1f       	adc	r20, r20
     df2:	fa 95       	dec	r31
     df4:	e1 f7       	brne	.-8      	; 0xdee <exp+0x4a>
     df6:	41 95       	neg	r20
     df8:	55 0b       	sbc	r21, r21
     dfa:	0e 94 37 07 	call	0xe6e	; 0xe6e <ldexp>
     dfe:	0f 90       	pop	r0
     e00:	07 fe       	sbrs	r0, 7
     e02:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <inverse>
     e06:	08 95       	ret

00000e08 <__fp_powser>:
     e08:	df 93       	push	r29
     e0a:	cf 93       	push	r28
     e0c:	1f 93       	push	r17
     e0e:	0f 93       	push	r16
     e10:	ff 92       	push	r15
     e12:	ef 92       	push	r14
     e14:	df 92       	push	r13
     e16:	7b 01       	movw	r14, r22
     e18:	8c 01       	movw	r16, r24
     e1a:	68 94       	set
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <__fp_powser+0x22>
     e1e:	da 2e       	mov	r13, r26
     e20:	ef 01       	movw	r28, r30
     e22:	0e 94 20 06 	call	0xc40	; 0xc40 <__mulsf3x>
     e26:	fe 01       	movw	r30, r28
     e28:	e8 94       	clt
     e2a:	a5 91       	lpm	r26, Z+
     e2c:	25 91       	lpm	r18, Z+
     e2e:	35 91       	lpm	r19, Z+
     e30:	45 91       	lpm	r20, Z+
     e32:	55 91       	lpm	r21, Z+
     e34:	a6 f3       	brts	.-24     	; 0xe1e <__fp_powser+0x16>
     e36:	ef 01       	movw	r28, r30
     e38:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__addsf3x>
     e3c:	fe 01       	movw	r30, r28
     e3e:	97 01       	movw	r18, r14
     e40:	a8 01       	movw	r20, r16
     e42:	da 94       	dec	r13
     e44:	69 f7       	brne	.-38     	; 0xe20 <__fp_powser+0x18>
     e46:	df 90       	pop	r13
     e48:	ef 90       	pop	r14
     e4a:	ff 90       	pop	r15
     e4c:	0f 91       	pop	r16
     e4e:	1f 91       	pop	r17
     e50:	cf 91       	pop	r28
     e52:	df 91       	pop	r29
     e54:	08 95       	ret

00000e56 <inverse>:
     e56:	9b 01       	movw	r18, r22
     e58:	ac 01       	movw	r20, r24
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	80 e8       	ldi	r24, 0x80	; 128
     e60:	9f e3       	ldi	r25, 0x3F	; 63
     e62:	0c 94 ba 04 	jmp	0x974	; 0x974 <__divsf3>
     e66:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>
     e6a:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__fp_mpack>

00000e6e <ldexp>:
     e6e:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__fp_splitA>
     e72:	d8 f3       	brcs	.-10     	; 0xe6a <inverse+0x14>
     e74:	99 23       	and	r25, r25
     e76:	c9 f3       	breq	.-14     	; 0xe6a <inverse+0x14>
     e78:	94 0f       	add	r25, r20
     e7a:	51 1d       	adc	r21, r1
     e7c:	a3 f3       	brvs	.-24     	; 0xe66 <inverse+0x10>
     e7e:	91 50       	subi	r25, 0x01	; 1
     e80:	50 40       	sbci	r21, 0x00	; 0
     e82:	94 f0       	brlt	.+36     	; 0xea8 <ldexp+0x3a>
     e84:	59 f0       	breq	.+22     	; 0xe9c <ldexp+0x2e>
     e86:	88 23       	and	r24, r24
     e88:	32 f0       	brmi	.+12     	; 0xe96 <ldexp+0x28>
     e8a:	66 0f       	add	r22, r22
     e8c:	77 1f       	adc	r23, r23
     e8e:	88 1f       	adc	r24, r24
     e90:	91 50       	subi	r25, 0x01	; 1
     e92:	50 40       	sbci	r21, 0x00	; 0
     e94:	c1 f7       	brne	.-16     	; 0xe86 <ldexp+0x18>
     e96:	9e 3f       	cpi	r25, 0xFE	; 254
     e98:	51 05       	cpc	r21, r1
     e9a:	2c f7       	brge	.-54     	; 0xe66 <inverse+0x10>
     e9c:	88 0f       	add	r24, r24
     e9e:	91 1d       	adc	r25, r1
     ea0:	96 95       	lsr	r25
     ea2:	87 95       	ror	r24
     ea4:	97 f9       	bld	r25, 7
     ea6:	08 95       	ret
     ea8:	5f 3f       	cpi	r21, 0xFF	; 255
     eaa:	ac f0       	brlt	.+42     	; 0xed6 <ldexp+0x68>
     eac:	98 3e       	cpi	r25, 0xE8	; 232
     eae:	9c f0       	brlt	.+38     	; 0xed6 <ldexp+0x68>
     eb0:	bb 27       	eor	r27, r27
     eb2:	86 95       	lsr	r24
     eb4:	77 95       	ror	r23
     eb6:	67 95       	ror	r22
     eb8:	b7 95       	ror	r27
     eba:	08 f4       	brcc	.+2      	; 0xebe <ldexp+0x50>
     ebc:	b1 60       	ori	r27, 0x01	; 1
     ebe:	93 95       	inc	r25
     ec0:	c1 f7       	brne	.-16     	; 0xeb2 <ldexp+0x44>
     ec2:	bb 0f       	add	r27, r27
     ec4:	58 f7       	brcc	.-42     	; 0xe9c <ldexp+0x2e>
     ec6:	11 f4       	brne	.+4      	; 0xecc <ldexp+0x5e>
     ec8:	60 ff       	sbrs	r22, 0
     eca:	e8 cf       	rjmp	.-48     	; 0xe9c <ldexp+0x2e>
     ecc:	6f 5f       	subi	r22, 0xFF	; 255
     ece:	7f 4f       	sbci	r23, 0xFF	; 255
     ed0:	8f 4f       	sbci	r24, 0xFF	; 255
     ed2:	9f 4f       	sbci	r25, 0xFF	; 255
     ed4:	e3 cf       	rjmp	.-58     	; 0xe9c <ldexp+0x2e>
     ed6:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_szero>
     eda:	16 f0       	brts	.+4      	; 0xee0 <ldexp+0x72>
     edc:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__fp_mpack>
     ee0:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_nan>
     ee4:	68 94       	set
     ee6:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_inf>

00000eea <log>:
     eea:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__fp_splitA>
     eee:	a8 f3       	brcs	.-22     	; 0xeda <ldexp+0x6c>
     ef0:	99 23       	and	r25, r25
     ef2:	c1 f3       	breq	.-16     	; 0xee4 <ldexp+0x76>
     ef4:	ae f3       	brts	.-22     	; 0xee0 <ldexp+0x72>
     ef6:	df 93       	push	r29
     ef8:	cf 93       	push	r28
     efa:	1f 93       	push	r17
     efc:	0f 93       	push	r16
     efe:	ff 92       	push	r15
     f00:	c9 2f       	mov	r28, r25
     f02:	dd 27       	eor	r29, r29
     f04:	88 23       	and	r24, r24
     f06:	2a f0       	brmi	.+10     	; 0xf12 <log+0x28>
     f08:	21 97       	sbiw	r28, 0x01	; 1
     f0a:	66 0f       	add	r22, r22
     f0c:	77 1f       	adc	r23, r23
     f0e:	88 1f       	adc	r24, r24
     f10:	da f7       	brpl	.-10     	; 0xf08 <log+0x1e>
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	40 e8       	ldi	r20, 0x80	; 128
     f18:	5f eb       	ldi	r21, 0xBF	; 191
     f1a:	9f e3       	ldi	r25, 0x3F	; 63
     f1c:	88 39       	cpi	r24, 0x98	; 152
     f1e:	20 f0       	brcs	.+8      	; 0xf28 <log+0x3e>
     f20:	80 3e       	cpi	r24, 0xE0	; 224
     f22:	38 f0       	brcs	.+14     	; 0xf32 <log+0x48>
     f24:	21 96       	adiw	r28, 0x01	; 1
     f26:	8f 77       	andi	r24, 0x7F	; 127
     f28:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3>
     f2c:	e0 ea       	ldi	r30, 0xA0	; 160
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	04 c0       	rjmp	.+8      	; 0xf3a <log+0x50>
     f32:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3>
     f36:	ed ec       	ldi	r30, 0xCD	; 205
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	0e 94 04 07 	call	0xe08	; 0xe08 <__fp_powser>
     f3e:	8b 01       	movw	r16, r22
     f40:	be 01       	movw	r22, r28
     f42:	ec 01       	movw	r28, r24
     f44:	fb 2e       	mov	r15, r27
     f46:	6f 57       	subi	r22, 0x7F	; 127
     f48:	71 09       	sbc	r23, r1
     f4a:	75 95       	asr	r23
     f4c:	77 1f       	adc	r23, r23
     f4e:	88 0b       	sbc	r24, r24
     f50:	99 0b       	sbc	r25, r25
     f52:	0e 94 5d 05 	call	0xaba	; 0xaba <__floatsisf>
     f56:	28 e1       	ldi	r18, 0x18	; 24
     f58:	32 e7       	ldi	r19, 0x72	; 114
     f5a:	41 e3       	ldi	r20, 0x31	; 49
     f5c:	5f e3       	ldi	r21, 0x3F	; 63
     f5e:	0e 94 20 06 	call	0xc40	; 0xc40 <__mulsf3x>
     f62:	af 2d       	mov	r26, r15
     f64:	98 01       	movw	r18, r16
     f66:	ae 01       	movw	r20, r28
     f68:	ff 90       	pop	r15
     f6a:	0f 91       	pop	r16
     f6c:	1f 91       	pop	r17
     f6e:	cf 91       	pop	r28
     f70:	df 91       	pop	r29
     f72:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__addsf3x>
     f76:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_round>

00000f7a <modf>:
     f7a:	fa 01       	movw	r30, r20
     f7c:	dc 01       	movw	r26, r24
     f7e:	aa 0f       	add	r26, r26
     f80:	bb 1f       	adc	r27, r27
     f82:	9b 01       	movw	r18, r22
     f84:	ac 01       	movw	r20, r24
     f86:	bf 57       	subi	r27, 0x7F	; 127
     f88:	28 f4       	brcc	.+10     	; 0xf94 <modf+0x1a>
     f8a:	22 27       	eor	r18, r18
     f8c:	33 27       	eor	r19, r19
     f8e:	44 27       	eor	r20, r20
     f90:	50 78       	andi	r21, 0x80	; 128
     f92:	20 c0       	rjmp	.+64     	; 0xfd4 <modf+0x5a>
     f94:	b7 51       	subi	r27, 0x17	; 23
     f96:	90 f4       	brcc	.+36     	; 0xfbc <modf+0x42>
     f98:	ab 2f       	mov	r26, r27
     f9a:	00 24       	eor	r0, r0
     f9c:	46 95       	lsr	r20
     f9e:	37 95       	ror	r19
     fa0:	27 95       	ror	r18
     fa2:	01 1c       	adc	r0, r1
     fa4:	a3 95       	inc	r26
     fa6:	d2 f3       	brmi	.-12     	; 0xf9c <modf+0x22>
     fa8:	00 20       	and	r0, r0
     faa:	71 f0       	breq	.+28     	; 0xfc8 <modf+0x4e>
     fac:	22 0f       	add	r18, r18
     fae:	33 1f       	adc	r19, r19
     fb0:	44 1f       	adc	r20, r20
     fb2:	b3 95       	inc	r27
     fb4:	da f3       	brmi	.-10     	; 0xfac <modf+0x32>
     fb6:	0e d0       	rcall	.+28     	; 0xfd4 <modf+0x5a>
     fb8:	0c 94 48 04 	jmp	0x890	; 0x890 <__subsf3>
     fbc:	61 30       	cpi	r22, 0x01	; 1
     fbe:	71 05       	cpc	r23, r1
     fc0:	a0 e8       	ldi	r26, 0x80	; 128
     fc2:	8a 07       	cpc	r24, r26
     fc4:	b9 46       	sbci	r27, 0x69	; 105
     fc6:	30 f4       	brcc	.+12     	; 0xfd4 <modf+0x5a>
     fc8:	9b 01       	movw	r18, r22
     fca:	ac 01       	movw	r20, r24
     fcc:	66 27       	eor	r22, r22
     fce:	77 27       	eor	r23, r23
     fd0:	88 27       	eor	r24, r24
     fd2:	90 78       	andi	r25, 0x80	; 128
     fd4:	30 96       	adiw	r30, 0x00	; 0
     fd6:	21 f0       	breq	.+8      	; 0xfe0 <modf+0x66>
     fd8:	20 83       	st	Z, r18
     fda:	31 83       	std	Z+1, r19	; 0x01
     fdc:	42 83       	std	Z+2, r20	; 0x02
     fde:	53 83       	std	Z+3, r21	; 0x03
     fe0:	08 95       	ret

00000fe2 <__fp_mpack>:
     fe2:	9f 3f       	cpi	r25, 0xFF	; 255
     fe4:	31 f0       	breq	.+12     	; 0xff2 <__fp_mpack_finite+0xc>

00000fe6 <__fp_mpack_finite>:
     fe6:	91 50       	subi	r25, 0x01	; 1
     fe8:	20 f4       	brcc	.+8      	; 0xff2 <__fp_mpack_finite+0xc>
     fea:	87 95       	ror	r24
     fec:	77 95       	ror	r23
     fee:	67 95       	ror	r22
     ff0:	b7 95       	ror	r27
     ff2:	88 0f       	add	r24, r24
     ff4:	91 1d       	adc	r25, r1
     ff6:	96 95       	lsr	r25
     ff8:	87 95       	ror	r24
     ffa:	97 f9       	bld	r25, 7
     ffc:	08 95       	ret

00000ffe <__tablejump2__>:
     ffe:	ee 0f       	add	r30, r30
    1000:	ff 1f       	adc	r31, r31
    1002:	05 90       	lpm	r0, Z+
    1004:	f4 91       	lpm	r31, Z
    1006:	e0 2d       	mov	r30, r0
    1008:	09 94       	ijmp

0000100a <__adddi3_s8>:
    100a:	00 24       	eor	r0, r0
    100c:	a7 fd       	sbrc	r26, 7
    100e:	00 94       	com	r0
    1010:	2a 0f       	add	r18, r26
    1012:	30 1d       	adc	r19, r0
    1014:	40 1d       	adc	r20, r0
    1016:	50 1d       	adc	r21, r0
    1018:	60 1d       	adc	r22, r0
    101a:	70 1d       	adc	r23, r0
    101c:	80 1d       	adc	r24, r0
    101e:	90 1d       	adc	r25, r0
    1020:	08 95       	ret

00001022 <__cmpdi2_s8>:
    1022:	00 24       	eor	r0, r0
    1024:	a7 fd       	sbrc	r26, 7
    1026:	00 94       	com	r0
    1028:	2a 17       	cp	r18, r26
    102a:	30 05       	cpc	r19, r0
    102c:	40 05       	cpc	r20, r0
    102e:	50 05       	cpc	r21, r0
    1030:	60 05       	cpc	r22, r0
    1032:	70 05       	cpc	r23, r0
    1034:	80 05       	cpc	r24, r0
    1036:	90 05       	cpc	r25, r0
    1038:	08 95       	ret

0000103a <_exit>:
    103a:	f8 94       	cli

0000103c <__stop_program>:
    103c:	ff cf       	rjmp	.-2      	; 0x103c <__stop_program>
