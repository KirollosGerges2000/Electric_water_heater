
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fa6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000101a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800060  00800060  0000101a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000101a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000104c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001088  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd7  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000079b  00000000  00000000  00001f57  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000090b  00000000  00000000  000026f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  00003000  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b8  00000000  00000000  00003240  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ab  00000000  00000000  000037f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00003ba3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__vector_8>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	70 02       	muls	r23, r16
  56:	6d 02       	muls	r22, r29
  58:	67 02       	muls	r22, r23
  5a:	61 02       	muls	r22, r17
  5c:	5b 02       	muls	r21, r27
  5e:	6a 02       	muls	r22, r26
  60:	58 02       	muls	r21, r24
  62:	5e 02       	muls	r21, r30
  64:	64 02       	muls	r22, r20
  66:	0e 03       	fmul	r16, r22
  68:	07 03       	mulsu	r16, r23
  6a:	f9 02       	muls	r31, r25
  6c:	eb 02       	muls	r30, r27
  6e:	dd 02       	muls	r29, r29
  70:	00 03       	mulsu	r16, r16
  72:	d6 02       	muls	r29, r22
  74:	e4 02       	muls	r30, r20
  76:	f2 02       	muls	r31, r18
  78:	07 63       	ori	r16, 0x37	; 55
  7a:	42 36       	cpi	r20, 0x62	; 98
  7c:	b7 9b       	sbis	0x16, 7	; 22
  7e:	d8 a7       	std	Y+40, r29	; 0x28
  80:	1a 39       	cpi	r17, 0x9A	; 154
  82:	68 56       	subi	r22, 0x68	; 104
  84:	18 ae       	std	Y+56, r1	; 0x38
  86:	ba ab       	std	Y+50, r27	; 0x32
  88:	55 8c       	ldd	r5, Z+29	; 0x1d
  8a:	1d 3c       	cpi	r17, 0xCD	; 205
  8c:	b7 cc       	rjmp	.-1682   	; 0xfffff9fc <__eeprom_end+0xff7ef9fc>
  8e:	57 63       	ori	r21, 0x37	; 55
  90:	bd 6d       	ori	r27, 0xDD	; 221
  92:	ed fd       	.word	0xfded	; ????
  94:	75 3e       	cpi	r23, 0xE5	; 229
  96:	f6 17       	cp	r31, r22
  98:	72 31       	cpi	r23, 0x12	; 18
  9a:	bf 00       	.word	0x00bf	; ????
  9c:	00 00       	nop
  9e:	80 3f       	cpi	r24, 0xF0	; 240
  a0:	08 00       	.word	0x0008	; ????
  a2:	00 00       	nop
  a4:	be 92       	st	-X, r11
  a6:	24 49       	sbci	r18, 0x94	; 148
  a8:	12 3e       	cpi	r17, 0xE2	; 226
  aa:	ab aa       	std	Y+51, r10	; 0x33
  ac:	aa 2a       	or	r10, r26
  ae:	be cd       	rjmp	.-1156   	; 0xfffffc2c <__eeprom_end+0xff7efc2c>
  b0:	cc cc       	rjmp	.-1640   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
  b2:	4c 3e       	cpi	r20, 0xEC	; 236
  b4:	00 00       	nop
  b6:	00 80       	ld	r0, Z
  b8:	be ab       	std	Y+54, r27	; 0x36
  ba:	aa aa       	std	Y+50, r10	; 0x32
  bc:	aa 3e       	cpi	r26, 0xEA	; 234
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	bf 00       	.word	0x00bf	; ????
  c4:	00 00       	nop
  c6:	80 3f       	cpi	r24, 0xF0	; 240
  c8:	00 00       	nop
  ca:	00 00       	nop
  cc:	00 08       	sbc	r0, r0
  ce:	41 78       	andi	r20, 0x81	; 129
  d0:	d3 bb       	out	0x13, r29	; 19
  d2:	43 87       	std	Z+11, r20	; 0x0b
  d4:	d1 13       	cpse	r29, r17
  d6:	3d 19       	sub	r19, r13
  d8:	0e 3c       	cpi	r16, 0xCE	; 206
  da:	c3 bd       	out	0x23, r28	; 35
  dc:	42 82       	std	Z+2, r4	; 0x02
  de:	ad 2b       	or	r26, r29
  e0:	3e 68       	ori	r19, 0x8E	; 142
  e2:	ec 82       	std	Y+4, r14	; 0x04
  e4:	76 be       	out	0x36, r7	; 54
  e6:	d9 8f       	std	Y+25, r29	; 0x19
  e8:	e1 a9       	ldd	r30, Z+49	; 0x31
  ea:	3e 4c       	sbci	r19, 0xCE	; 206
  ec:	80 ef       	ldi	r24, 0xF0	; 240
  ee:	ff be       	out	0x3f, r15	; 63
  f0:	01 c4       	rjmp	.+2050   	; 0x8f4 <__divsf3+0x18>
  f2:	ff 7f       	andi	r31, 0xFF	; 255
  f4:	3f 00       	.word	0x003f	; ????
  f6:	00 00       	nop
	...

000000fa <__ctors_end>:
  fa:	11 24       	eor	r1, r1
  fc:	1f be       	out	0x3f, r1	; 63
  fe:	cf e5       	ldi	r28, 0x5F	; 95
 100:	d4 e0       	ldi	r29, 0x04	; 4
 102:	de bf       	out	0x3e, r29	; 62
 104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_clear_bss>:
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	a0 e6       	ldi	r26, 0x60	; 96
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	aa 37       	cpi	r26, 0x7A	; 122
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <main>
 11a:	0c 94 d1 07 	jmp	0xfa2	; 0xfa2 <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_init>:
	// turns a BCD-encoded byte back into a standard one
	u8 Bcd_to_decimal ()
	{
		
		return( ((TWDR>>4)*10)+(TWDR &0xF));
	}
 122:	17 b8       	out	0x07, r1	; 7
 124:	83 e8       	ldi	r24, 0x83	; 131
 126:	86 b9       	out	0x06, r24	; 6
 128:	08 95       	ret

0000012a <ADC_readChannel>:
 12a:	87 70       	andi	r24, 0x07	; 7
 12c:	97 b1       	in	r25, 0x07	; 7
 12e:	90 7e       	andi	r25, 0xE0	; 224
 130:	97 b9       	out	0x07, r25	; 7
 132:	97 b1       	in	r25, 0x07	; 7
 134:	89 2b       	or	r24, r25
 136:	87 b9       	out	0x07, r24	; 7
 138:	86 b1       	in	r24, 0x06	; 6
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	86 b9       	out	0x06, r24	; 6
 13e:	34 9b       	sbis	0x06, 4	; 6
 140:	fe cf       	rjmp	.-4      	; 0x13e <ADC_readChannel+0x14>
 142:	86 b1       	in	r24, 0x06	; 6
 144:	80 61       	ori	r24, 0x10	; 16
 146:	86 b9       	out	0x06, r24	; 6
 148:	84 b1       	in	r24, 0x04	; 4
 14a:	95 b1       	in	r25, 0x05	; 5
 14c:	08 95       	ret

0000014e <INT_interrupt>:
 14e:	84 e6       	ldi	r24, 0x64	; 100
 150:	9f ef       	ldi	r25, 0xFF	; 255
 152:	9d bd       	out	0x2d, r25	; 45
 154:	8c bd       	out	0x2c, r24	; 44
 156:	1f bc       	out	0x2f, r1	; 47
 158:	85 e0       	ldi	r24, 0x05	; 5
 15a:	8e bd       	out	0x2e, r24	; 46
 15c:	84 e0       	ldi	r24, 0x04	; 4
 15e:	89 bf       	out	0x39, r24	; 57
 160:	78 94       	sei
 162:	08 95       	ret

00000164 <I2C_Init>:
 164:	11 b8       	out	0x01, r1	; 1
 166:	61 b1       	in	r22, 0x01	; 1
 168:	63 70       	andi	r22, 0x03	; 3
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 11 05 	call	0xa22	; 0xa22 <__floatsisf>
 174:	9b 01       	movw	r18, r22
 176:	ac 01       	movw	r20, r24
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	90 e4       	ldi	r25, 0x40	; 64
 180:	0e 94 2e 06 	call	0xc5c	; 0xc5c <pow>
 184:	9b 01       	movw	r18, r22
 186:	ac 01       	movw	r20, r24
 188:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__addsf3>
 18c:	9b 01       	movw	r18, r22
 18e:	ac 01       	movw	r20, r24
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	9f e4       	ldi	r25, 0x4F	; 79
 198:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__divsf3>
 19c:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fixunssfsi>
 1a0:	60 b9       	out	0x00, r22	; 0
 1a2:	08 95       	ret

000001a4 <I2C_Start>:
 1a4:	94 ea       	ldi	r25, 0xA4	; 164
 1a6:	96 bf       	out	0x36, r25	; 54
 1a8:	06 b6       	in	r0, 0x36	; 54
 1aa:	07 fe       	sbrs	r0, 7
 1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <I2C_Start+0x4>
 1ae:	83 b9       	out	0x03, r24	; 3
 1b0:	84 e8       	ldi	r24, 0x84	; 132
 1b2:	86 bf       	out	0x36, r24	; 54
 1b4:	06 b6       	in	r0, 0x36	; 54
 1b6:	07 fe       	sbrs	r0, 7
 1b8:	fd cf       	rjmp	.-6      	; 0x1b4 <I2C_Start+0x10>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	08 95       	ret

000001be <I2C_Repeated_Start>:
 1be:	94 ea       	ldi	r25, 0xA4	; 164
 1c0:	96 bf       	out	0x36, r25	; 54
 1c2:	06 b6       	in	r0, 0x36	; 54
 1c4:	07 fe       	sbrs	r0, 7
 1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <I2C_Repeated_Start+0x4>
 1c8:	83 b9       	out	0x03, r24	; 3
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	86 bf       	out	0x36, r24	; 54
 1ce:	06 b6       	in	r0, 0x36	; 54
 1d0:	07 fe       	sbrs	r0, 7
 1d2:	fd cf       	rjmp	.-6      	; 0x1ce <I2C_Repeated_Start+0x10>
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	08 95       	ret

000001d8 <I2C_Read_Nack>:
 1d8:	84 e8       	ldi	r24, 0x84	; 132
 1da:	86 bf       	out	0x36, r24	; 54
 1dc:	06 b6       	in	r0, 0x36	; 54
 1de:	07 fe       	sbrs	r0, 7
 1e0:	fd cf       	rjmp	.-6      	; 0x1dc <I2C_Read_Nack+0x4>
 1e2:	83 b1       	in	r24, 0x03	; 3
 1e4:	08 95       	ret

000001e6 <I2C_Stop>:
 1e6:	84 e9       	ldi	r24, 0x94	; 148
 1e8:	86 bf       	out	0x36, r24	; 54
 1ea:	86 b7       	in	r24, 0x36	; 54
 1ec:	08 95       	ret

000001ee <decimal_to_bcd>:
 1ee:	9d ec       	ldi	r25, 0xCD	; 205
 1f0:	89 9f       	mul	r24, r25
 1f2:	91 2d       	mov	r25, r1
 1f4:	11 24       	eor	r1, r1
 1f6:	96 95       	lsr	r25
 1f8:	96 95       	lsr	r25
 1fa:	96 95       	lsr	r25
 1fc:	39 2f       	mov	r19, r25
 1fe:	33 0f       	add	r19, r19
 200:	23 2f       	mov	r18, r19
 202:	22 0f       	add	r18, r18
 204:	22 0f       	add	r18, r18
 206:	23 0f       	add	r18, r19
 208:	82 1b       	sub	r24, r18
 20a:	30 e1       	ldi	r19, 0x10	; 16
 20c:	93 9f       	mul	r25, r19
 20e:	80 0d       	add	r24, r0
 210:	11 24       	eor	r1, r1
 212:	08 95       	ret

00000214 <I2C_Write>:
 214:	0e 94 f7 00 	call	0x1ee	; 0x1ee <decimal_to_bcd>
 218:	83 b9       	out	0x03, r24	; 3
 21a:	84 e8       	ldi	r24, 0x84	; 132
 21c:	86 bf       	out	0x36, r24	; 54
 21e:	06 b6       	in	r0, 0x36	; 54
 220:	07 fe       	sbrs	r0, 7
 222:	fd cf       	rjmp	.-6      	; 0x21e <I2C_Write+0xa>
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	08 95       	ret

00000228 <EEPROM_write_read>:
	
	u8 EEPROM_write_read(u8 stored_data)
	{
 228:	cf 93       	push	r28
 22a:	c8 2f       	mov	r28, r24
		u8 data;
		I2C_Init();
 22c:	0e 94 b2 00 	call	0x164	; 0x164 <I2C_Init>
		I2C_Start(0xA0);
 230:	80 ea       	ldi	r24, 0xA0	; 160
 232:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2C_Start>
		I2C_Write(stored_data);
 236:	8c 2f       	mov	r24, r28
 238:	0e 94 0a 01 	call	0x214	; 0x214 <I2C_Write>
		I2C_Repeated_Start(0xA1);
 23c:	81 ea       	ldi	r24, 0xA1	; 161
 23e:	0e 94 df 00 	call	0x1be	; 0x1be <I2C_Repeated_Start>
		data=I2C_Read_Nack ();
 242:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Read_Nack>
 246:	c8 2f       	mov	r28, r24
		I2C_Stop();
 248:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <I2C_Stop>
		return data;
		
	}
 24c:	8c 2f       	mov	r24, r28
 24e:	cf 91       	pop	r28
 250:	08 95       	ret

00000252 <Data_Direction_registers>:
#endif

void Data_Direction_registers(void)
{
	/*OUTPUTS*/
	DDRD=0xFF;
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	81 bb       	out	0x11, r24	; 17
	OUTPUT_MODULE(DDRB,0); //set Enable of first 7 segment as output
 256:	87 b3       	in	r24, 0x17	; 23
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	87 bb       	out	0x17, r24	; 23
	OUTPUT_MODULE(DDRA,7); //set Enable of second 7 segment as output
 25c:	8a b3       	in	r24, 0x1a	; 26
 25e:	80 68       	ori	r24, 0x80	; 128
 260:	8a bb       	out	0x1a, r24	; 26
	OUTPUT_MODULE(DDRB,5); //set cooling fan as output
 262:	87 b3       	in	r24, 0x17	; 23
 264:	80 62       	ori	r24, 0x20	; 32
 266:	87 bb       	out	0x17, r24	; 23
	OUTPUT_MODULE(DDRB,6); //set Heater as output
 268:	87 b3       	in	r24, 0x17	; 23
 26a:	80 64       	ori	r24, 0x40	; 64
 26c:	87 bb       	out	0x17, r24	; 23
	OUTPUT_MODULE(DDRB,4); //set Heater LED as output
 26e:	87 b3       	in	r24, 0x17	; 23
 270:	80 61       	ori	r24, 0x10	; 16
 272:	87 bb       	out	0x17, r24	; 23
	
/* INPUTS*/
	INPUT_MODULE(DDRB,3); //set increment temperature button to be input
 274:	87 b3       	in	r24, 0x17	; 23
 276:	87 7f       	andi	r24, 0xF7	; 247
 278:	87 bb       	out	0x17, r24	; 23
	INPUT_MODULE(DDRB,2); //set decrement temperature button to be input
 27a:	87 b3       	in	r24, 0x17	; 23
 27c:	8b 7f       	andi	r24, 0xFB	; 251
 27e:	87 bb       	out	0x17, r24	; 23
	INPUT_MODULE(DDRB,1); //set OFF/ON button to be input
 280:	87 b3       	in	r24, 0x17	; 23
 282:	8d 7f       	andi	r24, 0xFD	; 253
 284:	87 bb       	out	0x17, r24	; 23
 286:	08 95       	ret

00000288 <initialization_variables>:



void initialization_variables(void)
{
	INT_interrupt();  /* initialize internally interrupt Timer1*/
 288:	0e 94 a7 00 	call	0x14e	; 0x14e <INT_interrupt>
ADC_init(); /* initialize ADC driver */
 28c:	0e 94 91 00 	call	0x122	; 0x122 <ADC_init>

/* deceleration, initialize 7_segments by 60*/
PORTD=0x60;
 290:	80 e6       	ldi	r24, 0x60	; 96
 292:	82 bb       	out	0x12, r24	; 18

/* initialization cooling fan,heater ,heater LED to be off */
OUTPUT_MODULE_OFF(PORTB,4);
 294:	88 b3       	in	r24, 0x18	; 24
 296:	8f 7e       	andi	r24, 0xEF	; 239
 298:	88 bb       	out	0x18, r24	; 24
OUTPUT_MODULE_OFF(PORTB,5);
 29a:	88 b3       	in	r24, 0x18	; 24
 29c:	8f 7d       	andi	r24, 0xDF	; 223
 29e:	88 bb       	out	0x18, r24	; 24
OUTPUT_MODULE_OFF(PORTB,6);
 2a0:	88 b3       	in	r24, 0x18	; 24
 2a2:	8f 7b       	andi	r24, 0xBF	; 191
 2a4:	88 bb       	out	0x18, r24	; 24
// initialization Enables of 7 segments to be off as active low
OUTPUT_MODULE_ON(PORTB,0);
 2a6:	88 b3       	in	r24, 0x18	; 24
 2a8:	81 60       	ori	r24, 0x01	; 1
 2aa:	88 bb       	out	0x18, r24	; 24
OUTPUT_MODULE_ON(PORTA,7);
 2ac:	8b b3       	in	r24, 0x1b	; 27
 2ae:	80 68       	ori	r24, 0x80	; 128
 2b0:	8b bb       	out	0x1b, r24	; 27
 2b2:	08 95       	ret

000002b4 <Avg_reading>:


void Avg_reading(void)
{
	
	sum=sum+x;
 2b4:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 2b8:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 2bc:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 2c0:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 2c4:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <sum>
 2c8:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <sum+0x1>
 2cc:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <sum+0x2>
 2d0:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <sum+0x3>
 2d4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__addsf3>
 2d8:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <sum>
 2dc:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <sum+0x1>
 2e0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <sum+0x2>
 2e4:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <sum+0x3>
	i++;
 2e8:	20 91 69 00 	lds	r18, 0x0069	; 0x800069 <i>
 2ec:	2f 5f       	subi	r18, 0xFF	; 255
 2ee:	20 93 69 00 	sts	0x0069, r18	; 0x800069 <i>
	if(i==9)
 2f2:	29 30       	cpi	r18, 0x09	; 9
 2f4:	c1 f4       	brne	.+48     	; 0x326 <Avg_reading+0x72>
	{
		average=(sum)/9.105;  //In testing and validation ,calibration 9.1125
 2f6:	24 e1       	ldi	r18, 0x14	; 20
 2f8:	3e ea       	ldi	r19, 0xAE	; 174
 2fa:	41 e1       	ldi	r20, 0x11	; 17
 2fc:	51 e4       	ldi	r21, 0x41	; 65
 2fe:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__divsf3>
 302:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <average>
 306:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <average+0x1>
 30a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <average+0x2>
 30e:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <average+0x3>
		i=0;
 312:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <i>
		sum=0;
 316:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <sum>
 31a:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <sum+0x1>
 31e:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <sum+0x2>
 322:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <sum+0x3>
 326:	08 95       	ret

00000328 <Temperature_reading>:
#ifndef FUNCTIONS_H
#define FUNCTIONS_H

void Temperature_reading(void)
{
	volt = ADC_readChannel(0); // read channel two where the temp sensor is connect
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_readChannel>
 32e:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <volt+0x1>
 332:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <volt>
	x=(float)(5*volt)/1023; // to gain the ADC of temperature reading
 336:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <volt>
 33a:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <volt+0x1>
 33e:	cb 01       	movw	r24, r22
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	68 0f       	add	r22, r24
 34a:	79 1f       	adc	r23, r25
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__floatunsisf>
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 ec       	ldi	r19, 0xC0	; 192
 358:	4f e7       	ldi	r20, 0x7F	; 127
 35a:	54 e4       	ldi	r21, 0x44	; 68
 35c:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__divsf3>
 360:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 364:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 368:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 36c:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
	x=x*100;   //the reading of temperature
 370:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 374:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 378:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 37c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 380:	20 e0       	ldi	r18, 0x00	; 0
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	48 ec       	ldi	r20, 0xC8	; 200
 386:	52 e4       	ldi	r21, 0x42	; 66
 388:	0e 94 c1 05 	call	0xb82	; 0xb82 <__mulsf3>
 38c:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 390:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 394:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 398:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
	Avg_reading();  //the equations of average 10 temperature reading
 39c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <Avg_reading>
 3a0:	08 95       	ret

000003a2 <__vector_8>:
#ifndef INTERRUPT_H
#define INTERRUPT_H 
void Temperature_reading(void); 
#endif
ISR (TIMER1_OVF_vect)    // Timer1 ISR
{
 3a2:	1f 92       	push	r1
 3a4:	0f 92       	push	r0
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	0f 92       	push	r0
 3aa:	11 24       	eor	r1, r1
 3ac:	2f 93       	push	r18
 3ae:	3f 93       	push	r19
 3b0:	4f 93       	push	r20
 3b2:	5f 93       	push	r21
 3b4:	6f 93       	push	r22
 3b6:	7f 93       	push	r23
 3b8:	8f 93       	push	r24
 3ba:	9f 93       	push	r25
 3bc:	af 93       	push	r26
 3be:	bf 93       	push	r27
 3c0:	ef 93       	push	r30
 3c2:	ff 93       	push	r31
	TCNT1 = 65380;  // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64"
 3c4:	84 e6       	ldi	r24, 0x64	; 100
 3c6:	9f ef       	ldi	r25, 0xFF	; 255
 3c8:	9d bd       	out	0x2d, r25	; 45
 3ca:	8c bd       	out	0x2c, r24	; 44
		Temperature_reading();  //read temperature each 100 ms 
 3cc:	0e 94 94 01 	call	0x328	; 0x328 <Temperature_reading>
	
		}
 3d0:	ff 91       	pop	r31
 3d2:	ef 91       	pop	r30
 3d4:	bf 91       	pop	r27
 3d6:	af 91       	pop	r26
 3d8:	9f 91       	pop	r25
 3da:	8f 91       	pop	r24
 3dc:	7f 91       	pop	r23
 3de:	6f 91       	pop	r22
 3e0:	5f 91       	pop	r21
 3e2:	4f 91       	pop	r20
 3e4:	3f 91       	pop	r19
 3e6:	2f 91       	pop	r18
 3e8:	0f 90       	pop	r0
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	0f 90       	pop	r0
 3ee:	1f 90       	pop	r1
 3f0:	18 95       	reti

000003f2 <setting_temp>:

void setting_temp(void)

{
	
	if(PINB&(1<<3)&&counter<3 )
 3f2:	b3 9b       	sbis	0x16, 3	; 22
 3f4:	1d c0       	rjmp	.+58     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
 3f6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 3fa:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 3fe:	83 30       	cpi	r24, 0x03	; 3
 400:	91 05       	cpc	r25, r1
 402:	b4 f4       	brge	.+44     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
	{
		counter++;
 404:	01 96       	adiw	r24, 0x01	; 1
 406:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 40a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
		counter_for_Timer=0;
 40e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 412:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 416:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 41a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 41e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 422:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 426:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 42a:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 42e:	34 c0       	rjmp	.+104    	; 0x498 <__stack+0x39>
	}
	else if(PINB&(1<<2)&&counter>-5)
 430:	b2 9b       	sbis	0x16, 2	; 22
 432:	1e c0       	rjmp	.+60     	; 0x470 <__stack+0x11>
 434:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 438:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 43c:	8c 3f       	cpi	r24, 0xFC	; 252
 43e:	2f ef       	ldi	r18, 0xFF	; 255
 440:	92 07       	cpc	r25, r18
 442:	b4 f0       	brlt	.+44     	; 0x470 <__stack+0x11>
	{
		counter--;
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 44a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
		counter_for_Timer=0;
 44e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 452:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 456:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 45a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 45e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 462:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 466:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 46a:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 46e:	14 c0       	rjmp	.+40     	; 0x498 <__stack+0x39>
	}
	
	else if (PINB&(1<<3) || PINB&(1<<2))
 470:	b3 99       	sbic	0x16, 3	; 22
 472:	02 c0       	rjmp	.+4      	; 0x478 <__stack+0x19>
 474:	b2 9b       	sbis	0x16, 2	; 22
 476:	10 c0       	rjmp	.+32     	; 0x498 <__stack+0x39>
	{
		counter_for_Timer=0;
 478:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 47c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 480:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 484:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 488:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 48c:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 490:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 494:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	}
	switch(counter)
 498:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 49c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 4a0:	35 96       	adiw	r30, 0x05	; 5
 4a2:	e9 30       	cpi	r30, 0x09	; 9
 4a4:	f1 05       	cpc	r31, r1
 4a6:	f0 f4       	brcc	.+60     	; 0x4e4 <__stack+0x85>
 4a8:	e6 5d       	subi	r30, 0xD6	; 214
 4aa:	ff 4f       	sbci	r31, 0xFF	; 255
 4ac:	0c 94 b3 07 	jmp	0xf66	; 0xf66 <__tablejump2__>
	{
		case 1:
		PORTD=0x65;
 4b0:	85 e6       	ldi	r24, 0x65	; 101
 4b2:	82 bb       	out	0x12, r24	; 18
		break;
 4b4:	17 c0       	rjmp	.+46     	; 0x4e4 <__stack+0x85>
		case -1:
		PORTD=0x55;
 4b6:	85 e5       	ldi	r24, 0x55	; 85
 4b8:	82 bb       	out	0x12, r24	; 18
		break;
 4ba:	14 c0       	rjmp	.+40     	; 0x4e4 <__stack+0x85>
		case 2:
		PORTD=0x70;
 4bc:	80 e7       	ldi	r24, 0x70	; 112
 4be:	82 bb       	out	0x12, r24	; 18
		break;
 4c0:	11 c0       	rjmp	.+34     	; 0x4e4 <__stack+0x85>
		case -2:
		PORTD=0x50;
 4c2:	80 e5       	ldi	r24, 0x50	; 80
 4c4:	82 bb       	out	0x12, r24	; 18
		break;
 4c6:	0e c0       	rjmp	.+28     	; 0x4e4 <__stack+0x85>
		case 3:
		PORTD=0x75;
 4c8:	85 e7       	ldi	r24, 0x75	; 117
 4ca:	82 bb       	out	0x12, r24	; 18
		break;
 4cc:	0b c0       	rjmp	.+22     	; 0x4e4 <__stack+0x85>
		case -3:
		PORTD=0x45;
 4ce:	85 e4       	ldi	r24, 0x45	; 69
 4d0:	82 bb       	out	0x12, r24	; 18
		break;
 4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <__stack+0x85>
		case 0:
		PORTD=0x60;
 4d4:	80 e6       	ldi	r24, 0x60	; 96
 4d6:	82 bb       	out	0x12, r24	; 18
		break;
 4d8:	05 c0       	rjmp	.+10     	; 0x4e4 <__stack+0x85>
		case -4:
		PORTD=0x40;
 4da:	80 e4       	ldi	r24, 0x40	; 64
 4dc:	82 bb       	out	0x12, r24	; 18
		break;
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <__stack+0x85>
		case -5:
		PORTD=0x35;
 4e0:	85 e3       	ldi	r24, 0x35	; 53
 4e2:	82 bb       	out	0x12, r24	; 18
		break;
	}
	
	EEPROM_write_read(counter);   // store value of counter to read it in EEPROM
 4e4:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 4e8:	0e 94 14 01 	call	0x228	; 0x228 <EEPROM_write_read>
 4ec:	08 95       	ret

000004ee <ACTIVATION>:
	}
	
}

void ACTIVATION(uint16 value,u8 max, u8 min)
{
 4ee:	cf 92       	push	r12
 4f0:	df 92       	push	r13
 4f2:	ef 92       	push	r14
 4f4:	ff 92       	push	r15
 4f6:	cf 93       	push	r28
	if(counter == value)
 4f8:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <counter>
 4fc:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <counter+0x1>
 500:	28 17       	cp	r18, r24
 502:	39 07       	cpc	r19, r25
 504:	09 f0       	breq	.+2      	; 0x508 <ACTIVATION+0x1a>
 506:	3f c0       	rjmp	.+126    	; 0x586 <ACTIVATION+0x98>
 508:	c4 2f       	mov	r28, r20
	{
		if(average>=max)
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 11 05 	call	0xa22	; 0xa22 <__floatsisf>
 514:	c0 90 6c 00 	lds	r12, 0x006C	; 0x80006c <average>
 518:	d0 90 6d 00 	lds	r13, 0x006D	; 0x80006d <average+0x1>
 51c:	e0 90 6e 00 	lds	r14, 0x006E	; 0x80006e <average+0x2>
 520:	f0 90 6f 00 	lds	r15, 0x006F	; 0x80006f <average+0x3>
 524:	a7 01       	movw	r20, r14
 526:	96 01       	movw	r18, r12
 528:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__cmpsf2>
 52c:	18 16       	cp	r1, r24
 52e:	54 f0       	brlt	.+20     	; 0x544 <ACTIVATION+0x56>
		{
			OUTPUT_MODULE_ON(PORTB,5);  //cooling element activate
 530:	88 b3       	in	r24, 0x18	; 24
 532:	80 62       	ori	r24, 0x20	; 32
 534:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 536:	88 b3       	in	r24, 0x18	; 24
 538:	8f 7b       	andi	r24, 0xBF	; 191
 53a:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_ON(PORTB,4); //LED
 53c:	88 b3       	in	r24, 0x18	; 24
 53e:	80 61       	ori	r24, 0x10	; 16
 540:	88 bb       	out	0x18, r24	; 24
 542:	21 c0       	rjmp	.+66     	; 0x586 <ACTIVATION+0x98>
		}
		else if(average<=min)
 544:	6c 2f       	mov	r22, r28
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 94 11 05 	call	0xa22	; 0xa22 <__floatsisf>
 550:	9b 01       	movw	r18, r22
 552:	ac 01       	movw	r20, r24
 554:	c7 01       	movw	r24, r14
 556:	b6 01       	movw	r22, r12
 558:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__cmpsf2>
 55c:	18 16       	cp	r1, r24
 55e:	9c f0       	brlt	.+38     	; 0x586 <ACTIVATION+0x98>
		{
			OUTPUT_MODULE_OFF(PORTB,5);  //cooling element disactivate
 560:	88 b3       	in	r24, 0x18	; 24
 562:	8f 7d       	andi	r24, 0xDF	; 223
 564:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_ON(PORTB,6);  //Heating element activate
 566:	88 b3       	in	r24, 0x18	; 24
 568:	80 64       	ori	r24, 0x40	; 64
 56a:	88 bb       	out	0x18, r24	; 24
			TOGGLe_BIT(PORTB,4);
 56c:	98 b3       	in	r25, 0x18	; 24
 56e:	80 e1       	ldi	r24, 0x10	; 16
 570:	89 27       	eor	r24, r25
 572:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 574:	2f ed       	ldi	r18, 0xDF	; 223
 576:	82 e2       	ldi	r24, 0x22	; 34
 578:	92 e0       	ldi	r25, 0x02	; 2
 57a:	21 50       	subi	r18, 0x01	; 1
 57c:	80 40       	sbci	r24, 0x00	; 0
 57e:	90 40       	sbci	r25, 0x00	; 0
 580:	e1 f7       	brne	.-8      	; 0x57a <ACTIVATION+0x8c>
 582:	00 c0       	rjmp	.+0      	; 0x584 <ACTIVATION+0x96>
 584:	00 00       	nop
			
			
		}
	}
	
}
 586:	cf 91       	pop	r28
 588:	ff 90       	pop	r15
 58a:	ef 90       	pop	r14
 58c:	df 90       	pop	r13
 58e:	cf 90       	pop	r12
 590:	08 95       	ret

00000592 <ELEMENTS>:

void ELEMENTS (void)
{

	{
		switch(counter)
 592:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 596:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 59a:	35 96       	adiw	r30, 0x05	; 5
 59c:	e9 30       	cpi	r30, 0x09	; 9
 59e:	f1 05       	cpc	r31, r1
 5a0:	08 f0       	brcs	.+2      	; 0x5a4 <ELEMENTS+0x12>
 5a2:	42 c0       	rjmp	.+132    	; 0x628 <ELEMENTS+0x96>
 5a4:	ed 5c       	subi	r30, 0xCD	; 205
 5a6:	ff 4f       	sbci	r31, 0xFF	; 255
 5a8:	0c 94 b3 07 	jmp	0xf66	; 0xf66 <__tablejump2__>
		{
			case 1:
			ACTIVATION(1,70,60);
 5ac:	4c e3       	ldi	r20, 0x3C	; 60
 5ae:	66 e4       	ldi	r22, 0x46	; 70
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 5b8:	08 95       	ret
			case -1:
			ACTIVATION(-1,60,50);
 5ba:	42 e3       	ldi	r20, 0x32	; 50
 5bc:	6c e3       	ldi	r22, 0x3C	; 60
 5be:	8f ef       	ldi	r24, 0xFF	; 255
 5c0:	9f ef       	ldi	r25, 0xFF	; 255
 5c2:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 5c6:	08 95       	ret
			case 2:
			ACTIVATION(2,75,65);
 5c8:	41 e4       	ldi	r20, 0x41	; 65
 5ca:	6b e4       	ldi	r22, 0x4B	; 75
 5cc:	82 e0       	ldi	r24, 0x02	; 2
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 5d4:	08 95       	ret
			case -2:
			ACTIVATION(-2,55,45);
 5d6:	4d e2       	ldi	r20, 0x2D	; 45
 5d8:	67 e3       	ldi	r22, 0x37	; 55
 5da:	8e ef       	ldi	r24, 0xFE	; 254
 5dc:	9f ef       	ldi	r25, 0xFF	; 255
 5de:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 5e2:	08 95       	ret
			case 3:
			ACTIVATION(3,80,70);
 5e4:	46 e4       	ldi	r20, 0x46	; 70
 5e6:	60 e5       	ldi	r22, 0x50	; 80
 5e8:	83 e0       	ldi	r24, 0x03	; 3
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 5f0:	08 95       	ret
			case -3:
			ACTIVATION(-3,50,40);
 5f2:	48 e2       	ldi	r20, 0x28	; 40
 5f4:	62 e3       	ldi	r22, 0x32	; 50
 5f6:	8d ef       	ldi	r24, 0xFD	; 253
 5f8:	9f ef       	ldi	r25, 0xFF	; 255
 5fa:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 5fe:	08 95       	ret
			case 0:
			ACTIVATION(0,65,55);
 600:	47 e3       	ldi	r20, 0x37	; 55
 602:	61 e4       	ldi	r22, 0x41	; 65
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 60c:	08 95       	ret
			case -4:
			ACTIVATION(-4,45,35);
 60e:	43 e2       	ldi	r20, 0x23	; 35
 610:	6d e2       	ldi	r22, 0x2D	; 45
 612:	8c ef       	ldi	r24, 0xFC	; 252
 614:	9f ef       	ldi	r25, 0xFF	; 255
 616:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
			break;
 61a:	08 95       	ret
			case -5:
			ACTIVATION(-5,40,30);
 61c:	4e e1       	ldi	r20, 0x1E	; 30
 61e:	68 e2       	ldi	r22, 0x28	; 40
 620:	8b ef       	ldi	r24, 0xFB	; 251
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	0e 94 77 02 	call	0x4ee	; 0x4ee <ACTIVATION>
 628:	08 95       	ret

0000062a <on_off_7_segment>:
	
	
}
void on_off_7_segment(u8 Mode)
{
	if(Mode==1)
 62a:	81 30       	cpi	r24, 0x01	; 1
 62c:	39 f4       	brne	.+14     	; 0x63c <on_off_7_segment+0x12>
	{
		OUTPUT_MODULE_OFF(PORTB,0);
 62e:	88 b3       	in	r24, 0x18	; 24
 630:	8e 7f       	andi	r24, 0xFE	; 254
 632:	88 bb       	out	0x18, r24	; 24
		OUTPUT_MODULE_OFF(PORTA,7);
 634:	8b b3       	in	r24, 0x1b	; 27
 636:	8f 77       	andi	r24, 0x7F	; 127
 638:	8b bb       	out	0x1b, r24	; 27
 63a:	08 95       	ret
	}
	else if(Mode==0)
 63c:	81 11       	cpse	r24, r1
 63e:	06 c0       	rjmp	.+12     	; 0x64c <on_off_7_segment+0x22>
	{
		OUTPUT_MODULE_ON(PORTB,0);
 640:	88 b3       	in	r24, 0x18	; 24
 642:	81 60       	ori	r24, 0x01	; 1
 644:	88 bb       	out	0x18, r24	; 24
		OUTPUT_MODULE_ON(PORTA,7);
 646:	8b b3       	in	r24, 0x1b	; 27
 648:	80 68       	ori	r24, 0x80	; 128
 64a:	8b bb       	out	0x1b, r24	; 27
 64c:	08 95       	ret

0000064e <current_water_temperature>:
}


void current_water_temperature(void)
{
	on_off_7_segment(1);
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	0e 94 15 03 	call	0x62a	; 0x62a <on_off_7_segment>
	PORTD=decimal_to_bcd(x);
 654:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 658:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 65c:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 660:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 664:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fixunssfsi>
 668:	86 2f       	mov	r24, r22
 66a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <decimal_to_bcd>
 66e:	82 bb       	out	0x12, r24	; 18
 670:	08 95       	ret

00000672 <OFF_MODE>:


void OFF_MODE(void)
{

	OUTPUT_MODULE_OFF(PORTB,5);  //cooling element activate
 672:	88 b3       	in	r24, 0x18	; 24
 674:	8f 7d       	andi	r24, 0xDF	; 223
 676:	88 bb       	out	0x18, r24	; 24
	OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 678:	88 b3       	in	r24, 0x18	; 24
 67a:	8f 7b       	andi	r24, 0xBF	; 191
 67c:	88 bb       	out	0x18, r24	; 24
	OUTPUT_MODULE_OFF(PORTB,4); //LED
 67e:	88 b3       	in	r24, 0x18	; 24
 680:	8f 7e       	andi	r24, 0xEF	; 239
 682:	88 bb       	out	0x18, r24	; 24
	on_off_7_segment(0);
 684:	80 e0       	ldi	r24, 0x00	; 0
 686:	0e 94 15 03 	call	0x62a	; 0x62a <on_off_7_segment>
 68a:	08 95       	ret

0000068c <on_off_mode>:
}

void on_off_mode(void)
{
	
	if(INPUT_BIT(PINB,1) && flag==0)
 68c:	b1 9b       	sbis	0x16, 1	; 22
 68e:	0a c0       	rjmp	.+20     	; 0x6a4 <on_off_mode+0x18>
 690:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 694:	81 11       	cpse	r24, r1
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <on_off_mode+0x18>
	{
		
		#define Start_Mode 1
		flag=1;
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <flag>
		while(INPUT_BIT(PINB,1));
 69e:	b1 99       	sbic	0x16, 1	; 22
 6a0:	fe cf       	rjmp	.-4      	; 0x69e <on_off_mode+0x12>
 6a2:	08 95       	ret
	}
	else if(INPUT_BIT(PINB,1) && flag==1)
 6a4:	b1 9b       	sbis	0x16, 1	; 22
 6a6:	0a c0       	rjmp	.+20     	; 0x6bc <on_off_mode+0x30>
 6a8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 6ac:	81 30       	cpi	r24, 0x01	; 1
 6ae:	31 f4       	brne	.+12     	; 0x6bc <on_off_mode+0x30>
	{
		while(INPUT_BIT(PINB,1));
 6b0:	b1 99       	sbic	0x16, 1	; 22
 6b2:	fe cf       	rjmp	.-4      	; 0x6b0 <on_off_mode+0x24>
		
		flag=0;
 6b4:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <flag>
		OFF_MODE();
 6b8:	0e 94 39 03 	call	0x672	; 0x672 <OFF_MODE>
 6bc:	08 95       	ret

000006be <ON_MODE_Process>:
	
}

void ON_MODE_Process (void)
{
	while(flag==1)
 6be:	8d c0       	rjmp	.+282    	; 0x7da <ON_MODE_Process+0x11c>
	{
		
		current_water_temperature();
 6c0:	0e 94 27 03 	call	0x64e	; 0x64e <current_water_temperature>
		ELEMENTS();
 6c4:	0e 94 c9 02 	call	0x592	; 0x592 <ELEMENTS>
		on_off_mode();
 6c8:	0e 94 46 03 	call	0x68c	; 0x68c <on_off_mode>
		if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
 6cc:	b3 99       	sbic	0x16, 3	; 22
 6ce:	5b c0       	rjmp	.+182    	; 0x786 <ON_MODE_Process+0xc8>
 6d0:	b2 99       	sbic	0x16, 2	; 22
 6d2:	59 c0       	rjmp	.+178    	; 0x786 <ON_MODE_Process+0xc8>
 6d4:	82 c0       	rjmp	.+260    	; 0x7da <ON_MODE_Process+0x11c>
		{
			
			while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
			{
				on_off_7_segment(1);
 6d6:	81 e0       	ldi	r24, 0x01	; 1
 6d8:	0e 94 15 03 	call	0x62a	; 0x62a <on_off_7_segment>
				setting_temp();
 6dc:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <setting_temp>
				ELEMENTS();
 6e0:	0e 94 c9 02 	call	0x592	; 0x592 <ELEMENTS>
				on_off_mode();
 6e4:	0e 94 46 03 	call	0x68c	; 0x68c <on_off_mode>
				counter_for_Timer++;
 6e8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 6ec:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6f0:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 6f4:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 6f8:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 6fc:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 700:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 704:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 708:	a1 e0       	ldi	r26, 0x01	; 1
 70a:	0e 94 b9 07 	call	0xf72	; 0xf72 <__adddi3_s8>
 70e:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 712:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 716:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 71a:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 71e:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 722:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 726:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 72a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
				on_off_7_segment(0);
 72e:	80 e0       	ldi	r24, 0x00	; 0
 730:	0e 94 15 03 	call	0x62a	; 0x62a <on_off_7_segment>
				setting_temp();
 734:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <setting_temp>
				ELEMENTS();
 738:	0e 94 c9 02 	call	0x592	; 0x592 <ELEMENTS>
				on_off_mode();
 73c:	0e 94 46 03 	call	0x68c	; 0x68c <on_off_mode>
				counter_for_Timer++;
 740:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 744:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 748:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 74c:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 750:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 754:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 758:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 75c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 760:	a1 e0       	ldi	r26, 0x01	; 1
 762:	0e 94 b9 07 	call	0xf72	; 0xf72 <__adddi3_s8>
 766:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 76a:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 76e:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 772:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 776:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 77a:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 77e:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 782:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		ELEMENTS();
		on_off_mode();
		if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
		{
			
			while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
 786:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 78a:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 78e:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 792:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 796:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 79a:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 79e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 7a2:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 7a6:	a9 e0       	ldi	r26, 0x09	; 9
 7a8:	0e 94 c5 07 	call	0xf8a	; 0xf8a <__cmpdi2_s8>
 7ac:	09 f0       	breq	.+2      	; 0x7b0 <ON_MODE_Process+0xf2>
 7ae:	2c f4       	brge	.+10     	; 0x7ba <ON_MODE_Process+0xfc>
 7b0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 7b4:	81 30       	cpi	r24, 0x01	; 1
 7b6:	09 f4       	brne	.+2      	; 0x7ba <ON_MODE_Process+0xfc>
 7b8:	8e cf       	rjmp	.-228    	; 0x6d6 <ON_MODE_Process+0x18>
				counter_for_Timer++;
				
				
				
			}
			counter_for_Timer=0;
 7ba:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 7be:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 7c2:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 7c6:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 7ca:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 7ce:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 7d2:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 7d6:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	
}

void ON_MODE_Process (void)
{
	while(flag==1)
 7da:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 7de:	81 30       	cpi	r24, 0x01	; 1
 7e0:	09 f4       	brne	.+2      	; 0x7e4 <ON_MODE_Process+0x126>
 7e2:	6e cf       	rjmp	.-292    	; 0x6c0 <ON_MODE_Process+0x2>
				
			}
			counter_for_Timer=0;
		}
	}
}
 7e4:	08 95       	ret

000007e6 <main>:
GLOBAL_VARIABLES_H;
PROTOTYPES_H;
	 /*the main process*/
 int  main (void)
	{	 	
	DATA_DIRECTION_REGISTERS_H;
 7e6:	0e 94 29 01 	call	0x252	; 0x252 <Data_Direction_registers>
INITIALIZATION_VARIABLES_H;
 7ea:	0e 94 44 01 	call	0x288	; 0x288 <initialization_variables>
		//super loop for repeating this process infinitely
		while(1)  
		{
			 on_off_mode();
 7ee:	0e 94 46 03 	call	0x68c	; 0x68c <on_off_mode>
			 if(Start_Mode)
			 {
				 ON_MODE_Process();
 7f2:	0e 94 5f 03 	call	0x6be	; 0x6be <ON_MODE_Process>
 7f6:	fb cf       	rjmp	.-10     	; 0x7ee <main+0x8>

000007f8 <__subsf3>:
 7f8:	50 58       	subi	r21, 0x80	; 128

000007fa <__addsf3>:
 7fa:	bb 27       	eor	r27, r27
 7fc:	aa 27       	eor	r26, r26
 7fe:	0e 94 14 04 	call	0x828	; 0x828 <__addsf3x>
 802:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__fp_round>
 806:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fp_pscA>
 80a:	38 f0       	brcs	.+14     	; 0x81a <__addsf3+0x20>
 80c:	0e 94 80 05 	call	0xb00	; 0xb00 <__fp_pscB>
 810:	20 f0       	brcs	.+8      	; 0x81a <__addsf3+0x20>
 812:	39 f4       	brne	.+14     	; 0x822 <__addsf3+0x28>
 814:	9f 3f       	cpi	r25, 0xFF	; 255
 816:	19 f4       	brne	.+6      	; 0x81e <__addsf3+0x24>
 818:	26 f4       	brtc	.+8      	; 0x822 <__addsf3+0x28>
 81a:	0c 94 76 05 	jmp	0xaec	; 0xaec <__fp_nan>
 81e:	0e f4       	brtc	.+2      	; 0x822 <__addsf3+0x28>
 820:	e0 95       	com	r30
 822:	e7 fb       	bst	r30, 7
 824:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>

00000828 <__addsf3x>:
 828:	e9 2f       	mov	r30, r25
 82a:	0e 94 98 05 	call	0xb30	; 0xb30 <__fp_split3>
 82e:	58 f3       	brcs	.-42     	; 0x806 <__addsf3+0xc>
 830:	ba 17       	cp	r27, r26
 832:	62 07       	cpc	r22, r18
 834:	73 07       	cpc	r23, r19
 836:	84 07       	cpc	r24, r20
 838:	95 07       	cpc	r25, r21
 83a:	20 f0       	brcs	.+8      	; 0x844 <__addsf3x+0x1c>
 83c:	79 f4       	brne	.+30     	; 0x85c <__addsf3x+0x34>
 83e:	a6 f5       	brtc	.+104    	; 0x8a8 <__addsf3x+0x80>
 840:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__fp_zero>
 844:	0e f4       	brtc	.+2      	; 0x848 <__addsf3x+0x20>
 846:	e0 95       	com	r30
 848:	0b 2e       	mov	r0, r27
 84a:	ba 2f       	mov	r27, r26
 84c:	a0 2d       	mov	r26, r0
 84e:	0b 01       	movw	r0, r22
 850:	b9 01       	movw	r22, r18
 852:	90 01       	movw	r18, r0
 854:	0c 01       	movw	r0, r24
 856:	ca 01       	movw	r24, r20
 858:	a0 01       	movw	r20, r0
 85a:	11 24       	eor	r1, r1
 85c:	ff 27       	eor	r31, r31
 85e:	59 1b       	sub	r21, r25
 860:	99 f0       	breq	.+38     	; 0x888 <__addsf3x+0x60>
 862:	59 3f       	cpi	r21, 0xF9	; 249
 864:	50 f4       	brcc	.+20     	; 0x87a <__addsf3x+0x52>
 866:	50 3e       	cpi	r21, 0xE0	; 224
 868:	68 f1       	brcs	.+90     	; 0x8c4 <__addsf3x+0x9c>
 86a:	1a 16       	cp	r1, r26
 86c:	f0 40       	sbci	r31, 0x00	; 0
 86e:	a2 2f       	mov	r26, r18
 870:	23 2f       	mov	r18, r19
 872:	34 2f       	mov	r19, r20
 874:	44 27       	eor	r20, r20
 876:	58 5f       	subi	r21, 0xF8	; 248
 878:	f3 cf       	rjmp	.-26     	; 0x860 <__addsf3x+0x38>
 87a:	46 95       	lsr	r20
 87c:	37 95       	ror	r19
 87e:	27 95       	ror	r18
 880:	a7 95       	ror	r26
 882:	f0 40       	sbci	r31, 0x00	; 0
 884:	53 95       	inc	r21
 886:	c9 f7       	brne	.-14     	; 0x87a <__addsf3x+0x52>
 888:	7e f4       	brtc	.+30     	; 0x8a8 <__addsf3x+0x80>
 88a:	1f 16       	cp	r1, r31
 88c:	ba 0b       	sbc	r27, r26
 88e:	62 0b       	sbc	r22, r18
 890:	73 0b       	sbc	r23, r19
 892:	84 0b       	sbc	r24, r20
 894:	ba f0       	brmi	.+46     	; 0x8c4 <__addsf3x+0x9c>
 896:	91 50       	subi	r25, 0x01	; 1
 898:	a1 f0       	breq	.+40     	; 0x8c2 <__addsf3x+0x9a>
 89a:	ff 0f       	add	r31, r31
 89c:	bb 1f       	adc	r27, r27
 89e:	66 1f       	adc	r22, r22
 8a0:	77 1f       	adc	r23, r23
 8a2:	88 1f       	adc	r24, r24
 8a4:	c2 f7       	brpl	.-16     	; 0x896 <__addsf3x+0x6e>
 8a6:	0e c0       	rjmp	.+28     	; 0x8c4 <__addsf3x+0x9c>
 8a8:	ba 0f       	add	r27, r26
 8aa:	62 1f       	adc	r22, r18
 8ac:	73 1f       	adc	r23, r19
 8ae:	84 1f       	adc	r24, r20
 8b0:	48 f4       	brcc	.+18     	; 0x8c4 <__addsf3x+0x9c>
 8b2:	87 95       	ror	r24
 8b4:	77 95       	ror	r23
 8b6:	67 95       	ror	r22
 8b8:	b7 95       	ror	r27
 8ba:	f7 95       	ror	r31
 8bc:	9e 3f       	cpi	r25, 0xFE	; 254
 8be:	08 f0       	brcs	.+2      	; 0x8c2 <__addsf3x+0x9a>
 8c0:	b0 cf       	rjmp	.-160    	; 0x822 <__addsf3+0x28>
 8c2:	93 95       	inc	r25
 8c4:	88 0f       	add	r24, r24
 8c6:	08 f0       	brcs	.+2      	; 0x8ca <__addsf3x+0xa2>
 8c8:	99 27       	eor	r25, r25
 8ca:	ee 0f       	add	r30, r30
 8cc:	97 95       	ror	r25
 8ce:	87 95       	ror	r24
 8d0:	08 95       	ret

000008d2 <__cmpsf2>:
 8d2:	0e 94 4c 05 	call	0xa98	; 0xa98 <__fp_cmp>
 8d6:	08 f4       	brcc	.+2      	; 0x8da <__cmpsf2+0x8>
 8d8:	81 e0       	ldi	r24, 0x01	; 1
 8da:	08 95       	ret

000008dc <__divsf3>:
 8dc:	0e 94 82 04 	call	0x904	; 0x904 <__divsf3x>
 8e0:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__fp_round>
 8e4:	0e 94 80 05 	call	0xb00	; 0xb00 <__fp_pscB>
 8e8:	58 f0       	brcs	.+22     	; 0x900 <__divsf3+0x24>
 8ea:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fp_pscA>
 8ee:	40 f0       	brcs	.+16     	; 0x900 <__divsf3+0x24>
 8f0:	29 f4       	brne	.+10     	; 0x8fc <__divsf3+0x20>
 8f2:	5f 3f       	cpi	r21, 0xFF	; 255
 8f4:	29 f0       	breq	.+10     	; 0x900 <__divsf3+0x24>
 8f6:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>
 8fa:	51 11       	cpse	r21, r1
 8fc:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_szero>
 900:	0c 94 76 05 	jmp	0xaec	; 0xaec <__fp_nan>

00000904 <__divsf3x>:
 904:	0e 94 98 05 	call	0xb30	; 0xb30 <__fp_split3>
 908:	68 f3       	brcs	.-38     	; 0x8e4 <__divsf3+0x8>

0000090a <__divsf3_pse>:
 90a:	99 23       	and	r25, r25
 90c:	b1 f3       	breq	.-20     	; 0x8fa <__divsf3+0x1e>
 90e:	55 23       	and	r21, r21
 910:	91 f3       	breq	.-28     	; 0x8f6 <__divsf3+0x1a>
 912:	95 1b       	sub	r25, r21
 914:	55 0b       	sbc	r21, r21
 916:	bb 27       	eor	r27, r27
 918:	aa 27       	eor	r26, r26
 91a:	62 17       	cp	r22, r18
 91c:	73 07       	cpc	r23, r19
 91e:	84 07       	cpc	r24, r20
 920:	38 f0       	brcs	.+14     	; 0x930 <__divsf3_pse+0x26>
 922:	9f 5f       	subi	r25, 0xFF	; 255
 924:	5f 4f       	sbci	r21, 0xFF	; 255
 926:	22 0f       	add	r18, r18
 928:	33 1f       	adc	r19, r19
 92a:	44 1f       	adc	r20, r20
 92c:	aa 1f       	adc	r26, r26
 92e:	a9 f3       	breq	.-22     	; 0x91a <__divsf3_pse+0x10>
 930:	35 d0       	rcall	.+106    	; 0x99c <__divsf3_pse+0x92>
 932:	0e 2e       	mov	r0, r30
 934:	3a f0       	brmi	.+14     	; 0x944 <__divsf3_pse+0x3a>
 936:	e0 e8       	ldi	r30, 0x80	; 128
 938:	32 d0       	rcall	.+100    	; 0x99e <__divsf3_pse+0x94>
 93a:	91 50       	subi	r25, 0x01	; 1
 93c:	50 40       	sbci	r21, 0x00	; 0
 93e:	e6 95       	lsr	r30
 940:	00 1c       	adc	r0, r0
 942:	ca f7       	brpl	.-14     	; 0x936 <__divsf3_pse+0x2c>
 944:	2b d0       	rcall	.+86     	; 0x99c <__divsf3_pse+0x92>
 946:	fe 2f       	mov	r31, r30
 948:	29 d0       	rcall	.+82     	; 0x99c <__divsf3_pse+0x92>
 94a:	66 0f       	add	r22, r22
 94c:	77 1f       	adc	r23, r23
 94e:	88 1f       	adc	r24, r24
 950:	bb 1f       	adc	r27, r27
 952:	26 17       	cp	r18, r22
 954:	37 07       	cpc	r19, r23
 956:	48 07       	cpc	r20, r24
 958:	ab 07       	cpc	r26, r27
 95a:	b0 e8       	ldi	r27, 0x80	; 128
 95c:	09 f0       	breq	.+2      	; 0x960 <__divsf3_pse+0x56>
 95e:	bb 0b       	sbc	r27, r27
 960:	80 2d       	mov	r24, r0
 962:	bf 01       	movw	r22, r30
 964:	ff 27       	eor	r31, r31
 966:	93 58       	subi	r25, 0x83	; 131
 968:	5f 4f       	sbci	r21, 0xFF	; 255
 96a:	3a f0       	brmi	.+14     	; 0x97a <__divsf3_pse+0x70>
 96c:	9e 3f       	cpi	r25, 0xFE	; 254
 96e:	51 05       	cpc	r21, r1
 970:	78 f0       	brcs	.+30     	; 0x990 <__divsf3_pse+0x86>
 972:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>
 976:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_szero>
 97a:	5f 3f       	cpi	r21, 0xFF	; 255
 97c:	e4 f3       	brlt	.-8      	; 0x976 <__divsf3_pse+0x6c>
 97e:	98 3e       	cpi	r25, 0xE8	; 232
 980:	d4 f3       	brlt	.-12     	; 0x976 <__divsf3_pse+0x6c>
 982:	86 95       	lsr	r24
 984:	77 95       	ror	r23
 986:	67 95       	ror	r22
 988:	b7 95       	ror	r27
 98a:	f7 95       	ror	r31
 98c:	9f 5f       	subi	r25, 0xFF	; 255
 98e:	c9 f7       	brne	.-14     	; 0x982 <__divsf3_pse+0x78>
 990:	88 0f       	add	r24, r24
 992:	91 1d       	adc	r25, r1
 994:	96 95       	lsr	r25
 996:	87 95       	ror	r24
 998:	97 f9       	bld	r25, 7
 99a:	08 95       	ret
 99c:	e1 e0       	ldi	r30, 0x01	; 1
 99e:	66 0f       	add	r22, r22
 9a0:	77 1f       	adc	r23, r23
 9a2:	88 1f       	adc	r24, r24
 9a4:	bb 1f       	adc	r27, r27
 9a6:	62 17       	cp	r22, r18
 9a8:	73 07       	cpc	r23, r19
 9aa:	84 07       	cpc	r24, r20
 9ac:	ba 07       	cpc	r27, r26
 9ae:	20 f0       	brcs	.+8      	; 0x9b8 <__divsf3_pse+0xae>
 9b0:	62 1b       	sub	r22, r18
 9b2:	73 0b       	sbc	r23, r19
 9b4:	84 0b       	sbc	r24, r20
 9b6:	ba 0b       	sbc	r27, r26
 9b8:	ee 1f       	adc	r30, r30
 9ba:	88 f7       	brcc	.-30     	; 0x99e <__divsf3_pse+0x94>
 9bc:	e0 95       	com	r30
 9be:	08 95       	ret

000009c0 <__fixunssfsi>:
 9c0:	0e 94 a0 05 	call	0xb40	; 0xb40 <__fp_splitA>
 9c4:	88 f0       	brcs	.+34     	; 0x9e8 <__fixunssfsi+0x28>
 9c6:	9f 57       	subi	r25, 0x7F	; 127
 9c8:	98 f0       	brcs	.+38     	; 0x9f0 <__fixunssfsi+0x30>
 9ca:	b9 2f       	mov	r27, r25
 9cc:	99 27       	eor	r25, r25
 9ce:	b7 51       	subi	r27, 0x17	; 23
 9d0:	b0 f0       	brcs	.+44     	; 0x9fe <__fixunssfsi+0x3e>
 9d2:	e1 f0       	breq	.+56     	; 0xa0c <__fixunssfsi+0x4c>
 9d4:	66 0f       	add	r22, r22
 9d6:	77 1f       	adc	r23, r23
 9d8:	88 1f       	adc	r24, r24
 9da:	99 1f       	adc	r25, r25
 9dc:	1a f0       	brmi	.+6      	; 0x9e4 <__fixunssfsi+0x24>
 9de:	ba 95       	dec	r27
 9e0:	c9 f7       	brne	.-14     	; 0x9d4 <__fixunssfsi+0x14>
 9e2:	14 c0       	rjmp	.+40     	; 0xa0c <__fixunssfsi+0x4c>
 9e4:	b1 30       	cpi	r27, 0x01	; 1
 9e6:	91 f0       	breq	.+36     	; 0xa0c <__fixunssfsi+0x4c>
 9e8:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fp_zero>
 9ec:	b1 e0       	ldi	r27, 0x01	; 1
 9ee:	08 95       	ret
 9f0:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__fp_zero>
 9f4:	67 2f       	mov	r22, r23
 9f6:	78 2f       	mov	r23, r24
 9f8:	88 27       	eor	r24, r24
 9fa:	b8 5f       	subi	r27, 0xF8	; 248
 9fc:	39 f0       	breq	.+14     	; 0xa0c <__fixunssfsi+0x4c>
 9fe:	b9 3f       	cpi	r27, 0xF9	; 249
 a00:	cc f3       	brlt	.-14     	; 0x9f4 <__fixunssfsi+0x34>
 a02:	86 95       	lsr	r24
 a04:	77 95       	ror	r23
 a06:	67 95       	ror	r22
 a08:	b3 95       	inc	r27
 a0a:	d9 f7       	brne	.-10     	; 0xa02 <__fixunssfsi+0x42>
 a0c:	3e f4       	brtc	.+14     	; 0xa1c <__fixunssfsi+0x5c>
 a0e:	90 95       	com	r25
 a10:	80 95       	com	r24
 a12:	70 95       	com	r23
 a14:	61 95       	neg	r22
 a16:	7f 4f       	sbci	r23, 0xFF	; 255
 a18:	8f 4f       	sbci	r24, 0xFF	; 255
 a1a:	9f 4f       	sbci	r25, 0xFF	; 255
 a1c:	08 95       	ret

00000a1e <__floatunsisf>:
 a1e:	e8 94       	clt
 a20:	09 c0       	rjmp	.+18     	; 0xa34 <__floatsisf+0x12>

00000a22 <__floatsisf>:
 a22:	97 fb       	bst	r25, 7
 a24:	3e f4       	brtc	.+14     	; 0xa34 <__floatsisf+0x12>
 a26:	90 95       	com	r25
 a28:	80 95       	com	r24
 a2a:	70 95       	com	r23
 a2c:	61 95       	neg	r22
 a2e:	7f 4f       	sbci	r23, 0xFF	; 255
 a30:	8f 4f       	sbci	r24, 0xFF	; 255
 a32:	9f 4f       	sbci	r25, 0xFF	; 255
 a34:	99 23       	and	r25, r25
 a36:	a9 f0       	breq	.+42     	; 0xa62 <__floatsisf+0x40>
 a38:	f9 2f       	mov	r31, r25
 a3a:	96 e9       	ldi	r25, 0x96	; 150
 a3c:	bb 27       	eor	r27, r27
 a3e:	93 95       	inc	r25
 a40:	f6 95       	lsr	r31
 a42:	87 95       	ror	r24
 a44:	77 95       	ror	r23
 a46:	67 95       	ror	r22
 a48:	b7 95       	ror	r27
 a4a:	f1 11       	cpse	r31, r1
 a4c:	f8 cf       	rjmp	.-16     	; 0xa3e <__floatsisf+0x1c>
 a4e:	fa f4       	brpl	.+62     	; 0xa8e <__floatsisf+0x6c>
 a50:	bb 0f       	add	r27, r27
 a52:	11 f4       	brne	.+4      	; 0xa58 <__floatsisf+0x36>
 a54:	60 ff       	sbrs	r22, 0
 a56:	1b c0       	rjmp	.+54     	; 0xa8e <__floatsisf+0x6c>
 a58:	6f 5f       	subi	r22, 0xFF	; 255
 a5a:	7f 4f       	sbci	r23, 0xFF	; 255
 a5c:	8f 4f       	sbci	r24, 0xFF	; 255
 a5e:	9f 4f       	sbci	r25, 0xFF	; 255
 a60:	16 c0       	rjmp	.+44     	; 0xa8e <__floatsisf+0x6c>
 a62:	88 23       	and	r24, r24
 a64:	11 f0       	breq	.+4      	; 0xa6a <__floatsisf+0x48>
 a66:	96 e9       	ldi	r25, 0x96	; 150
 a68:	11 c0       	rjmp	.+34     	; 0xa8c <__floatsisf+0x6a>
 a6a:	77 23       	and	r23, r23
 a6c:	21 f0       	breq	.+8      	; 0xa76 <__floatsisf+0x54>
 a6e:	9e e8       	ldi	r25, 0x8E	; 142
 a70:	87 2f       	mov	r24, r23
 a72:	76 2f       	mov	r23, r22
 a74:	05 c0       	rjmp	.+10     	; 0xa80 <__floatsisf+0x5e>
 a76:	66 23       	and	r22, r22
 a78:	71 f0       	breq	.+28     	; 0xa96 <__floatsisf+0x74>
 a7a:	96 e8       	ldi	r25, 0x86	; 134
 a7c:	86 2f       	mov	r24, r22
 a7e:	70 e0       	ldi	r23, 0x00	; 0
 a80:	60 e0       	ldi	r22, 0x00	; 0
 a82:	2a f0       	brmi	.+10     	; 0xa8e <__floatsisf+0x6c>
 a84:	9a 95       	dec	r25
 a86:	66 0f       	add	r22, r22
 a88:	77 1f       	adc	r23, r23
 a8a:	88 1f       	adc	r24, r24
 a8c:	da f7       	brpl	.-10     	; 0xa84 <__floatsisf+0x62>
 a8e:	88 0f       	add	r24, r24
 a90:	96 95       	lsr	r25
 a92:	87 95       	ror	r24
 a94:	97 f9       	bld	r25, 7
 a96:	08 95       	ret

00000a98 <__fp_cmp>:
 a98:	99 0f       	add	r25, r25
 a9a:	00 08       	sbc	r0, r0
 a9c:	55 0f       	add	r21, r21
 a9e:	aa 0b       	sbc	r26, r26
 aa0:	e0 e8       	ldi	r30, 0x80	; 128
 aa2:	fe ef       	ldi	r31, 0xFE	; 254
 aa4:	16 16       	cp	r1, r22
 aa6:	17 06       	cpc	r1, r23
 aa8:	e8 07       	cpc	r30, r24
 aaa:	f9 07       	cpc	r31, r25
 aac:	c0 f0       	brcs	.+48     	; 0xade <__fp_cmp+0x46>
 aae:	12 16       	cp	r1, r18
 ab0:	13 06       	cpc	r1, r19
 ab2:	e4 07       	cpc	r30, r20
 ab4:	f5 07       	cpc	r31, r21
 ab6:	98 f0       	brcs	.+38     	; 0xade <__fp_cmp+0x46>
 ab8:	62 1b       	sub	r22, r18
 aba:	73 0b       	sbc	r23, r19
 abc:	84 0b       	sbc	r24, r20
 abe:	95 0b       	sbc	r25, r21
 ac0:	39 f4       	brne	.+14     	; 0xad0 <__fp_cmp+0x38>
 ac2:	0a 26       	eor	r0, r26
 ac4:	61 f0       	breq	.+24     	; 0xade <__fp_cmp+0x46>
 ac6:	23 2b       	or	r18, r19
 ac8:	24 2b       	or	r18, r20
 aca:	25 2b       	or	r18, r21
 acc:	21 f4       	brne	.+8      	; 0xad6 <__fp_cmp+0x3e>
 ace:	08 95       	ret
 ad0:	0a 26       	eor	r0, r26
 ad2:	09 f4       	brne	.+2      	; 0xad6 <__fp_cmp+0x3e>
 ad4:	a1 40       	sbci	r26, 0x01	; 1
 ad6:	a6 95       	lsr	r26
 ad8:	8f ef       	ldi	r24, 0xFF	; 255
 ada:	81 1d       	adc	r24, r1
 adc:	81 1d       	adc	r24, r1
 ade:	08 95       	ret

00000ae0 <__fp_inf>:
 ae0:	97 f9       	bld	r25, 7
 ae2:	9f 67       	ori	r25, 0x7F	; 127
 ae4:	80 e8       	ldi	r24, 0x80	; 128
 ae6:	70 e0       	ldi	r23, 0x00	; 0
 ae8:	60 e0       	ldi	r22, 0x00	; 0
 aea:	08 95       	ret

00000aec <__fp_nan>:
 aec:	9f ef       	ldi	r25, 0xFF	; 255
 aee:	80 ec       	ldi	r24, 0xC0	; 192
 af0:	08 95       	ret

00000af2 <__fp_pscA>:
 af2:	00 24       	eor	r0, r0
 af4:	0a 94       	dec	r0
 af6:	16 16       	cp	r1, r22
 af8:	17 06       	cpc	r1, r23
 afa:	18 06       	cpc	r1, r24
 afc:	09 06       	cpc	r0, r25
 afe:	08 95       	ret

00000b00 <__fp_pscB>:
 b00:	00 24       	eor	r0, r0
 b02:	0a 94       	dec	r0
 b04:	12 16       	cp	r1, r18
 b06:	13 06       	cpc	r1, r19
 b08:	14 06       	cpc	r1, r20
 b0a:	05 06       	cpc	r0, r21
 b0c:	08 95       	ret

00000b0e <__fp_round>:
 b0e:	09 2e       	mov	r0, r25
 b10:	03 94       	inc	r0
 b12:	00 0c       	add	r0, r0
 b14:	11 f4       	brne	.+4      	; 0xb1a <__fp_round+0xc>
 b16:	88 23       	and	r24, r24
 b18:	52 f0       	brmi	.+20     	; 0xb2e <__fp_round+0x20>
 b1a:	bb 0f       	add	r27, r27
 b1c:	40 f4       	brcc	.+16     	; 0xb2e <__fp_round+0x20>
 b1e:	bf 2b       	or	r27, r31
 b20:	11 f4       	brne	.+4      	; 0xb26 <__fp_round+0x18>
 b22:	60 ff       	sbrs	r22, 0
 b24:	04 c0       	rjmp	.+8      	; 0xb2e <__fp_round+0x20>
 b26:	6f 5f       	subi	r22, 0xFF	; 255
 b28:	7f 4f       	sbci	r23, 0xFF	; 255
 b2a:	8f 4f       	sbci	r24, 0xFF	; 255
 b2c:	9f 4f       	sbci	r25, 0xFF	; 255
 b2e:	08 95       	ret

00000b30 <__fp_split3>:
 b30:	57 fd       	sbrc	r21, 7
 b32:	90 58       	subi	r25, 0x80	; 128
 b34:	44 0f       	add	r20, r20
 b36:	55 1f       	adc	r21, r21
 b38:	59 f0       	breq	.+22     	; 0xb50 <__fp_splitA+0x10>
 b3a:	5f 3f       	cpi	r21, 0xFF	; 255
 b3c:	71 f0       	breq	.+28     	; 0xb5a <__fp_splitA+0x1a>
 b3e:	47 95       	ror	r20

00000b40 <__fp_splitA>:
 b40:	88 0f       	add	r24, r24
 b42:	97 fb       	bst	r25, 7
 b44:	99 1f       	adc	r25, r25
 b46:	61 f0       	breq	.+24     	; 0xb60 <__fp_splitA+0x20>
 b48:	9f 3f       	cpi	r25, 0xFF	; 255
 b4a:	79 f0       	breq	.+30     	; 0xb6a <__fp_splitA+0x2a>
 b4c:	87 95       	ror	r24
 b4e:	08 95       	ret
 b50:	12 16       	cp	r1, r18
 b52:	13 06       	cpc	r1, r19
 b54:	14 06       	cpc	r1, r20
 b56:	55 1f       	adc	r21, r21
 b58:	f2 cf       	rjmp	.-28     	; 0xb3e <__fp_split3+0xe>
 b5a:	46 95       	lsr	r20
 b5c:	f1 df       	rcall	.-30     	; 0xb40 <__fp_splitA>
 b5e:	08 c0       	rjmp	.+16     	; 0xb70 <__fp_splitA+0x30>
 b60:	16 16       	cp	r1, r22
 b62:	17 06       	cpc	r1, r23
 b64:	18 06       	cpc	r1, r24
 b66:	99 1f       	adc	r25, r25
 b68:	f1 cf       	rjmp	.-30     	; 0xb4c <__fp_splitA+0xc>
 b6a:	86 95       	lsr	r24
 b6c:	71 05       	cpc	r23, r1
 b6e:	61 05       	cpc	r22, r1
 b70:	08 94       	sec
 b72:	08 95       	ret

00000b74 <__fp_zero>:
 b74:	e8 94       	clt

00000b76 <__fp_szero>:
 b76:	bb 27       	eor	r27, r27
 b78:	66 27       	eor	r22, r22
 b7a:	77 27       	eor	r23, r23
 b7c:	cb 01       	movw	r24, r22
 b7e:	97 f9       	bld	r25, 7
 b80:	08 95       	ret

00000b82 <__mulsf3>:
 b82:	0e 94 d4 05 	call	0xba8	; 0xba8 <__mulsf3x>
 b86:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__fp_round>
 b8a:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fp_pscA>
 b8e:	38 f0       	brcs	.+14     	; 0xb9e <__mulsf3+0x1c>
 b90:	0e 94 80 05 	call	0xb00	; 0xb00 <__fp_pscB>
 b94:	20 f0       	brcs	.+8      	; 0xb9e <__mulsf3+0x1c>
 b96:	95 23       	and	r25, r21
 b98:	11 f0       	breq	.+4      	; 0xb9e <__mulsf3+0x1c>
 b9a:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>
 b9e:	0c 94 76 05 	jmp	0xaec	; 0xaec <__fp_nan>
 ba2:	11 24       	eor	r1, r1
 ba4:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_szero>

00000ba8 <__mulsf3x>:
 ba8:	0e 94 98 05 	call	0xb30	; 0xb30 <__fp_split3>
 bac:	70 f3       	brcs	.-36     	; 0xb8a <__mulsf3+0x8>

00000bae <__mulsf3_pse>:
 bae:	95 9f       	mul	r25, r21
 bb0:	c1 f3       	breq	.-16     	; 0xba2 <__mulsf3+0x20>
 bb2:	95 0f       	add	r25, r21
 bb4:	50 e0       	ldi	r21, 0x00	; 0
 bb6:	55 1f       	adc	r21, r21
 bb8:	62 9f       	mul	r22, r18
 bba:	f0 01       	movw	r30, r0
 bbc:	72 9f       	mul	r23, r18
 bbe:	bb 27       	eor	r27, r27
 bc0:	f0 0d       	add	r31, r0
 bc2:	b1 1d       	adc	r27, r1
 bc4:	63 9f       	mul	r22, r19
 bc6:	aa 27       	eor	r26, r26
 bc8:	f0 0d       	add	r31, r0
 bca:	b1 1d       	adc	r27, r1
 bcc:	aa 1f       	adc	r26, r26
 bce:	64 9f       	mul	r22, r20
 bd0:	66 27       	eor	r22, r22
 bd2:	b0 0d       	add	r27, r0
 bd4:	a1 1d       	adc	r26, r1
 bd6:	66 1f       	adc	r22, r22
 bd8:	82 9f       	mul	r24, r18
 bda:	22 27       	eor	r18, r18
 bdc:	b0 0d       	add	r27, r0
 bde:	a1 1d       	adc	r26, r1
 be0:	62 1f       	adc	r22, r18
 be2:	73 9f       	mul	r23, r19
 be4:	b0 0d       	add	r27, r0
 be6:	a1 1d       	adc	r26, r1
 be8:	62 1f       	adc	r22, r18
 bea:	83 9f       	mul	r24, r19
 bec:	a0 0d       	add	r26, r0
 bee:	61 1d       	adc	r22, r1
 bf0:	22 1f       	adc	r18, r18
 bf2:	74 9f       	mul	r23, r20
 bf4:	33 27       	eor	r19, r19
 bf6:	a0 0d       	add	r26, r0
 bf8:	61 1d       	adc	r22, r1
 bfa:	23 1f       	adc	r18, r19
 bfc:	84 9f       	mul	r24, r20
 bfe:	60 0d       	add	r22, r0
 c00:	21 1d       	adc	r18, r1
 c02:	82 2f       	mov	r24, r18
 c04:	76 2f       	mov	r23, r22
 c06:	6a 2f       	mov	r22, r26
 c08:	11 24       	eor	r1, r1
 c0a:	9f 57       	subi	r25, 0x7F	; 127
 c0c:	50 40       	sbci	r21, 0x00	; 0
 c0e:	9a f0       	brmi	.+38     	; 0xc36 <__mulsf3_pse+0x88>
 c10:	f1 f0       	breq	.+60     	; 0xc4e <__mulsf3_pse+0xa0>
 c12:	88 23       	and	r24, r24
 c14:	4a f0       	brmi	.+18     	; 0xc28 <__mulsf3_pse+0x7a>
 c16:	ee 0f       	add	r30, r30
 c18:	ff 1f       	adc	r31, r31
 c1a:	bb 1f       	adc	r27, r27
 c1c:	66 1f       	adc	r22, r22
 c1e:	77 1f       	adc	r23, r23
 c20:	88 1f       	adc	r24, r24
 c22:	91 50       	subi	r25, 0x01	; 1
 c24:	50 40       	sbci	r21, 0x00	; 0
 c26:	a9 f7       	brne	.-22     	; 0xc12 <__mulsf3_pse+0x64>
 c28:	9e 3f       	cpi	r25, 0xFE	; 254
 c2a:	51 05       	cpc	r21, r1
 c2c:	80 f0       	brcs	.+32     	; 0xc4e <__mulsf3_pse+0xa0>
 c2e:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>
 c32:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_szero>
 c36:	5f 3f       	cpi	r21, 0xFF	; 255
 c38:	e4 f3       	brlt	.-8      	; 0xc32 <__mulsf3_pse+0x84>
 c3a:	98 3e       	cpi	r25, 0xE8	; 232
 c3c:	d4 f3       	brlt	.-12     	; 0xc32 <__mulsf3_pse+0x84>
 c3e:	86 95       	lsr	r24
 c40:	77 95       	ror	r23
 c42:	67 95       	ror	r22
 c44:	b7 95       	ror	r27
 c46:	f7 95       	ror	r31
 c48:	e7 95       	ror	r30
 c4a:	9f 5f       	subi	r25, 0xFF	; 255
 c4c:	c1 f7       	brne	.-16     	; 0xc3e <__mulsf3_pse+0x90>
 c4e:	fe 2b       	or	r31, r30
 c50:	88 0f       	add	r24, r24
 c52:	91 1d       	adc	r25, r1
 c54:	96 95       	lsr	r25
 c56:	87 95       	ror	r24
 c58:	97 f9       	bld	r25, 7
 c5a:	08 95       	ret

00000c5c <pow>:
 c5c:	fa 01       	movw	r30, r20
 c5e:	ee 0f       	add	r30, r30
 c60:	ff 1f       	adc	r31, r31
 c62:	30 96       	adiw	r30, 0x00	; 0
 c64:	21 05       	cpc	r18, r1
 c66:	31 05       	cpc	r19, r1
 c68:	a1 f1       	breq	.+104    	; 0xcd2 <pow+0x76>
 c6a:	61 15       	cp	r22, r1
 c6c:	71 05       	cpc	r23, r1
 c6e:	61 f4       	brne	.+24     	; 0xc88 <pow+0x2c>
 c70:	80 38       	cpi	r24, 0x80	; 128
 c72:	bf e3       	ldi	r27, 0x3F	; 63
 c74:	9b 07       	cpc	r25, r27
 c76:	49 f1       	breq	.+82     	; 0xcca <pow+0x6e>
 c78:	68 94       	set
 c7a:	90 38       	cpi	r25, 0x80	; 128
 c7c:	81 05       	cpc	r24, r1
 c7e:	61 f0       	breq	.+24     	; 0xc98 <pow+0x3c>
 c80:	80 38       	cpi	r24, 0x80	; 128
 c82:	bf ef       	ldi	r27, 0xFF	; 255
 c84:	9b 07       	cpc	r25, r27
 c86:	41 f0       	breq	.+16     	; 0xc98 <pow+0x3c>
 c88:	99 23       	and	r25, r25
 c8a:	4a f5       	brpl	.+82     	; 0xcde <pow+0x82>
 c8c:	ff 3f       	cpi	r31, 0xFF	; 255
 c8e:	e1 05       	cpc	r30, r1
 c90:	31 05       	cpc	r19, r1
 c92:	21 05       	cpc	r18, r1
 c94:	19 f1       	breq	.+70     	; 0xcdc <pow+0x80>
 c96:	e8 94       	clt
 c98:	08 94       	sec
 c9a:	e7 95       	ror	r30
 c9c:	d9 01       	movw	r26, r18
 c9e:	aa 23       	and	r26, r26
 ca0:	29 f4       	brne	.+10     	; 0xcac <pow+0x50>
 ca2:	ab 2f       	mov	r26, r27
 ca4:	be 2f       	mov	r27, r30
 ca6:	f8 5f       	subi	r31, 0xF8	; 248
 ca8:	d0 f3       	brcs	.-12     	; 0xc9e <pow+0x42>
 caa:	10 c0       	rjmp	.+32     	; 0xccc <pow+0x70>
 cac:	ff 5f       	subi	r31, 0xFF	; 255
 cae:	70 f4       	brcc	.+28     	; 0xccc <pow+0x70>
 cb0:	a6 95       	lsr	r26
 cb2:	e0 f7       	brcc	.-8      	; 0xcac <pow+0x50>
 cb4:	f7 39       	cpi	r31, 0x97	; 151
 cb6:	50 f0       	brcs	.+20     	; 0xccc <pow+0x70>
 cb8:	19 f0       	breq	.+6      	; 0xcc0 <pow+0x64>
 cba:	ff 3a       	cpi	r31, 0xAF	; 175
 cbc:	38 f4       	brcc	.+14     	; 0xccc <pow+0x70>
 cbe:	9f 77       	andi	r25, 0x7F	; 127
 cc0:	9f 93       	push	r25
 cc2:	0d d0       	rcall	.+26     	; 0xcde <pow+0x82>
 cc4:	0f 90       	pop	r0
 cc6:	07 fc       	sbrc	r0, 7
 cc8:	90 58       	subi	r25, 0x80	; 128
 cca:	08 95       	ret
 ccc:	46 f0       	brts	.+16     	; 0xcde <pow+0x82>
 cce:	0c 94 76 05 	jmp	0xaec	; 0xaec <__fp_nan>
 cd2:	60 e0       	ldi	r22, 0x00	; 0
 cd4:	70 e0       	ldi	r23, 0x00	; 0
 cd6:	80 e8       	ldi	r24, 0x80	; 128
 cd8:	9f e3       	ldi	r25, 0x3F	; 63
 cda:	08 95       	ret
 cdc:	4f e7       	ldi	r20, 0x7F	; 127
 cde:	9f 77       	andi	r25, 0x7F	; 127
 ce0:	5f 93       	push	r21
 ce2:	4f 93       	push	r20
 ce4:	3f 93       	push	r19
 ce6:	2f 93       	push	r18
 ce8:	0e 94 29 07 	call	0xe52	; 0xe52 <log>
 cec:	2f 91       	pop	r18
 cee:	3f 91       	pop	r19
 cf0:	4f 91       	pop	r20
 cf2:	5f 91       	pop	r21
 cf4:	0e 94 c1 05 	call	0xb82	; 0xb82 <__mulsf3>
 cf8:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <exp>
 cfc:	29 f4       	brne	.+10     	; 0xd08 <pow+0xac>
 cfe:	16 f0       	brts	.+4      	; 0xd04 <pow+0xa8>
 d00:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>
 d04:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__fp_zero>
 d08:	0c 94 76 05 	jmp	0xaec	; 0xaec <__fp_nan>

00000d0c <exp>:
 d0c:	0e 94 a0 05 	call	0xb40	; 0xb40 <__fp_splitA>
 d10:	a8 f3       	brcs	.-22     	; 0xcfc <pow+0xa0>
 d12:	96 38       	cpi	r25, 0x86	; 134
 d14:	a0 f7       	brcc	.-24     	; 0xcfe <pow+0xa2>
 d16:	07 f8       	bld	r0, 7
 d18:	0f 92       	push	r0
 d1a:	e8 94       	clt
 d1c:	2b e3       	ldi	r18, 0x3B	; 59
 d1e:	3a ea       	ldi	r19, 0xAA	; 170
 d20:	48 eb       	ldi	r20, 0xB8	; 184
 d22:	5f e7       	ldi	r21, 0x7F	; 127
 d24:	0e 94 d7 05 	call	0xbae	; 0xbae <__mulsf3_pse>
 d28:	0f 92       	push	r0
 d2a:	0f 92       	push	r0
 d2c:	0f 92       	push	r0
 d2e:	4d b7       	in	r20, 0x3d	; 61
 d30:	5e b7       	in	r21, 0x3e	; 62
 d32:	0f 92       	push	r0
 d34:	0e 94 71 07 	call	0xee2	; 0xee2 <modf>
 d38:	e8 e7       	ldi	r30, 0x78	; 120
 d3a:	f0 e0       	ldi	r31, 0x00	; 0
 d3c:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fp_powser>
 d40:	4f 91       	pop	r20
 d42:	5f 91       	pop	r21
 d44:	ef 91       	pop	r30
 d46:	ff 91       	pop	r31
 d48:	e5 95       	asr	r30
 d4a:	ee 1f       	adc	r30, r30
 d4c:	ff 1f       	adc	r31, r31
 d4e:	49 f0       	breq	.+18     	; 0xd62 <exp+0x56>
 d50:	fe 57       	subi	r31, 0x7E	; 126
 d52:	e0 68       	ori	r30, 0x80	; 128
 d54:	44 27       	eor	r20, r20
 d56:	ee 0f       	add	r30, r30
 d58:	44 1f       	adc	r20, r20
 d5a:	fa 95       	dec	r31
 d5c:	e1 f7       	brne	.-8      	; 0xd56 <exp+0x4a>
 d5e:	41 95       	neg	r20
 d60:	55 0b       	sbc	r21, r21
 d62:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <ldexp>
 d66:	0f 90       	pop	r0
 d68:	07 fe       	sbrs	r0, 7
 d6a:	0c 94 df 06 	jmp	0xdbe	; 0xdbe <inverse>
 d6e:	08 95       	ret

00000d70 <__fp_powser>:
 d70:	df 93       	push	r29
 d72:	cf 93       	push	r28
 d74:	1f 93       	push	r17
 d76:	0f 93       	push	r16
 d78:	ff 92       	push	r15
 d7a:	ef 92       	push	r14
 d7c:	df 92       	push	r13
 d7e:	7b 01       	movw	r14, r22
 d80:	8c 01       	movw	r16, r24
 d82:	68 94       	set
 d84:	06 c0       	rjmp	.+12     	; 0xd92 <__fp_powser+0x22>
 d86:	da 2e       	mov	r13, r26
 d88:	ef 01       	movw	r28, r30
 d8a:	0e 94 d4 05 	call	0xba8	; 0xba8 <__mulsf3x>
 d8e:	fe 01       	movw	r30, r28
 d90:	e8 94       	clt
 d92:	a5 91       	lpm	r26, Z+
 d94:	25 91       	lpm	r18, Z+
 d96:	35 91       	lpm	r19, Z+
 d98:	45 91       	lpm	r20, Z+
 d9a:	55 91       	lpm	r21, Z+
 d9c:	a6 f3       	brts	.-24     	; 0xd86 <__fp_powser+0x16>
 d9e:	ef 01       	movw	r28, r30
 da0:	0e 94 14 04 	call	0x828	; 0x828 <__addsf3x>
 da4:	fe 01       	movw	r30, r28
 da6:	97 01       	movw	r18, r14
 da8:	a8 01       	movw	r20, r16
 daa:	da 94       	dec	r13
 dac:	69 f7       	brne	.-38     	; 0xd88 <__fp_powser+0x18>
 dae:	df 90       	pop	r13
 db0:	ef 90       	pop	r14
 db2:	ff 90       	pop	r15
 db4:	0f 91       	pop	r16
 db6:	1f 91       	pop	r17
 db8:	cf 91       	pop	r28
 dba:	df 91       	pop	r29
 dbc:	08 95       	ret

00000dbe <inverse>:
 dbe:	9b 01       	movw	r18, r22
 dc0:	ac 01       	movw	r20, r24
 dc2:	60 e0       	ldi	r22, 0x00	; 0
 dc4:	70 e0       	ldi	r23, 0x00	; 0
 dc6:	80 e8       	ldi	r24, 0x80	; 128
 dc8:	9f e3       	ldi	r25, 0x3F	; 63
 dca:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__divsf3>
 dce:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>
 dd2:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <__fp_mpack>

00000dd6 <ldexp>:
 dd6:	0e 94 a0 05 	call	0xb40	; 0xb40 <__fp_splitA>
 dda:	d8 f3       	brcs	.-10     	; 0xdd2 <inverse+0x14>
 ddc:	99 23       	and	r25, r25
 dde:	c9 f3       	breq	.-14     	; 0xdd2 <inverse+0x14>
 de0:	94 0f       	add	r25, r20
 de2:	51 1d       	adc	r21, r1
 de4:	a3 f3       	brvs	.-24     	; 0xdce <inverse+0x10>
 de6:	91 50       	subi	r25, 0x01	; 1
 de8:	50 40       	sbci	r21, 0x00	; 0
 dea:	94 f0       	brlt	.+36     	; 0xe10 <ldexp+0x3a>
 dec:	59 f0       	breq	.+22     	; 0xe04 <ldexp+0x2e>
 dee:	88 23       	and	r24, r24
 df0:	32 f0       	brmi	.+12     	; 0xdfe <ldexp+0x28>
 df2:	66 0f       	add	r22, r22
 df4:	77 1f       	adc	r23, r23
 df6:	88 1f       	adc	r24, r24
 df8:	91 50       	subi	r25, 0x01	; 1
 dfa:	50 40       	sbci	r21, 0x00	; 0
 dfc:	c1 f7       	brne	.-16     	; 0xdee <ldexp+0x18>
 dfe:	9e 3f       	cpi	r25, 0xFE	; 254
 e00:	51 05       	cpc	r21, r1
 e02:	2c f7       	brge	.-54     	; 0xdce <inverse+0x10>
 e04:	88 0f       	add	r24, r24
 e06:	91 1d       	adc	r25, r1
 e08:	96 95       	lsr	r25
 e0a:	87 95       	ror	r24
 e0c:	97 f9       	bld	r25, 7
 e0e:	08 95       	ret
 e10:	5f 3f       	cpi	r21, 0xFF	; 255
 e12:	ac f0       	brlt	.+42     	; 0xe3e <ldexp+0x68>
 e14:	98 3e       	cpi	r25, 0xE8	; 232
 e16:	9c f0       	brlt	.+38     	; 0xe3e <ldexp+0x68>
 e18:	bb 27       	eor	r27, r27
 e1a:	86 95       	lsr	r24
 e1c:	77 95       	ror	r23
 e1e:	67 95       	ror	r22
 e20:	b7 95       	ror	r27
 e22:	08 f4       	brcc	.+2      	; 0xe26 <ldexp+0x50>
 e24:	b1 60       	ori	r27, 0x01	; 1
 e26:	93 95       	inc	r25
 e28:	c1 f7       	brne	.-16     	; 0xe1a <ldexp+0x44>
 e2a:	bb 0f       	add	r27, r27
 e2c:	58 f7       	brcc	.-42     	; 0xe04 <ldexp+0x2e>
 e2e:	11 f4       	brne	.+4      	; 0xe34 <ldexp+0x5e>
 e30:	60 ff       	sbrs	r22, 0
 e32:	e8 cf       	rjmp	.-48     	; 0xe04 <ldexp+0x2e>
 e34:	6f 5f       	subi	r22, 0xFF	; 255
 e36:	7f 4f       	sbci	r23, 0xFF	; 255
 e38:	8f 4f       	sbci	r24, 0xFF	; 255
 e3a:	9f 4f       	sbci	r25, 0xFF	; 255
 e3c:	e3 cf       	rjmp	.-58     	; 0xe04 <ldexp+0x2e>
 e3e:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_szero>
 e42:	16 f0       	brts	.+4      	; 0xe48 <ldexp+0x72>
 e44:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <__fp_mpack>
 e48:	0c 94 76 05 	jmp	0xaec	; 0xaec <__fp_nan>
 e4c:	68 94       	set
 e4e:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_inf>

00000e52 <log>:
 e52:	0e 94 a0 05 	call	0xb40	; 0xb40 <__fp_splitA>
 e56:	a8 f3       	brcs	.-22     	; 0xe42 <ldexp+0x6c>
 e58:	99 23       	and	r25, r25
 e5a:	c1 f3       	breq	.-16     	; 0xe4c <ldexp+0x76>
 e5c:	ae f3       	brts	.-22     	; 0xe48 <ldexp+0x72>
 e5e:	df 93       	push	r29
 e60:	cf 93       	push	r28
 e62:	1f 93       	push	r17
 e64:	0f 93       	push	r16
 e66:	ff 92       	push	r15
 e68:	c9 2f       	mov	r28, r25
 e6a:	dd 27       	eor	r29, r29
 e6c:	88 23       	and	r24, r24
 e6e:	2a f0       	brmi	.+10     	; 0xe7a <log+0x28>
 e70:	21 97       	sbiw	r28, 0x01	; 1
 e72:	66 0f       	add	r22, r22
 e74:	77 1f       	adc	r23, r23
 e76:	88 1f       	adc	r24, r24
 e78:	da f7       	brpl	.-10     	; 0xe70 <log+0x1e>
 e7a:	20 e0       	ldi	r18, 0x00	; 0
 e7c:	30 e0       	ldi	r19, 0x00	; 0
 e7e:	40 e8       	ldi	r20, 0x80	; 128
 e80:	5f eb       	ldi	r21, 0xBF	; 191
 e82:	9f e3       	ldi	r25, 0x3F	; 63
 e84:	88 39       	cpi	r24, 0x98	; 152
 e86:	20 f0       	brcs	.+8      	; 0xe90 <log+0x3e>
 e88:	80 3e       	cpi	r24, 0xE0	; 224
 e8a:	38 f0       	brcs	.+14     	; 0xe9a <log+0x48>
 e8c:	21 96       	adiw	r28, 0x01	; 1
 e8e:	8f 77       	andi	r24, 0x7F	; 127
 e90:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__addsf3>
 e94:	e0 ea       	ldi	r30, 0xA0	; 160
 e96:	f0 e0       	ldi	r31, 0x00	; 0
 e98:	04 c0       	rjmp	.+8      	; 0xea2 <log+0x50>
 e9a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__addsf3>
 e9e:	ed ec       	ldi	r30, 0xCD	; 205
 ea0:	f0 e0       	ldi	r31, 0x00	; 0
 ea2:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fp_powser>
 ea6:	8b 01       	movw	r16, r22
 ea8:	be 01       	movw	r22, r28
 eaa:	ec 01       	movw	r28, r24
 eac:	fb 2e       	mov	r15, r27
 eae:	6f 57       	subi	r22, 0x7F	; 127
 eb0:	71 09       	sbc	r23, r1
 eb2:	75 95       	asr	r23
 eb4:	77 1f       	adc	r23, r23
 eb6:	88 0b       	sbc	r24, r24
 eb8:	99 0b       	sbc	r25, r25
 eba:	0e 94 11 05 	call	0xa22	; 0xa22 <__floatsisf>
 ebe:	28 e1       	ldi	r18, 0x18	; 24
 ec0:	32 e7       	ldi	r19, 0x72	; 114
 ec2:	41 e3       	ldi	r20, 0x31	; 49
 ec4:	5f e3       	ldi	r21, 0x3F	; 63
 ec6:	0e 94 d4 05 	call	0xba8	; 0xba8 <__mulsf3x>
 eca:	af 2d       	mov	r26, r15
 ecc:	98 01       	movw	r18, r16
 ece:	ae 01       	movw	r20, r28
 ed0:	ff 90       	pop	r15
 ed2:	0f 91       	pop	r16
 ed4:	1f 91       	pop	r17
 ed6:	cf 91       	pop	r28
 ed8:	df 91       	pop	r29
 eda:	0e 94 14 04 	call	0x828	; 0x828 <__addsf3x>
 ede:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__fp_round>

00000ee2 <modf>:
 ee2:	fa 01       	movw	r30, r20
 ee4:	dc 01       	movw	r26, r24
 ee6:	aa 0f       	add	r26, r26
 ee8:	bb 1f       	adc	r27, r27
 eea:	9b 01       	movw	r18, r22
 eec:	ac 01       	movw	r20, r24
 eee:	bf 57       	subi	r27, 0x7F	; 127
 ef0:	28 f4       	brcc	.+10     	; 0xefc <modf+0x1a>
 ef2:	22 27       	eor	r18, r18
 ef4:	33 27       	eor	r19, r19
 ef6:	44 27       	eor	r20, r20
 ef8:	50 78       	andi	r21, 0x80	; 128
 efa:	20 c0       	rjmp	.+64     	; 0xf3c <modf+0x5a>
 efc:	b7 51       	subi	r27, 0x17	; 23
 efe:	90 f4       	brcc	.+36     	; 0xf24 <modf+0x42>
 f00:	ab 2f       	mov	r26, r27
 f02:	00 24       	eor	r0, r0
 f04:	46 95       	lsr	r20
 f06:	37 95       	ror	r19
 f08:	27 95       	ror	r18
 f0a:	01 1c       	adc	r0, r1
 f0c:	a3 95       	inc	r26
 f0e:	d2 f3       	brmi	.-12     	; 0xf04 <modf+0x22>
 f10:	00 20       	and	r0, r0
 f12:	71 f0       	breq	.+28     	; 0xf30 <modf+0x4e>
 f14:	22 0f       	add	r18, r18
 f16:	33 1f       	adc	r19, r19
 f18:	44 1f       	adc	r20, r20
 f1a:	b3 95       	inc	r27
 f1c:	da f3       	brmi	.-10     	; 0xf14 <modf+0x32>
 f1e:	0e d0       	rcall	.+28     	; 0xf3c <modf+0x5a>
 f20:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__subsf3>
 f24:	61 30       	cpi	r22, 0x01	; 1
 f26:	71 05       	cpc	r23, r1
 f28:	a0 e8       	ldi	r26, 0x80	; 128
 f2a:	8a 07       	cpc	r24, r26
 f2c:	b9 46       	sbci	r27, 0x69	; 105
 f2e:	30 f4       	brcc	.+12     	; 0xf3c <modf+0x5a>
 f30:	9b 01       	movw	r18, r22
 f32:	ac 01       	movw	r20, r24
 f34:	66 27       	eor	r22, r22
 f36:	77 27       	eor	r23, r23
 f38:	88 27       	eor	r24, r24
 f3a:	90 78       	andi	r25, 0x80	; 128
 f3c:	30 96       	adiw	r30, 0x00	; 0
 f3e:	21 f0       	breq	.+8      	; 0xf48 <modf+0x66>
 f40:	20 83       	st	Z, r18
 f42:	31 83       	std	Z+1, r19	; 0x01
 f44:	42 83       	std	Z+2, r20	; 0x02
 f46:	53 83       	std	Z+3, r21	; 0x03
 f48:	08 95       	ret

00000f4a <__fp_mpack>:
 f4a:	9f 3f       	cpi	r25, 0xFF	; 255
 f4c:	31 f0       	breq	.+12     	; 0xf5a <__fp_mpack_finite+0xc>

00000f4e <__fp_mpack_finite>:
 f4e:	91 50       	subi	r25, 0x01	; 1
 f50:	20 f4       	brcc	.+8      	; 0xf5a <__fp_mpack_finite+0xc>
 f52:	87 95       	ror	r24
 f54:	77 95       	ror	r23
 f56:	67 95       	ror	r22
 f58:	b7 95       	ror	r27
 f5a:	88 0f       	add	r24, r24
 f5c:	91 1d       	adc	r25, r1
 f5e:	96 95       	lsr	r25
 f60:	87 95       	ror	r24
 f62:	97 f9       	bld	r25, 7
 f64:	08 95       	ret

00000f66 <__tablejump2__>:
 f66:	ee 0f       	add	r30, r30
 f68:	ff 1f       	adc	r31, r31
 f6a:	05 90       	lpm	r0, Z+
 f6c:	f4 91       	lpm	r31, Z
 f6e:	e0 2d       	mov	r30, r0
 f70:	09 94       	ijmp

00000f72 <__adddi3_s8>:
 f72:	00 24       	eor	r0, r0
 f74:	a7 fd       	sbrc	r26, 7
 f76:	00 94       	com	r0
 f78:	2a 0f       	add	r18, r26
 f7a:	30 1d       	adc	r19, r0
 f7c:	40 1d       	adc	r20, r0
 f7e:	50 1d       	adc	r21, r0
 f80:	60 1d       	adc	r22, r0
 f82:	70 1d       	adc	r23, r0
 f84:	80 1d       	adc	r24, r0
 f86:	90 1d       	adc	r25, r0
 f88:	08 95       	ret

00000f8a <__cmpdi2_s8>:
 f8a:	00 24       	eor	r0, r0
 f8c:	a7 fd       	sbrc	r26, 7
 f8e:	00 94       	com	r0
 f90:	2a 17       	cp	r18, r26
 f92:	30 05       	cpc	r19, r0
 f94:	40 05       	cpc	r20, r0
 f96:	50 05       	cpc	r21, r0
 f98:	60 05       	cpc	r22, r0
 f9a:	70 05       	cpc	r23, r0
 f9c:	80 05       	cpc	r24, r0
 f9e:	90 05       	cpc	r25, r0
 fa0:	08 95       	ret

00000fa2 <_exit>:
 fa2:	f8 94       	cli

00000fa4 <__stop_program>:
 fa4:	ff cf       	rjmp	.-2      	; 0xfa4 <__stop_program>
