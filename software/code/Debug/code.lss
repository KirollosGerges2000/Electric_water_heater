
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f94  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00001008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800060  00800060  00001008  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001008  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001038  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001074  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ed2  00000000  00000000  00001164  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e3  00000000  00000000  00002036  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008fc  00000000  00000000  00002819  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  00003118  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a4  00000000  00000000  00003348  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ab  00000000  00000000  000038ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00003c97  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  20:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__vector_8>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	27 02       	muls	r18, r23
  56:	24 02       	muls	r18, r20
  58:	1e 02       	muls	r17, r30
  5a:	18 02       	muls	r17, r24
  5c:	12 02       	muls	r17, r18
  5e:	21 02       	muls	r18, r17
  60:	0f 02       	muls	r16, r31
  62:	15 02       	muls	r17, r21
  64:	1b 02       	muls	r17, r27
  66:	d5 02       	muls	r29, r21
  68:	cc 02       	muls	r28, r28
  6a:	ba 02       	muls	r27, r26
  6c:	a8 02       	muls	r26, r24
  6e:	96 02       	muls	r25, r22
  70:	c3 02       	muls	r28, r19
  72:	8d 02       	muls	r24, r29
  74:	9f 02       	muls	r25, r31
  76:	b1 02       	muls	r27, r17
  78:	07 63       	ori	r16, 0x37	; 55
  7a:	42 36       	cpi	r20, 0x62	; 98
  7c:	b7 9b       	sbis	0x16, 7	; 22
  7e:	d8 a7       	std	Y+40, r29	; 0x28
  80:	1a 39       	cpi	r17, 0x9A	; 154
  82:	68 56       	subi	r22, 0x68	; 104
  84:	18 ae       	std	Y+56, r1	; 0x38
  86:	ba ab       	std	Y+50, r27	; 0x32
  88:	55 8c       	ldd	r5, Z+29	; 0x1d
  8a:	1d 3c       	cpi	r17, 0xCD	; 205
  8c:	b7 cc       	rjmp	.-1682   	; 0xfffff9fc <__eeprom_end+0xff7ef9fc>
  8e:	57 63       	ori	r21, 0x37	; 55
  90:	bd 6d       	ori	r27, 0xDD	; 221
  92:	ed fd       	.word	0xfded	; ????
  94:	75 3e       	cpi	r23, 0xE5	; 229
  96:	f6 17       	cp	r31, r22
  98:	72 31       	cpi	r23, 0x12	; 18
  9a:	bf 00       	.word	0x00bf	; ????
  9c:	00 00       	nop
  9e:	80 3f       	cpi	r24, 0xF0	; 240
  a0:	08 00       	.word	0x0008	; ????
  a2:	00 00       	nop
  a4:	be 92       	st	-X, r11
  a6:	24 49       	sbci	r18, 0x94	; 148
  a8:	12 3e       	cpi	r17, 0xE2	; 226
  aa:	ab aa       	std	Y+51, r10	; 0x33
  ac:	aa 2a       	or	r10, r26
  ae:	be cd       	rjmp	.-1156   	; 0xfffffc2c <__eeprom_end+0xff7efc2c>
  b0:	cc cc       	rjmp	.-1640   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
  b2:	4c 3e       	cpi	r20, 0xEC	; 236
  b4:	00 00       	nop
  b6:	00 80       	ld	r0, Z
  b8:	be ab       	std	Y+54, r27	; 0x36
  ba:	aa aa       	std	Y+50, r10	; 0x32
  bc:	aa 3e       	cpi	r26, 0xEA	; 234
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	bf 00       	.word	0x00bf	; ????
  c4:	00 00       	nop
  c6:	80 3f       	cpi	r24, 0xF0	; 240
  c8:	00 00       	nop
  ca:	00 00       	nop
  cc:	00 08       	sbc	r0, r0
  ce:	41 78       	andi	r20, 0x81	; 129
  d0:	d3 bb       	out	0x13, r29	; 19
  d2:	43 87       	std	Z+11, r20	; 0x0b
  d4:	d1 13       	cpse	r29, r17
  d6:	3d 19       	sub	r19, r13
  d8:	0e 3c       	cpi	r16, 0xCE	; 206
  da:	c3 bd       	out	0x23, r28	; 35
  dc:	42 82       	std	Z+2, r4	; 0x02
  de:	ad 2b       	or	r26, r29
  e0:	3e 68       	ori	r19, 0x8E	; 142
  e2:	ec 82       	std	Y+4, r14	; 0x04
  e4:	76 be       	out	0x36, r7	; 54
  e6:	d9 8f       	std	Y+25, r29	; 0x19
  e8:	e1 a9       	ldd	r30, Z+49	; 0x31
  ea:	3e 4c       	sbci	r19, 0xCE	; 206
  ec:	80 ef       	ldi	r24, 0xF0	; 240
  ee:	ff be       	out	0x3f, r15	; 63
  f0:	01 c4       	rjmp	.+2050   	; 0x8f4 <__divsf3x+0x2>
  f2:	ff 7f       	andi	r31, 0xFF	; 255
  f4:	3f 00       	.word	0x003f	; ????
  f6:	00 00       	nop
	...

000000fa <__ctors_end>:
  fa:	11 24       	eor	r1, r1
  fc:	1f be       	out	0x3f, r1	; 63
  fe:	cf e5       	ldi	r28, 0x5F	; 95
 100:	d4 e0       	ldi	r29, 0x04	; 4
 102:	de bf       	out	0x3e, r29	; 62
 104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_clear_bss>:
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	a0 e6       	ldi	r26, 0x60	; 96
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	aa 37       	cpi	r26, 0x7A	; 122
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <main>
 11a:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_init>:
	// turns a BCD-encoded byte back into a standard one
	u8 Bcd_to_decimal ()
	{
		
		return( ((TWDR>>4)*10)+(TWDR &0xF));
	}
 122:	17 b8       	out	0x07, r1	; 7
 124:	83 e8       	ldi	r24, 0x83	; 131
 126:	86 b9       	out	0x06, r24	; 6
 128:	08 95       	ret

0000012a <ADC_readChannel>:
 12a:	87 70       	andi	r24, 0x07	; 7
 12c:	97 b1       	in	r25, 0x07	; 7
 12e:	90 7e       	andi	r25, 0xE0	; 224
 130:	97 b9       	out	0x07, r25	; 7
 132:	97 b1       	in	r25, 0x07	; 7
 134:	89 2b       	or	r24, r25
 136:	87 b9       	out	0x07, r24	; 7
 138:	86 b1       	in	r24, 0x06	; 6
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	86 b9       	out	0x06, r24	; 6
 13e:	34 9b       	sbis	0x06, 4	; 6
 140:	fe cf       	rjmp	.-4      	; 0x13e <ADC_readChannel+0x14>
 142:	86 b1       	in	r24, 0x06	; 6
 144:	80 61       	ori	r24, 0x10	; 16
 146:	86 b9       	out	0x06, r24	; 6
 148:	84 b1       	in	r24, 0x04	; 4
 14a:	95 b1       	in	r25, 0x05	; 5
 14c:	08 95       	ret

0000014e <INT_interrupt>:
 14e:	84 e6       	ldi	r24, 0x64	; 100
 150:	9f ef       	ldi	r25, 0xFF	; 255
 152:	9d bd       	out	0x2d, r25	; 45
 154:	8c bd       	out	0x2c, r24	; 44
 156:	1f bc       	out	0x2f, r1	; 47
 158:	85 e0       	ldi	r24, 0x05	; 5
 15a:	8e bd       	out	0x2e, r24	; 46
 15c:	84 e0       	ldi	r24, 0x04	; 4
 15e:	89 bf       	out	0x39, r24	; 57
 160:	78 94       	sei
 162:	08 95       	ret

00000164 <I2C_Init>:
 164:	11 b8       	out	0x01, r1	; 1
 166:	61 b1       	in	r22, 0x01	; 1
 168:	63 70       	andi	r22, 0x03	; 3
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 08 05 	call	0xa10	; 0xa10 <__floatsisf>
 174:	9b 01       	movw	r18, r22
 176:	ac 01       	movw	r20, r24
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	90 e4       	ldi	r25, 0x40	; 64
 180:	0e 94 25 06 	call	0xc4a	; 0xc4a <pow>
 184:	9b 01       	movw	r18, r22
 186:	ac 01       	movw	r20, r24
 188:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__addsf3>
 18c:	9b 01       	movw	r18, r22
 18e:	ac 01       	movw	r20, r24
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	9f e4       	ldi	r25, 0x4F	; 79
 198:	0e 94 65 04 	call	0x8ca	; 0x8ca <__divsf3>
 19c:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__fixunssfsi>
 1a0:	60 b9       	out	0x00, r22	; 0
 1a2:	08 95       	ret

000001a4 <I2C_Start>:
 1a4:	94 ea       	ldi	r25, 0xA4	; 164
 1a6:	96 bf       	out	0x36, r25	; 54
 1a8:	06 b6       	in	r0, 0x36	; 54
 1aa:	07 fe       	sbrs	r0, 7
 1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <I2C_Start+0x4>
 1ae:	83 b9       	out	0x03, r24	; 3
 1b0:	84 e8       	ldi	r24, 0x84	; 132
 1b2:	86 bf       	out	0x36, r24	; 54
 1b4:	06 b6       	in	r0, 0x36	; 54
 1b6:	07 fe       	sbrs	r0, 7
 1b8:	fd cf       	rjmp	.-6      	; 0x1b4 <I2C_Start+0x10>
 1ba:	08 95       	ret

000001bc <I2C_Repeated_Start>:
 1bc:	94 ea       	ldi	r25, 0xA4	; 164
 1be:	96 bf       	out	0x36, r25	; 54
 1c0:	06 b6       	in	r0, 0x36	; 54
 1c2:	07 fe       	sbrs	r0, 7
 1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <I2C_Repeated_Start+0x4>
 1c6:	83 b9       	out	0x03, r24	; 3
 1c8:	84 e8       	ldi	r24, 0x84	; 132
 1ca:	86 bf       	out	0x36, r24	; 54
 1cc:	06 b6       	in	r0, 0x36	; 54
 1ce:	07 fe       	sbrs	r0, 7
 1d0:	fd cf       	rjmp	.-6      	; 0x1cc <I2C_Repeated_Start+0x10>
 1d2:	08 95       	ret

000001d4 <I2C_Read_Nack>:
 1d4:	84 e8       	ldi	r24, 0x84	; 132
 1d6:	86 bf       	out	0x36, r24	; 54
 1d8:	06 b6       	in	r0, 0x36	; 54
 1da:	07 fe       	sbrs	r0, 7
 1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <I2C_Read_Nack+0x4>
 1de:	83 b1       	in	r24, 0x03	; 3
 1e0:	08 95       	ret

000001e2 <I2C_Stop>:
 1e2:	84 e9       	ldi	r24, 0x94	; 148
 1e4:	86 bf       	out	0x36, r24	; 54
 1e6:	86 b7       	in	r24, 0x36	; 54
 1e8:	08 95       	ret

000001ea <decimal_to_bcd>:
 1ea:	9d ec       	ldi	r25, 0xCD	; 205
 1ec:	89 9f       	mul	r24, r25
 1ee:	91 2d       	mov	r25, r1
 1f0:	11 24       	eor	r1, r1
 1f2:	96 95       	lsr	r25
 1f4:	96 95       	lsr	r25
 1f6:	96 95       	lsr	r25
 1f8:	39 2f       	mov	r19, r25
 1fa:	33 0f       	add	r19, r19
 1fc:	23 2f       	mov	r18, r19
 1fe:	22 0f       	add	r18, r18
 200:	22 0f       	add	r18, r18
 202:	23 0f       	add	r18, r19
 204:	82 1b       	sub	r24, r18
 206:	30 e1       	ldi	r19, 0x10	; 16
 208:	93 9f       	mul	r25, r19
 20a:	80 0d       	add	r24, r0
 20c:	11 24       	eor	r1, r1
 20e:	08 95       	ret

00000210 <I2C_Write>:
 210:	0e 94 f5 00 	call	0x1ea	; 0x1ea <decimal_to_bcd>
 214:	83 b9       	out	0x03, r24	; 3
 216:	84 e8       	ldi	r24, 0x84	; 132
 218:	86 bf       	out	0x36, r24	; 54
 21a:	06 b6       	in	r0, 0x36	; 54
 21c:	07 fe       	sbrs	r0, 7
 21e:	fd cf       	rjmp	.-6      	; 0x21a <I2C_Write+0xa>
 220:	08 95       	ret

00000222 <EEPROM_write_read>:
	
	u8 EEPROM_write_read(u8 stored_data)
	{
 222:	cf 93       	push	r28
 224:	c8 2f       	mov	r28, r24
		u8 data;
		I2C_Init();
 226:	0e 94 b2 00 	call	0x164	; 0x164 <I2C_Init>
		I2C_Start(0xA0);
 22a:	80 ea       	ldi	r24, 0xA0	; 160
 22c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2C_Start>
		I2C_Write(stored_data);
 230:	8c 2f       	mov	r24, r28
 232:	0e 94 08 01 	call	0x210	; 0x210 <I2C_Write>
		I2C_Repeated_Start(0xA1);
 236:	81 ea       	ldi	r24, 0xA1	; 161
 238:	0e 94 de 00 	call	0x1bc	; 0x1bc <I2C_Repeated_Start>
		data=I2C_Read_Nack ();
 23c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <I2C_Read_Nack>
 240:	c8 2f       	mov	r28, r24
		I2C_Stop();
 242:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <I2C_Stop>
		return data;
		
 246:	8c 2f       	mov	r24, r28
 248:	cf 91       	pop	r28
 24a:	08 95       	ret

0000024c <Avg_reading>:
	
	
void Avg_reading(void)
{
	  
sum=sum+x;
 24c:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 250:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 254:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 258:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 25c:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <sum>
 260:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <sum+0x1>
 264:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <sum+0x2>
 268:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <sum+0x3>
 26c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__addsf3>
 270:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <sum>
 274:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <sum+0x1>
 278:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <sum+0x2>
 27c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <sum+0x3>
	i++;
 280:	20 91 69 00 	lds	r18, 0x0069	; 0x800069 <i>
 284:	2f 5f       	subi	r18, 0xFF	; 255
 286:	20 93 69 00 	sts	0x0069, r18	; 0x800069 <i>
	if(i==9)
 28a:	29 30       	cpi	r18, 0x09	; 9
 28c:	c1 f4       	brne	.+48     	; 0x2be <Avg_reading+0x72>
	{
		 average=(sum)/9.105;  //In testing and validation ,calibration 9.1125
 28e:	24 e1       	ldi	r18, 0x14	; 20
 290:	3e ea       	ldi	r19, 0xAE	; 174
 292:	41 e1       	ldi	r20, 0x11	; 17
 294:	51 e4       	ldi	r21, 0x41	; 65
 296:	0e 94 65 04 	call	0x8ca	; 0x8ca <__divsf3>
 29a:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <average>
 29e:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <average+0x1>
 2a2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <average+0x2>
 2a6:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <average+0x3>
		i=0;
 2aa:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <i>
		sum=0;
 2ae:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <sum>
 2b2:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <sum+0x1>
 2b6:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <sum+0x2>
 2ba:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <sum+0x3>
 2be:	08 95       	ret

000002c0 <Temperature_reading>:

		
	
	void Temperature_reading(void)
	{
		volt = ADC_readChannel(0); // read channel two where the temp sensor is connect
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_readChannel>
 2c6:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <volt+0x1>
 2ca:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <volt>
			x=(float)(5*volt)/1023; // to gain the ADC of temperature reading
 2ce:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <volt>
 2d2:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <volt+0x1>
 2d6:	cb 01       	movw	r24, r22
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	68 0f       	add	r22, r24
 2e2:	79 1f       	adc	r23, r25
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 06 05 	call	0xa0c	; 0xa0c <__floatunsisf>
 2ec:	20 e0       	ldi	r18, 0x00	; 0
 2ee:	30 ec       	ldi	r19, 0xC0	; 192
 2f0:	4f e7       	ldi	r20, 0x7F	; 127
 2f2:	54 e4       	ldi	r21, 0x44	; 68
 2f4:	0e 94 65 04 	call	0x8ca	; 0x8ca <__divsf3>
 2f8:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 2fc:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 300:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 304:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
			x=x*100;   //the reading of temperature
 308:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 30c:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 310:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 314:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 318:	20 e0       	ldi	r18, 0x00	; 0
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	48 ec       	ldi	r20, 0xC8	; 200
 31e:	52 e4       	ldi	r21, 0x42	; 66
 320:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
 324:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 328:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 32c:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 330:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
			Avg_reading();  //the equations of average 10 temperature reading 
 334:	0e 94 26 01 	call	0x24c	; 0x24c <Avg_reading>
 338:	08 95       	ret

0000033a <__vector_8>:
ISR (TIMER1_OVF_vect)    // Timer1 ISR
{
 33a:	1f 92       	push	r1
 33c:	0f 92       	push	r0
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	0f 92       	push	r0
 342:	11 24       	eor	r1, r1
 344:	2f 93       	push	r18
 346:	3f 93       	push	r19
 348:	4f 93       	push	r20
 34a:	5f 93       	push	r21
 34c:	6f 93       	push	r22
 34e:	7f 93       	push	r23
 350:	8f 93       	push	r24
 352:	9f 93       	push	r25
 354:	af 93       	push	r26
 356:	bf 93       	push	r27
 358:	ef 93       	push	r30
 35a:	ff 93       	push	r31
	TCNT1 = 65380;  // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64"
 35c:	84 e6       	ldi	r24, 0x64	; 100
 35e:	9f ef       	ldi	r25, 0xFF	; 255
 360:	9d bd       	out	0x2d, r25	; 45
 362:	8c bd       	out	0x2c, r24	; 44
		Temperature_reading();  //read temperature each 100 ms 
 364:	0e 94 60 01 	call	0x2c0	; 0x2c0 <Temperature_reading>
	
		}
 368:	ff 91       	pop	r31
 36a:	ef 91       	pop	r30
 36c:	bf 91       	pop	r27
 36e:	af 91       	pop	r26
 370:	9f 91       	pop	r25
 372:	8f 91       	pop	r24
 374:	7f 91       	pop	r23
 376:	6f 91       	pop	r22
 378:	5f 91       	pop	r21
 37a:	4f 91       	pop	r20
 37c:	3f 91       	pop	r19
 37e:	2f 91       	pop	r18
 380:	0f 90       	pop	r0
 382:	0f be       	out	0x3f, r0	; 63
 384:	0f 90       	pop	r0
 386:	1f 90       	pop	r1
 388:	18 95       	reti

0000038a <setting_temp>:

void setting_temp(void)

{
	//counter=EEPROM_read();
		 if(PINB&(1<<3)&&counter<3 )
 38a:	b3 9b       	sbis	0x16, 3	; 22
 38c:	1d c0       	rjmp	.+58     	; 0x3c8 <setting_temp+0x3e>
 38e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 392:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 396:	83 30       	cpi	r24, 0x03	; 3
 398:	91 05       	cpc	r25, r1
 39a:	b4 f4       	brge	.+44     	; 0x3c8 <setting_temp+0x3e>
			 	{
				 	counter++;
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 3a2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
					 counter_for_Timer=0;
 3a6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3aa:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3ae:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3b2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3b6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 3ba:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 3be:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 3c2:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 3c6:	1f c0       	rjmp	.+62     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
			 	}
			 	else if(PINB&(1<<2)&&counter>-5)
 3c8:	b2 9b       	sbis	0x16, 2	; 22
 3ca:	1d c0       	rjmp	.+58     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 3cc:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 3d0:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 3d4:	8c 3f       	cpi	r24, 0xFC	; 252
 3d6:	2f ef       	ldi	r18, 0xFF	; 255
 3d8:	92 07       	cpc	r25, r18
 3da:	ac f0       	brlt	.+42     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
			 	{
				 	counter--;
 3dc:	01 97       	sbiw	r24, 0x01	; 1
 3de:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 3e2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
					  counter_for_Timer=0;
 3e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3ea:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3ee:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3f2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3f6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 3fa:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 3fe:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 402:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
			 	}
		
		 switch(counter)
 406:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 40a:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 40e:	35 96       	adiw	r30, 0x05	; 5
 410:	e9 30       	cpi	r30, 0x09	; 9
 412:	f1 05       	cpc	r31, r1
 414:	f0 f4       	brcc	.+60     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 416:	e6 5d       	subi	r30, 0xD6	; 214
 418:	ff 4f       	sbci	r31, 0xFF	; 255
 41a:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__tablejump2__>
		{
			case 1:
			PORTD=0x65;
 41e:	85 e6       	ldi	r24, 0x65	; 101
 420:	82 bb       	out	0x12, r24	; 18
			break;
 422:	17 c0       	rjmp	.+46     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -1:
			PORTD=0x55;
 424:	85 e5       	ldi	r24, 0x55	; 85
 426:	82 bb       	out	0x12, r24	; 18
			break;
 428:	14 c0       	rjmp	.+40     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case 2:
			PORTD=0x70;
 42a:	80 e7       	ldi	r24, 0x70	; 112
 42c:	82 bb       	out	0x12, r24	; 18
			break;
 42e:	11 c0       	rjmp	.+34     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -2:
			PORTD=0x50;
 430:	80 e5       	ldi	r24, 0x50	; 80
 432:	82 bb       	out	0x12, r24	; 18
			break;
 434:	0e c0       	rjmp	.+28     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case 3:
			PORTD=0x75;
 436:	85 e7       	ldi	r24, 0x75	; 117
 438:	82 bb       	out	0x12, r24	; 18
			 break;
 43a:	0b c0       	rjmp	.+22     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -3:
			PORTD=0x45;
 43c:	85 e4       	ldi	r24, 0x45	; 69
 43e:	82 bb       	out	0x12, r24	; 18
			break;
 440:	08 c0       	rjmp	.+16     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case 0:
		    PORTD=0x60;
 442:	80 e6       	ldi	r24, 0x60	; 96
 444:	82 bb       	out	0x12, r24	; 18
			break;
 446:	05 c0       	rjmp	.+10     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -4:
			PORTD=0x40;
 448:	80 e4       	ldi	r24, 0x40	; 64
 44a:	82 bb       	out	0x12, r24	; 18
			break;
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -5:
			PORTD=0x35;
 44e:	85 e3       	ldi	r24, 0x35	; 53
 450:	82 bb       	out	0x12, r24	; 18
			break;
		}
		
		EEPROM_write_read(counter);   // store value of counter.
 452:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 456:	0e 94 11 01 	call	0x222	; 0x222 <EEPROM_write_read>
 45a:	08 95       	ret

0000045c <ACTIVATION>:
	}
	
}
		
		void ACTIVATION(uint16 value,u8 max, u8 min)
		{
 45c:	cf 92       	push	r12
 45e:	df 92       	push	r13
 460:	ef 92       	push	r14
 462:	ff 92       	push	r15
 464:	cf 93       	push	r28
			if(counter == value)
 466:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <counter>
 46a:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <counter+0x1>
 46e:	28 17       	cp	r18, r24
 470:	39 07       	cpc	r19, r25
 472:	09 f0       	breq	.+2      	; 0x476 <__stack+0x17>
 474:	3f c0       	rjmp	.+126    	; 0x4f4 <__stack+0x95>
 476:	c4 2f       	mov	r28, r20
			{
				if(average>=max)
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 08 05 	call	0xa10	; 0xa10 <__floatsisf>
 482:	c0 90 6c 00 	lds	r12, 0x006C	; 0x80006c <average>
 486:	d0 90 6d 00 	lds	r13, 0x006D	; 0x80006d <average+0x1>
 48a:	e0 90 6e 00 	lds	r14, 0x006E	; 0x80006e <average+0x2>
 48e:	f0 90 6f 00 	lds	r15, 0x006F	; 0x80006f <average+0x3>
 492:	a7 01       	movw	r20, r14
 494:	96 01       	movw	r18, r12
 496:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__cmpsf2>
 49a:	18 16       	cp	r1, r24
 49c:	54 f0       	brlt	.+20     	; 0x4b2 <__stack+0x53>
				{
					OUTPUT_MODULE_ON(PORTB,5);  //cooling element activate
 49e:	88 b3       	in	r24, 0x18	; 24
 4a0:	80 62       	ori	r24, 0x20	; 32
 4a2:	88 bb       	out	0x18, r24	; 24
					OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 4a4:	88 b3       	in	r24, 0x18	; 24
 4a6:	8f 7b       	andi	r24, 0xBF	; 191
 4a8:	88 bb       	out	0x18, r24	; 24
						OUTPUT_MODULE_ON(PORTB,4); //LED
 4aa:	88 b3       	in	r24, 0x18	; 24
 4ac:	80 61       	ori	r24, 0x10	; 16
 4ae:	88 bb       	out	0x18, r24	; 24
 4b0:	21 c0       	rjmp	.+66     	; 0x4f4 <__stack+0x95>
				}
				else if(average<=min)
 4b2:	6c 2f       	mov	r22, r28
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	80 e0       	ldi	r24, 0x00	; 0
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 94 08 05 	call	0xa10	; 0xa10 <__floatsisf>
 4be:	9b 01       	movw	r18, r22
 4c0:	ac 01       	movw	r20, r24
 4c2:	c7 01       	movw	r24, r14
 4c4:	b6 01       	movw	r22, r12
 4c6:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__cmpsf2>
 4ca:	18 16       	cp	r1, r24
 4cc:	9c f0       	brlt	.+38     	; 0x4f4 <__stack+0x95>
				{
					OUTPUT_MODULE_OFF(PORTB,5);  //cooling element disactivate
 4ce:	88 b3       	in	r24, 0x18	; 24
 4d0:	8f 7d       	andi	r24, 0xDF	; 223
 4d2:	88 bb       	out	0x18, r24	; 24
					OUTPUT_MODULE_ON(PORTB,6);  //Heating element activate
 4d4:	88 b3       	in	r24, 0x18	; 24
 4d6:	80 64       	ori	r24, 0x40	; 64
 4d8:	88 bb       	out	0x18, r24	; 24
					TOGGLe_BIT(PORTB,4);
 4da:	98 b3       	in	r25, 0x18	; 24
 4dc:	80 e1       	ldi	r24, 0x10	; 16
 4de:	89 27       	eor	r24, r25
 4e0:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4e2:	2f ed       	ldi	r18, 0xDF	; 223
 4e4:	82 e2       	ldi	r24, 0x22	; 34
 4e6:	92 e0       	ldi	r25, 0x02	; 2
 4e8:	21 50       	subi	r18, 0x01	; 1
 4ea:	80 40       	sbci	r24, 0x00	; 0
 4ec:	90 40       	sbci	r25, 0x00	; 0
 4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__stack+0x89>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <__stack+0x93>
 4f2:	00 00       	nop
					
					
				}
		}
	
	}
 4f4:	cf 91       	pop	r28
 4f6:	ff 90       	pop	r15
 4f8:	ef 90       	pop	r14
 4fa:	df 90       	pop	r13
 4fc:	cf 90       	pop	r12
 4fe:	08 95       	ret

00000500 <ELEMENTS>:

void ELEMENTS (void)
{

	{
		switch(counter)
 500:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 504:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 508:	35 96       	adiw	r30, 0x05	; 5
 50a:	e9 30       	cpi	r30, 0x09	; 9
 50c:	f1 05       	cpc	r31, r1
 50e:	08 f0       	brcs	.+2      	; 0x512 <ELEMENTS+0x12>
 510:	54 c0       	rjmp	.+168    	; 0x5ba <ELEMENTS+0xba>
 512:	ed 5c       	subi	r30, 0xCD	; 205
 514:	ff 4f       	sbci	r31, 0xFF	; 255
 516:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__tablejump2__>
	{
		case 1:
		ACTIVATION(1,70,60);
 51a:	4c e3       	ldi	r20, 0x3C	; 60
 51c:	50 e0       	ldi	r21, 0x00	; 0
 51e:	66 e4       	ldi	r22, 0x46	; 70
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 52a:	08 95       	ret
		case -1:
		ACTIVATION(-1,60,50);
 52c:	42 e3       	ldi	r20, 0x32	; 50
 52e:	50 e0       	ldi	r21, 0x00	; 0
 530:	6c e3       	ldi	r22, 0x3C	; 60
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	8f ef       	ldi	r24, 0xFF	; 255
 536:	9f ef       	ldi	r25, 0xFF	; 255
 538:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 53c:	08 95       	ret
		case 2:
		ACTIVATION(2,75,65);
 53e:	41 e4       	ldi	r20, 0x41	; 65
 540:	50 e0       	ldi	r21, 0x00	; 0
 542:	6b e4       	ldi	r22, 0x4B	; 75
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	82 e0       	ldi	r24, 0x02	; 2
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 54e:	08 95       	ret
		case -2:
		ACTIVATION(-2,55,45);
 550:	4d e2       	ldi	r20, 0x2D	; 45
 552:	50 e0       	ldi	r21, 0x00	; 0
 554:	67 e3       	ldi	r22, 0x37	; 55
 556:	70 e0       	ldi	r23, 0x00	; 0
 558:	8e ef       	ldi	r24, 0xFE	; 254
 55a:	9f ef       	ldi	r25, 0xFF	; 255
 55c:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 560:	08 95       	ret
		case 3:
		ACTIVATION(3,80,70);
 562:	46 e4       	ldi	r20, 0x46	; 70
 564:	50 e0       	ldi	r21, 0x00	; 0
 566:	60 e5       	ldi	r22, 0x50	; 80
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	83 e0       	ldi	r24, 0x03	; 3
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 572:	08 95       	ret
		case -3:
		ACTIVATION(-3,50,40);
 574:	48 e2       	ldi	r20, 0x28	; 40
 576:	50 e0       	ldi	r21, 0x00	; 0
 578:	62 e3       	ldi	r22, 0x32	; 50
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	8d ef       	ldi	r24, 0xFD	; 253
 57e:	9f ef       	ldi	r25, 0xFF	; 255
 580:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 584:	08 95       	ret
		case 0:
		ACTIVATION(0,65,55);
 586:	47 e3       	ldi	r20, 0x37	; 55
 588:	50 e0       	ldi	r21, 0x00	; 0
 58a:	61 e4       	ldi	r22, 0x41	; 65
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 596:	08 95       	ret
		case -4:
		ACTIVATION(-4,45,35);
 598:	43 e2       	ldi	r20, 0x23	; 35
 59a:	50 e0       	ldi	r21, 0x00	; 0
 59c:	6d e2       	ldi	r22, 0x2D	; 45
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	8c ef       	ldi	r24, 0xFC	; 252
 5a2:	9f ef       	ldi	r25, 0xFF	; 255
 5a4:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
		break;
 5a8:	08 95       	ret
		case -5:
		ACTIVATION(-5,40,30);
 5aa:	4e e1       	ldi	r20, 0x1E	; 30
 5ac:	50 e0       	ldi	r21, 0x00	; 0
 5ae:	68 e2       	ldi	r22, 0x28	; 40
 5b0:	70 e0       	ldi	r23, 0x00	; 0
 5b2:	8b ef       	ldi	r24, 0xFB	; 251
 5b4:	9f ef       	ldi	r25, 0xFF	; 255
 5b6:	0e 94 2e 02 	call	0x45c	; 0x45c <ACTIVATION>
 5ba:	08 95       	ret

000005bc <on_off_7_segment>:
		 
		
	}
	void on_off_7_segment(u8 Mode)
	{
		if(Mode==1)
 5bc:	81 30       	cpi	r24, 0x01	; 1
 5be:	39 f4       	brne	.+14     	; 0x5ce <on_off_7_segment+0x12>
		{
			  OUTPUT_MODULE_OFF(PORTB,0);
 5c0:	88 b3       	in	r24, 0x18	; 24
 5c2:	8e 7f       	andi	r24, 0xFE	; 254
 5c4:	88 bb       	out	0x18, r24	; 24
			  OUTPUT_MODULE_OFF(PORTA,7);
 5c6:	8b b3       	in	r24, 0x1b	; 27
 5c8:	8f 77       	andi	r24, 0x7F	; 127
 5ca:	8b bb       	out	0x1b, r24	; 27
 5cc:	08 95       	ret
		}
		else if(Mode==0)
 5ce:	81 11       	cpse	r24, r1
 5d0:	06 c0       	rjmp	.+12     	; 0x5de <on_off_7_segment+0x22>
		{
	  OUTPUT_MODULE_ON(PORTB,0);
 5d2:	88 b3       	in	r24, 0x18	; 24
 5d4:	81 60       	ori	r24, 0x01	; 1
 5d6:	88 bb       	out	0x18, r24	; 24
	  OUTPUT_MODULE_ON(PORTA,7);
 5d8:	8b b3       	in	r24, 0x1b	; 27
 5da:	80 68       	ori	r24, 0x80	; 128
 5dc:	8b bb       	out	0x1b, r24	; 27
 5de:	08 95       	ret

000005e0 <current_water_temperature>:
	}
	
	
	void current_water_temperature(void)
	{
		on_off_7_segment(1);
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 de 02 	call	0x5bc	; 0x5bc <on_off_7_segment>
		PORTD=decimal_to_bcd(x);
 5e8:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 5ec:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 5f0:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 5f4:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 5f8:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__fixunssfsi>
 5fc:	86 2f       	mov	r24, r22
 5fe:	0e 94 f5 00 	call	0x1ea	; 0x1ea <decimal_to_bcd>
 602:	82 bb       	out	0x12, r24	; 18
 604:	08 95       	ret

00000606 <OFF_MODE>:


void OFF_MODE(void)
{

	OUTPUT_MODULE_OFF(PORTB,5);  //cooling element activate
 606:	88 b3       	in	r24, 0x18	; 24
 608:	8f 7d       	andi	r24, 0xDF	; 223
 60a:	88 bb       	out	0x18, r24	; 24
	OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 60c:	88 b3       	in	r24, 0x18	; 24
 60e:	8f 7b       	andi	r24, 0xBF	; 191
 610:	88 bb       	out	0x18, r24	; 24
	OUTPUT_MODULE_OFF(PORTB,4); //LED
 612:	88 b3       	in	r24, 0x18	; 24
 614:	8f 7e       	andi	r24, 0xEF	; 239
 616:	88 bb       	out	0x18, r24	; 24
	on_off_7_segment(0);
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	0e 94 de 02 	call	0x5bc	; 0x5bc <on_off_7_segment>
 61e:	08 95       	ret

00000620 <on_off_mode>:
	}
	
	void on_off_mode(void)
	{
		
		if(INPUT_BIT(PINB,1) && flag==0)
 620:	b1 9b       	sbis	0x16, 1	; 22
 622:	0a c0       	rjmp	.+20     	; 0x638 <on_off_mode+0x18>
 624:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 628:	81 11       	cpse	r24, r1
 62a:	06 c0       	rjmp	.+12     	; 0x638 <on_off_mode+0x18>
		{
			
			ON_MODE:
			flag=1;
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <flag>
			while(INPUT_BIT(PINB,1));
 632:	b1 99       	sbic	0x16, 1	; 22
 634:	fe cf       	rjmp	.-4      	; 0x632 <on_off_mode+0x12>
 636:	08 95       	ret
			}
		else if(INPUT_BIT(PINB,1) && flag==1)
 638:	b1 9b       	sbis	0x16, 1	; 22
 63a:	0a c0       	rjmp	.+20     	; 0x650 <on_off_mode+0x30>
 63c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 640:	81 30       	cpi	r24, 0x01	; 1
 642:	31 f4       	brne	.+12     	; 0x650 <on_off_mode+0x30>
		{
			while(INPUT_BIT(PINB,1));
 644:	b1 99       	sbic	0x16, 1	; 22
 646:	fe cf       	rjmp	.-4      	; 0x644 <on_off_mode+0x24>
			OFF_MODE:
			flag=0;
 648:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <flag>
			OFF_MODE();
 64c:	0e 94 03 03 	call	0x606	; 0x606 <OFF_MODE>
 650:	08 95       	ret

00000652 <ON_MODE_Process>:
		
	}
	
void ON_MODE_Process (void)
{
	 while(flag==1)
 652:	8d c0       	rjmp	.+282    	; 0x76e <ON_MODE_Process+0x11c>
	 {
		 
		 current_water_temperature();
 654:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <current_water_temperature>
		 ELEMENTS();
 658:	0e 94 80 02 	call	0x500	; 0x500 <ELEMENTS>
		on_off_mode();
 65c:	0e 94 10 03 	call	0x620	; 0x620 <on_off_mode>
		 if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
 660:	b3 99       	sbic	0x16, 3	; 22
 662:	5b c0       	rjmp	.+182    	; 0x71a <ON_MODE_Process+0xc8>
 664:	b2 99       	sbic	0x16, 2	; 22
 666:	59 c0       	rjmp	.+178    	; 0x71a <ON_MODE_Process+0xc8>
 668:	82 c0       	rjmp	.+260    	; 0x76e <ON_MODE_Process+0x11c>
		 {
			
			 while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
			 {
				 on_off_7_segment(1);
 66a:	81 e0       	ldi	r24, 0x01	; 1
 66c:	0e 94 de 02 	call	0x5bc	; 0x5bc <on_off_7_segment>
				 setting_temp();
 670:	0e 94 c5 01 	call	0x38a	; 0x38a <setting_temp>
				 ELEMENTS();
 674:	0e 94 80 02 	call	0x500	; 0x500 <ELEMENTS>
				 on_off_mode();
 678:	0e 94 10 03 	call	0x620	; 0x620 <on_off_mode>
				 counter_for_Timer++;
 67c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 680:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 684:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 688:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 68c:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 690:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 694:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 698:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 69c:	a1 e0       	ldi	r26, 0x01	; 1
 69e:	0e 94 b0 07 	call	0xf60	; 0xf60 <__adddi3_s8>
 6a2:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 6a6:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6aa:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 6ae:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 6b2:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 6b6:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 6ba:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 6be:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
				 on_off_7_segment(0);
 6c2:	80 e0       	ldi	r24, 0x00	; 0
 6c4:	0e 94 de 02 	call	0x5bc	; 0x5bc <on_off_7_segment>
				 setting_temp();
 6c8:	0e 94 c5 01 	call	0x38a	; 0x38a <setting_temp>
				 ELEMENTS();
 6cc:	0e 94 80 02 	call	0x500	; 0x500 <ELEMENTS>
				 on_off_mode();
 6d0:	0e 94 10 03 	call	0x620	; 0x620 <on_off_mode>
				 counter_for_Timer++;
 6d4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 6d8:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6dc:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 6e0:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 6e4:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 6e8:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 6ec:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 6f0:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 6f4:	a1 e0       	ldi	r26, 0x01	; 1
 6f6:	0e 94 b0 07 	call	0xf60	; 0xf60 <__adddi3_s8>
 6fa:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 6fe:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 702:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 706:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 70a:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 70e:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 712:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 716:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		 ELEMENTS();
		on_off_mode();
		 if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
		 {
			
			 while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
 71a:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 71e:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 722:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 726:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 72a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 72e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 732:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 736:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 73a:	a9 e0       	ldi	r26, 0x09	; 9
 73c:	0e 94 bc 07 	call	0xf78	; 0xf78 <__cmpdi2_s8>
 740:	09 f0       	breq	.+2      	; 0x744 <ON_MODE_Process+0xf2>
 742:	2c f4       	brge	.+10     	; 0x74e <ON_MODE_Process+0xfc>
 744:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 748:	81 30       	cpi	r24, 0x01	; 1
 74a:	09 f4       	brne	.+2      	; 0x74e <ON_MODE_Process+0xfc>
 74c:	8e cf       	rjmp	.-228    	; 0x66a <ON_MODE_Process+0x18>
				 counter_for_Timer++;
				 
				 
				 
			 }
			  counter_for_Timer=0;
 74e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 752:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 756:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 75a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 75e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 762:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 766:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 76a:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		
	}
	
void ON_MODE_Process (void)
{
	 while(flag==1)
 76e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 772:	81 30       	cpi	r24, 0x01	; 1
 774:	09 f4       	brne	.+2      	; 0x778 <ON_MODE_Process+0x126>
 776:	6e cf       	rjmp	.-292    	; 0x654 <ON_MODE_Process+0x2>
				 
			 }
			  counter_for_Timer=0;
		 }
	 }
}
 778:	08 95       	ret

0000077a <ELECTRIC_WATER_HEATER>:
s64 counter_for_Timer=0;

	 /*the main process*/
 void  ELECTRIC_WATER_HEATER(void)
	{	 	
		INT_interrupt();  /* initialize internally interrupt Timer1*/
 77a:	0e 94 a7 00 	call	0x14e	; 0x14e <INT_interrupt>
		ADC_init(); /* initialize ADC driver */
 77e:	0e 94 91 00 	call	0x122	; 0x122 <ADC_init>
		DDRD=0xFF;
 782:	8f ef       	ldi	r24, 0xFF	; 255
 784:	81 bb       	out	0x11, r24	; 17
		OUTPUT_MODULE(DDRB,0); //set Enable of first 7 segment as output
 786:	87 b3       	in	r24, 0x17	; 23
 788:	81 60       	ori	r24, 0x01	; 1
 78a:	87 bb       	out	0x17, r24	; 23
		OUTPUT_MODULE(DDRA,7); //set Enable of second 7 segment as output  
 78c:	8a b3       	in	r24, 0x1a	; 26
 78e:	80 68       	ori	r24, 0x80	; 128
 790:	8a bb       	out	0x1a, r24	; 26
		OUTPUT_MODULE(DDRB,5); //set cooling fan as output 
 792:	87 b3       	in	r24, 0x17	; 23
 794:	80 62       	ori	r24, 0x20	; 32
 796:	87 bb       	out	0x17, r24	; 23
		OUTPUT_MODULE(DDRB,6); //set Heater as output 
 798:	87 b3       	in	r24, 0x17	; 23
 79a:	80 64       	ori	r24, 0x40	; 64
 79c:	87 bb       	out	0x17, r24	; 23
		OUTPUT_MODULE(DDRB,4); //set Heater LED as output
 79e:	87 b3       	in	r24, 0x17	; 23
 7a0:	80 61       	ori	r24, 0x10	; 16
 7a2:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,3); //set increment temperature button to be input
 7a4:	87 b3       	in	r24, 0x17	; 23
 7a6:	87 7f       	andi	r24, 0xF7	; 247
 7a8:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,2); //set decrement temperature button to be input
 7aa:	87 b3       	in	r24, 0x17	; 23
 7ac:	8b 7f       	andi	r24, 0xFB	; 251
 7ae:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,1); //set OFF/ON button to be input
 7b0:	87 b3       	in	r24, 0x17	; 23
 7b2:	8d 7f       	andi	r24, 0xFD	; 253
 7b4:	87 bb       	out	0x17, r24	; 23
		  /* deceleration, initialize 7_segments by 60*/
		PORTD=0x60;
 7b6:	80 e6       	ldi	r24, 0x60	; 96
 7b8:	82 bb       	out	0x12, r24	; 18
		/* initialization cooling fan,heater ,heater LED to be off */	
		OUTPUT_MODULE_OFF(PORTB,4);
 7ba:	88 b3       	in	r24, 0x18	; 24
 7bc:	8f 7e       	andi	r24, 0xEF	; 239
 7be:	88 bb       	out	0x18, r24	; 24
	OUTPUT_MODULE_OFF(PORTB,5);
 7c0:	88 b3       	in	r24, 0x18	; 24
 7c2:	8f 7d       	andi	r24, 0xDF	; 223
 7c4:	88 bb       	out	0x18, r24	; 24
    OUTPUT_MODULE_OFF(PORTB,6);
 7c6:	88 b3       	in	r24, 0x18	; 24
 7c8:	8f 7b       	andi	r24, 0xBF	; 191
 7ca:	88 bb       	out	0x18, r24	; 24
	// initialization Enables of 7 segments to be off as active low 
		OUTPUT_MODULE_ON(PORTB,0);
 7cc:	88 b3       	in	r24, 0x18	; 24
 7ce:	81 60       	ori	r24, 0x01	; 1
 7d0:	88 bb       	out	0x18, r24	; 24
		OUTPUT_MODULE_ON(PORTA,7);
 7d2:	8b b3       	in	r24, 0x1b	; 27
 7d4:	80 68       	ori	r24, 0x80	; 128
 7d6:	8b bb       	out	0x1b, r24	; 27
	
		//super loop for repeating this code infinitely
		while(1)  
		{
			
			 on_off_mode();
 7d8:	0e 94 10 03 	call	0x620	; 0x620 <on_off_mode>
		ON_MODE_Process();
 7dc:	0e 94 29 03 	call	0x652	; 0x652 <ON_MODE_Process>
 7e0:	fb cf       	rjmp	.-10     	; 0x7d8 <ELECTRIC_WATER_HEATER+0x5e>

000007e2 <main>:
 * Author : Kirollos Gerges Asaad
 */ 
#include "Electric water heater.c"
void main(void)
{
   ELECTRIC_WATER_HEATER();
 7e2:	0e 94 bd 03 	call	0x77a	; 0x77a <ELECTRIC_WATER_HEATER>

000007e6 <__subsf3>:
 7e6:	50 58       	subi	r21, 0x80	; 128

000007e8 <__addsf3>:
 7e8:	bb 27       	eor	r27, r27
 7ea:	aa 27       	eor	r26, r26
 7ec:	0e 94 0b 04 	call	0x816	; 0x816 <__addsf3x>
 7f0:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>
 7f4:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscA>
 7f8:	38 f0       	brcs	.+14     	; 0x808 <__addsf3+0x20>
 7fa:	0e 94 77 05 	call	0xaee	; 0xaee <__fp_pscB>
 7fe:	20 f0       	brcs	.+8      	; 0x808 <__addsf3+0x20>
 800:	39 f4       	brne	.+14     	; 0x810 <__addsf3+0x28>
 802:	9f 3f       	cpi	r25, 0xFF	; 255
 804:	19 f4       	brne	.+6      	; 0x80c <__addsf3+0x24>
 806:	26 f4       	brtc	.+8      	; 0x810 <__addsf3+0x28>
 808:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>
 80c:	0e f4       	brtc	.+2      	; 0x810 <__addsf3+0x28>
 80e:	e0 95       	com	r30
 810:	e7 fb       	bst	r30, 7
 812:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>

00000816 <__addsf3x>:
 816:	e9 2f       	mov	r30, r25
 818:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
 81c:	58 f3       	brcs	.-42     	; 0x7f4 <__addsf3+0xc>
 81e:	ba 17       	cp	r27, r26
 820:	62 07       	cpc	r22, r18
 822:	73 07       	cpc	r23, r19
 824:	84 07       	cpc	r24, r20
 826:	95 07       	cpc	r25, r21
 828:	20 f0       	brcs	.+8      	; 0x832 <__addsf3x+0x1c>
 82a:	79 f4       	brne	.+30     	; 0x84a <__addsf3x+0x34>
 82c:	a6 f5       	brtc	.+104    	; 0x896 <__addsf3x+0x80>
 82e:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_zero>
 832:	0e f4       	brtc	.+2      	; 0x836 <__addsf3x+0x20>
 834:	e0 95       	com	r30
 836:	0b 2e       	mov	r0, r27
 838:	ba 2f       	mov	r27, r26
 83a:	a0 2d       	mov	r26, r0
 83c:	0b 01       	movw	r0, r22
 83e:	b9 01       	movw	r22, r18
 840:	90 01       	movw	r18, r0
 842:	0c 01       	movw	r0, r24
 844:	ca 01       	movw	r24, r20
 846:	a0 01       	movw	r20, r0
 848:	11 24       	eor	r1, r1
 84a:	ff 27       	eor	r31, r31
 84c:	59 1b       	sub	r21, r25
 84e:	99 f0       	breq	.+38     	; 0x876 <__addsf3x+0x60>
 850:	59 3f       	cpi	r21, 0xF9	; 249
 852:	50 f4       	brcc	.+20     	; 0x868 <__addsf3x+0x52>
 854:	50 3e       	cpi	r21, 0xE0	; 224
 856:	68 f1       	brcs	.+90     	; 0x8b2 <__addsf3x+0x9c>
 858:	1a 16       	cp	r1, r26
 85a:	f0 40       	sbci	r31, 0x00	; 0
 85c:	a2 2f       	mov	r26, r18
 85e:	23 2f       	mov	r18, r19
 860:	34 2f       	mov	r19, r20
 862:	44 27       	eor	r20, r20
 864:	58 5f       	subi	r21, 0xF8	; 248
 866:	f3 cf       	rjmp	.-26     	; 0x84e <__addsf3x+0x38>
 868:	46 95       	lsr	r20
 86a:	37 95       	ror	r19
 86c:	27 95       	ror	r18
 86e:	a7 95       	ror	r26
 870:	f0 40       	sbci	r31, 0x00	; 0
 872:	53 95       	inc	r21
 874:	c9 f7       	brne	.-14     	; 0x868 <__addsf3x+0x52>
 876:	7e f4       	brtc	.+30     	; 0x896 <__addsf3x+0x80>
 878:	1f 16       	cp	r1, r31
 87a:	ba 0b       	sbc	r27, r26
 87c:	62 0b       	sbc	r22, r18
 87e:	73 0b       	sbc	r23, r19
 880:	84 0b       	sbc	r24, r20
 882:	ba f0       	brmi	.+46     	; 0x8b2 <__addsf3x+0x9c>
 884:	91 50       	subi	r25, 0x01	; 1
 886:	a1 f0       	breq	.+40     	; 0x8b0 <__addsf3x+0x9a>
 888:	ff 0f       	add	r31, r31
 88a:	bb 1f       	adc	r27, r27
 88c:	66 1f       	adc	r22, r22
 88e:	77 1f       	adc	r23, r23
 890:	88 1f       	adc	r24, r24
 892:	c2 f7       	brpl	.-16     	; 0x884 <__addsf3x+0x6e>
 894:	0e c0       	rjmp	.+28     	; 0x8b2 <__addsf3x+0x9c>
 896:	ba 0f       	add	r27, r26
 898:	62 1f       	adc	r22, r18
 89a:	73 1f       	adc	r23, r19
 89c:	84 1f       	adc	r24, r20
 89e:	48 f4       	brcc	.+18     	; 0x8b2 <__addsf3x+0x9c>
 8a0:	87 95       	ror	r24
 8a2:	77 95       	ror	r23
 8a4:	67 95       	ror	r22
 8a6:	b7 95       	ror	r27
 8a8:	f7 95       	ror	r31
 8aa:	9e 3f       	cpi	r25, 0xFE	; 254
 8ac:	08 f0       	brcs	.+2      	; 0x8b0 <__addsf3x+0x9a>
 8ae:	b0 cf       	rjmp	.-160    	; 0x810 <__addsf3+0x28>
 8b0:	93 95       	inc	r25
 8b2:	88 0f       	add	r24, r24
 8b4:	08 f0       	brcs	.+2      	; 0x8b8 <__addsf3x+0xa2>
 8b6:	99 27       	eor	r25, r25
 8b8:	ee 0f       	add	r30, r30
 8ba:	97 95       	ror	r25
 8bc:	87 95       	ror	r24
 8be:	08 95       	ret

000008c0 <__cmpsf2>:
 8c0:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_cmp>
 8c4:	08 f4       	brcc	.+2      	; 0x8c8 <__cmpsf2+0x8>
 8c6:	81 e0       	ldi	r24, 0x01	; 1
 8c8:	08 95       	ret

000008ca <__divsf3>:
 8ca:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__divsf3x>
 8ce:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>
 8d2:	0e 94 77 05 	call	0xaee	; 0xaee <__fp_pscB>
 8d6:	58 f0       	brcs	.+22     	; 0x8ee <__divsf3+0x24>
 8d8:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscA>
 8dc:	40 f0       	brcs	.+16     	; 0x8ee <__divsf3+0x24>
 8de:	29 f4       	brne	.+10     	; 0x8ea <__divsf3+0x20>
 8e0:	5f 3f       	cpi	r21, 0xFF	; 255
 8e2:	29 f0       	breq	.+10     	; 0x8ee <__divsf3+0x24>
 8e4:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 8e8:	51 11       	cpse	r21, r1
 8ea:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 8ee:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>

000008f2 <__divsf3x>:
 8f2:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
 8f6:	68 f3       	brcs	.-38     	; 0x8d2 <__divsf3+0x8>

000008f8 <__divsf3_pse>:
 8f8:	99 23       	and	r25, r25
 8fa:	b1 f3       	breq	.-20     	; 0x8e8 <__divsf3+0x1e>
 8fc:	55 23       	and	r21, r21
 8fe:	91 f3       	breq	.-28     	; 0x8e4 <__divsf3+0x1a>
 900:	95 1b       	sub	r25, r21
 902:	55 0b       	sbc	r21, r21
 904:	bb 27       	eor	r27, r27
 906:	aa 27       	eor	r26, r26
 908:	62 17       	cp	r22, r18
 90a:	73 07       	cpc	r23, r19
 90c:	84 07       	cpc	r24, r20
 90e:	38 f0       	brcs	.+14     	; 0x91e <__divsf3_pse+0x26>
 910:	9f 5f       	subi	r25, 0xFF	; 255
 912:	5f 4f       	sbci	r21, 0xFF	; 255
 914:	22 0f       	add	r18, r18
 916:	33 1f       	adc	r19, r19
 918:	44 1f       	adc	r20, r20
 91a:	aa 1f       	adc	r26, r26
 91c:	a9 f3       	breq	.-22     	; 0x908 <__divsf3_pse+0x10>
 91e:	35 d0       	rcall	.+106    	; 0x98a <__divsf3_pse+0x92>
 920:	0e 2e       	mov	r0, r30
 922:	3a f0       	brmi	.+14     	; 0x932 <__divsf3_pse+0x3a>
 924:	e0 e8       	ldi	r30, 0x80	; 128
 926:	32 d0       	rcall	.+100    	; 0x98c <__divsf3_pse+0x94>
 928:	91 50       	subi	r25, 0x01	; 1
 92a:	50 40       	sbci	r21, 0x00	; 0
 92c:	e6 95       	lsr	r30
 92e:	00 1c       	adc	r0, r0
 930:	ca f7       	brpl	.-14     	; 0x924 <__divsf3_pse+0x2c>
 932:	2b d0       	rcall	.+86     	; 0x98a <__divsf3_pse+0x92>
 934:	fe 2f       	mov	r31, r30
 936:	29 d0       	rcall	.+82     	; 0x98a <__divsf3_pse+0x92>
 938:	66 0f       	add	r22, r22
 93a:	77 1f       	adc	r23, r23
 93c:	88 1f       	adc	r24, r24
 93e:	bb 1f       	adc	r27, r27
 940:	26 17       	cp	r18, r22
 942:	37 07       	cpc	r19, r23
 944:	48 07       	cpc	r20, r24
 946:	ab 07       	cpc	r26, r27
 948:	b0 e8       	ldi	r27, 0x80	; 128
 94a:	09 f0       	breq	.+2      	; 0x94e <__divsf3_pse+0x56>
 94c:	bb 0b       	sbc	r27, r27
 94e:	80 2d       	mov	r24, r0
 950:	bf 01       	movw	r22, r30
 952:	ff 27       	eor	r31, r31
 954:	93 58       	subi	r25, 0x83	; 131
 956:	5f 4f       	sbci	r21, 0xFF	; 255
 958:	3a f0       	brmi	.+14     	; 0x968 <__divsf3_pse+0x70>
 95a:	9e 3f       	cpi	r25, 0xFE	; 254
 95c:	51 05       	cpc	r21, r1
 95e:	78 f0       	brcs	.+30     	; 0x97e <__divsf3_pse+0x86>
 960:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 964:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 968:	5f 3f       	cpi	r21, 0xFF	; 255
 96a:	e4 f3       	brlt	.-8      	; 0x964 <__divsf3_pse+0x6c>
 96c:	98 3e       	cpi	r25, 0xE8	; 232
 96e:	d4 f3       	brlt	.-12     	; 0x964 <__divsf3_pse+0x6c>
 970:	86 95       	lsr	r24
 972:	77 95       	ror	r23
 974:	67 95       	ror	r22
 976:	b7 95       	ror	r27
 978:	f7 95       	ror	r31
 97a:	9f 5f       	subi	r25, 0xFF	; 255
 97c:	c9 f7       	brne	.-14     	; 0x970 <__divsf3_pse+0x78>
 97e:	88 0f       	add	r24, r24
 980:	91 1d       	adc	r25, r1
 982:	96 95       	lsr	r25
 984:	87 95       	ror	r24
 986:	97 f9       	bld	r25, 7
 988:	08 95       	ret
 98a:	e1 e0       	ldi	r30, 0x01	; 1
 98c:	66 0f       	add	r22, r22
 98e:	77 1f       	adc	r23, r23
 990:	88 1f       	adc	r24, r24
 992:	bb 1f       	adc	r27, r27
 994:	62 17       	cp	r22, r18
 996:	73 07       	cpc	r23, r19
 998:	84 07       	cpc	r24, r20
 99a:	ba 07       	cpc	r27, r26
 99c:	20 f0       	brcs	.+8      	; 0x9a6 <__divsf3_pse+0xae>
 99e:	62 1b       	sub	r22, r18
 9a0:	73 0b       	sbc	r23, r19
 9a2:	84 0b       	sbc	r24, r20
 9a4:	ba 0b       	sbc	r27, r26
 9a6:	ee 1f       	adc	r30, r30
 9a8:	88 f7       	brcc	.-30     	; 0x98c <__divsf3_pse+0x94>
 9aa:	e0 95       	com	r30
 9ac:	08 95       	ret

000009ae <__fixunssfsi>:
 9ae:	0e 94 97 05 	call	0xb2e	; 0xb2e <__fp_splitA>
 9b2:	88 f0       	brcs	.+34     	; 0x9d6 <__fixunssfsi+0x28>
 9b4:	9f 57       	subi	r25, 0x7F	; 127
 9b6:	98 f0       	brcs	.+38     	; 0x9de <__fixunssfsi+0x30>
 9b8:	b9 2f       	mov	r27, r25
 9ba:	99 27       	eor	r25, r25
 9bc:	b7 51       	subi	r27, 0x17	; 23
 9be:	b0 f0       	brcs	.+44     	; 0x9ec <__fixunssfsi+0x3e>
 9c0:	e1 f0       	breq	.+56     	; 0x9fa <__fixunssfsi+0x4c>
 9c2:	66 0f       	add	r22, r22
 9c4:	77 1f       	adc	r23, r23
 9c6:	88 1f       	adc	r24, r24
 9c8:	99 1f       	adc	r25, r25
 9ca:	1a f0       	brmi	.+6      	; 0x9d2 <__fixunssfsi+0x24>
 9cc:	ba 95       	dec	r27
 9ce:	c9 f7       	brne	.-14     	; 0x9c2 <__fixunssfsi+0x14>
 9d0:	14 c0       	rjmp	.+40     	; 0x9fa <__fixunssfsi+0x4c>
 9d2:	b1 30       	cpi	r27, 0x01	; 1
 9d4:	91 f0       	breq	.+36     	; 0x9fa <__fixunssfsi+0x4c>
 9d6:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_zero>
 9da:	b1 e0       	ldi	r27, 0x01	; 1
 9dc:	08 95       	ret
 9de:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_zero>
 9e2:	67 2f       	mov	r22, r23
 9e4:	78 2f       	mov	r23, r24
 9e6:	88 27       	eor	r24, r24
 9e8:	b8 5f       	subi	r27, 0xF8	; 248
 9ea:	39 f0       	breq	.+14     	; 0x9fa <__fixunssfsi+0x4c>
 9ec:	b9 3f       	cpi	r27, 0xF9	; 249
 9ee:	cc f3       	brlt	.-14     	; 0x9e2 <__fixunssfsi+0x34>
 9f0:	86 95       	lsr	r24
 9f2:	77 95       	ror	r23
 9f4:	67 95       	ror	r22
 9f6:	b3 95       	inc	r27
 9f8:	d9 f7       	brne	.-10     	; 0x9f0 <__fixunssfsi+0x42>
 9fa:	3e f4       	brtc	.+14     	; 0xa0a <__fixunssfsi+0x5c>
 9fc:	90 95       	com	r25
 9fe:	80 95       	com	r24
 a00:	70 95       	com	r23
 a02:	61 95       	neg	r22
 a04:	7f 4f       	sbci	r23, 0xFF	; 255
 a06:	8f 4f       	sbci	r24, 0xFF	; 255
 a08:	9f 4f       	sbci	r25, 0xFF	; 255
 a0a:	08 95       	ret

00000a0c <__floatunsisf>:
 a0c:	e8 94       	clt
 a0e:	09 c0       	rjmp	.+18     	; 0xa22 <__floatsisf+0x12>

00000a10 <__floatsisf>:
 a10:	97 fb       	bst	r25, 7
 a12:	3e f4       	brtc	.+14     	; 0xa22 <__floatsisf+0x12>
 a14:	90 95       	com	r25
 a16:	80 95       	com	r24
 a18:	70 95       	com	r23
 a1a:	61 95       	neg	r22
 a1c:	7f 4f       	sbci	r23, 0xFF	; 255
 a1e:	8f 4f       	sbci	r24, 0xFF	; 255
 a20:	9f 4f       	sbci	r25, 0xFF	; 255
 a22:	99 23       	and	r25, r25
 a24:	a9 f0       	breq	.+42     	; 0xa50 <__floatsisf+0x40>
 a26:	f9 2f       	mov	r31, r25
 a28:	96 e9       	ldi	r25, 0x96	; 150
 a2a:	bb 27       	eor	r27, r27
 a2c:	93 95       	inc	r25
 a2e:	f6 95       	lsr	r31
 a30:	87 95       	ror	r24
 a32:	77 95       	ror	r23
 a34:	67 95       	ror	r22
 a36:	b7 95       	ror	r27
 a38:	f1 11       	cpse	r31, r1
 a3a:	f8 cf       	rjmp	.-16     	; 0xa2c <__floatsisf+0x1c>
 a3c:	fa f4       	brpl	.+62     	; 0xa7c <__floatsisf+0x6c>
 a3e:	bb 0f       	add	r27, r27
 a40:	11 f4       	brne	.+4      	; 0xa46 <__floatsisf+0x36>
 a42:	60 ff       	sbrs	r22, 0
 a44:	1b c0       	rjmp	.+54     	; 0xa7c <__floatsisf+0x6c>
 a46:	6f 5f       	subi	r22, 0xFF	; 255
 a48:	7f 4f       	sbci	r23, 0xFF	; 255
 a4a:	8f 4f       	sbci	r24, 0xFF	; 255
 a4c:	9f 4f       	sbci	r25, 0xFF	; 255
 a4e:	16 c0       	rjmp	.+44     	; 0xa7c <__floatsisf+0x6c>
 a50:	88 23       	and	r24, r24
 a52:	11 f0       	breq	.+4      	; 0xa58 <__floatsisf+0x48>
 a54:	96 e9       	ldi	r25, 0x96	; 150
 a56:	11 c0       	rjmp	.+34     	; 0xa7a <__floatsisf+0x6a>
 a58:	77 23       	and	r23, r23
 a5a:	21 f0       	breq	.+8      	; 0xa64 <__floatsisf+0x54>
 a5c:	9e e8       	ldi	r25, 0x8E	; 142
 a5e:	87 2f       	mov	r24, r23
 a60:	76 2f       	mov	r23, r22
 a62:	05 c0       	rjmp	.+10     	; 0xa6e <__floatsisf+0x5e>
 a64:	66 23       	and	r22, r22
 a66:	71 f0       	breq	.+28     	; 0xa84 <__floatsisf+0x74>
 a68:	96 e8       	ldi	r25, 0x86	; 134
 a6a:	86 2f       	mov	r24, r22
 a6c:	70 e0       	ldi	r23, 0x00	; 0
 a6e:	60 e0       	ldi	r22, 0x00	; 0
 a70:	2a f0       	brmi	.+10     	; 0xa7c <__floatsisf+0x6c>
 a72:	9a 95       	dec	r25
 a74:	66 0f       	add	r22, r22
 a76:	77 1f       	adc	r23, r23
 a78:	88 1f       	adc	r24, r24
 a7a:	da f7       	brpl	.-10     	; 0xa72 <__floatsisf+0x62>
 a7c:	88 0f       	add	r24, r24
 a7e:	96 95       	lsr	r25
 a80:	87 95       	ror	r24
 a82:	97 f9       	bld	r25, 7
 a84:	08 95       	ret

00000a86 <__fp_cmp>:
 a86:	99 0f       	add	r25, r25
 a88:	00 08       	sbc	r0, r0
 a8a:	55 0f       	add	r21, r21
 a8c:	aa 0b       	sbc	r26, r26
 a8e:	e0 e8       	ldi	r30, 0x80	; 128
 a90:	fe ef       	ldi	r31, 0xFE	; 254
 a92:	16 16       	cp	r1, r22
 a94:	17 06       	cpc	r1, r23
 a96:	e8 07       	cpc	r30, r24
 a98:	f9 07       	cpc	r31, r25
 a9a:	c0 f0       	brcs	.+48     	; 0xacc <__fp_cmp+0x46>
 a9c:	12 16       	cp	r1, r18
 a9e:	13 06       	cpc	r1, r19
 aa0:	e4 07       	cpc	r30, r20
 aa2:	f5 07       	cpc	r31, r21
 aa4:	98 f0       	brcs	.+38     	; 0xacc <__fp_cmp+0x46>
 aa6:	62 1b       	sub	r22, r18
 aa8:	73 0b       	sbc	r23, r19
 aaa:	84 0b       	sbc	r24, r20
 aac:	95 0b       	sbc	r25, r21
 aae:	39 f4       	brne	.+14     	; 0xabe <__fp_cmp+0x38>
 ab0:	0a 26       	eor	r0, r26
 ab2:	61 f0       	breq	.+24     	; 0xacc <__fp_cmp+0x46>
 ab4:	23 2b       	or	r18, r19
 ab6:	24 2b       	or	r18, r20
 ab8:	25 2b       	or	r18, r21
 aba:	21 f4       	brne	.+8      	; 0xac4 <__fp_cmp+0x3e>
 abc:	08 95       	ret
 abe:	0a 26       	eor	r0, r26
 ac0:	09 f4       	brne	.+2      	; 0xac4 <__fp_cmp+0x3e>
 ac2:	a1 40       	sbci	r26, 0x01	; 1
 ac4:	a6 95       	lsr	r26
 ac6:	8f ef       	ldi	r24, 0xFF	; 255
 ac8:	81 1d       	adc	r24, r1
 aca:	81 1d       	adc	r24, r1
 acc:	08 95       	ret

00000ace <__fp_inf>:
 ace:	97 f9       	bld	r25, 7
 ad0:	9f 67       	ori	r25, 0x7F	; 127
 ad2:	80 e8       	ldi	r24, 0x80	; 128
 ad4:	70 e0       	ldi	r23, 0x00	; 0
 ad6:	60 e0       	ldi	r22, 0x00	; 0
 ad8:	08 95       	ret

00000ada <__fp_nan>:
 ada:	9f ef       	ldi	r25, 0xFF	; 255
 adc:	80 ec       	ldi	r24, 0xC0	; 192
 ade:	08 95       	ret

00000ae0 <__fp_pscA>:
 ae0:	00 24       	eor	r0, r0
 ae2:	0a 94       	dec	r0
 ae4:	16 16       	cp	r1, r22
 ae6:	17 06       	cpc	r1, r23
 ae8:	18 06       	cpc	r1, r24
 aea:	09 06       	cpc	r0, r25
 aec:	08 95       	ret

00000aee <__fp_pscB>:
 aee:	00 24       	eor	r0, r0
 af0:	0a 94       	dec	r0
 af2:	12 16       	cp	r1, r18
 af4:	13 06       	cpc	r1, r19
 af6:	14 06       	cpc	r1, r20
 af8:	05 06       	cpc	r0, r21
 afa:	08 95       	ret

00000afc <__fp_round>:
 afc:	09 2e       	mov	r0, r25
 afe:	03 94       	inc	r0
 b00:	00 0c       	add	r0, r0
 b02:	11 f4       	brne	.+4      	; 0xb08 <__fp_round+0xc>
 b04:	88 23       	and	r24, r24
 b06:	52 f0       	brmi	.+20     	; 0xb1c <__fp_round+0x20>
 b08:	bb 0f       	add	r27, r27
 b0a:	40 f4       	brcc	.+16     	; 0xb1c <__fp_round+0x20>
 b0c:	bf 2b       	or	r27, r31
 b0e:	11 f4       	brne	.+4      	; 0xb14 <__fp_round+0x18>
 b10:	60 ff       	sbrs	r22, 0
 b12:	04 c0       	rjmp	.+8      	; 0xb1c <__fp_round+0x20>
 b14:	6f 5f       	subi	r22, 0xFF	; 255
 b16:	7f 4f       	sbci	r23, 0xFF	; 255
 b18:	8f 4f       	sbci	r24, 0xFF	; 255
 b1a:	9f 4f       	sbci	r25, 0xFF	; 255
 b1c:	08 95       	ret

00000b1e <__fp_split3>:
 b1e:	57 fd       	sbrc	r21, 7
 b20:	90 58       	subi	r25, 0x80	; 128
 b22:	44 0f       	add	r20, r20
 b24:	55 1f       	adc	r21, r21
 b26:	59 f0       	breq	.+22     	; 0xb3e <__fp_splitA+0x10>
 b28:	5f 3f       	cpi	r21, 0xFF	; 255
 b2a:	71 f0       	breq	.+28     	; 0xb48 <__fp_splitA+0x1a>
 b2c:	47 95       	ror	r20

00000b2e <__fp_splitA>:
 b2e:	88 0f       	add	r24, r24
 b30:	97 fb       	bst	r25, 7
 b32:	99 1f       	adc	r25, r25
 b34:	61 f0       	breq	.+24     	; 0xb4e <__fp_splitA+0x20>
 b36:	9f 3f       	cpi	r25, 0xFF	; 255
 b38:	79 f0       	breq	.+30     	; 0xb58 <__fp_splitA+0x2a>
 b3a:	87 95       	ror	r24
 b3c:	08 95       	ret
 b3e:	12 16       	cp	r1, r18
 b40:	13 06       	cpc	r1, r19
 b42:	14 06       	cpc	r1, r20
 b44:	55 1f       	adc	r21, r21
 b46:	f2 cf       	rjmp	.-28     	; 0xb2c <__fp_split3+0xe>
 b48:	46 95       	lsr	r20
 b4a:	f1 df       	rcall	.-30     	; 0xb2e <__fp_splitA>
 b4c:	08 c0       	rjmp	.+16     	; 0xb5e <__fp_splitA+0x30>
 b4e:	16 16       	cp	r1, r22
 b50:	17 06       	cpc	r1, r23
 b52:	18 06       	cpc	r1, r24
 b54:	99 1f       	adc	r25, r25
 b56:	f1 cf       	rjmp	.-30     	; 0xb3a <__fp_splitA+0xc>
 b58:	86 95       	lsr	r24
 b5a:	71 05       	cpc	r23, r1
 b5c:	61 05       	cpc	r22, r1
 b5e:	08 94       	sec
 b60:	08 95       	ret

00000b62 <__fp_zero>:
 b62:	e8 94       	clt

00000b64 <__fp_szero>:
 b64:	bb 27       	eor	r27, r27
 b66:	66 27       	eor	r22, r22
 b68:	77 27       	eor	r23, r23
 b6a:	cb 01       	movw	r24, r22
 b6c:	97 f9       	bld	r25, 7
 b6e:	08 95       	ret

00000b70 <__mulsf3>:
 b70:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3x>
 b74:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>
 b78:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscA>
 b7c:	38 f0       	brcs	.+14     	; 0xb8c <__mulsf3+0x1c>
 b7e:	0e 94 77 05 	call	0xaee	; 0xaee <__fp_pscB>
 b82:	20 f0       	brcs	.+8      	; 0xb8c <__mulsf3+0x1c>
 b84:	95 23       	and	r25, r21
 b86:	11 f0       	breq	.+4      	; 0xb8c <__mulsf3+0x1c>
 b88:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 b8c:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>
 b90:	11 24       	eor	r1, r1
 b92:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>

00000b96 <__mulsf3x>:
 b96:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
 b9a:	70 f3       	brcs	.-36     	; 0xb78 <__mulsf3+0x8>

00000b9c <__mulsf3_pse>:
 b9c:	95 9f       	mul	r25, r21
 b9e:	c1 f3       	breq	.-16     	; 0xb90 <__mulsf3+0x20>
 ba0:	95 0f       	add	r25, r21
 ba2:	50 e0       	ldi	r21, 0x00	; 0
 ba4:	55 1f       	adc	r21, r21
 ba6:	62 9f       	mul	r22, r18
 ba8:	f0 01       	movw	r30, r0
 baa:	72 9f       	mul	r23, r18
 bac:	bb 27       	eor	r27, r27
 bae:	f0 0d       	add	r31, r0
 bb0:	b1 1d       	adc	r27, r1
 bb2:	63 9f       	mul	r22, r19
 bb4:	aa 27       	eor	r26, r26
 bb6:	f0 0d       	add	r31, r0
 bb8:	b1 1d       	adc	r27, r1
 bba:	aa 1f       	adc	r26, r26
 bbc:	64 9f       	mul	r22, r20
 bbe:	66 27       	eor	r22, r22
 bc0:	b0 0d       	add	r27, r0
 bc2:	a1 1d       	adc	r26, r1
 bc4:	66 1f       	adc	r22, r22
 bc6:	82 9f       	mul	r24, r18
 bc8:	22 27       	eor	r18, r18
 bca:	b0 0d       	add	r27, r0
 bcc:	a1 1d       	adc	r26, r1
 bce:	62 1f       	adc	r22, r18
 bd0:	73 9f       	mul	r23, r19
 bd2:	b0 0d       	add	r27, r0
 bd4:	a1 1d       	adc	r26, r1
 bd6:	62 1f       	adc	r22, r18
 bd8:	83 9f       	mul	r24, r19
 bda:	a0 0d       	add	r26, r0
 bdc:	61 1d       	adc	r22, r1
 bde:	22 1f       	adc	r18, r18
 be0:	74 9f       	mul	r23, r20
 be2:	33 27       	eor	r19, r19
 be4:	a0 0d       	add	r26, r0
 be6:	61 1d       	adc	r22, r1
 be8:	23 1f       	adc	r18, r19
 bea:	84 9f       	mul	r24, r20
 bec:	60 0d       	add	r22, r0
 bee:	21 1d       	adc	r18, r1
 bf0:	82 2f       	mov	r24, r18
 bf2:	76 2f       	mov	r23, r22
 bf4:	6a 2f       	mov	r22, r26
 bf6:	11 24       	eor	r1, r1
 bf8:	9f 57       	subi	r25, 0x7F	; 127
 bfa:	50 40       	sbci	r21, 0x00	; 0
 bfc:	9a f0       	brmi	.+38     	; 0xc24 <__mulsf3_pse+0x88>
 bfe:	f1 f0       	breq	.+60     	; 0xc3c <__mulsf3_pse+0xa0>
 c00:	88 23       	and	r24, r24
 c02:	4a f0       	brmi	.+18     	; 0xc16 <__mulsf3_pse+0x7a>
 c04:	ee 0f       	add	r30, r30
 c06:	ff 1f       	adc	r31, r31
 c08:	bb 1f       	adc	r27, r27
 c0a:	66 1f       	adc	r22, r22
 c0c:	77 1f       	adc	r23, r23
 c0e:	88 1f       	adc	r24, r24
 c10:	91 50       	subi	r25, 0x01	; 1
 c12:	50 40       	sbci	r21, 0x00	; 0
 c14:	a9 f7       	brne	.-22     	; 0xc00 <__mulsf3_pse+0x64>
 c16:	9e 3f       	cpi	r25, 0xFE	; 254
 c18:	51 05       	cpc	r21, r1
 c1a:	80 f0       	brcs	.+32     	; 0xc3c <__mulsf3_pse+0xa0>
 c1c:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 c20:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 c24:	5f 3f       	cpi	r21, 0xFF	; 255
 c26:	e4 f3       	brlt	.-8      	; 0xc20 <__mulsf3_pse+0x84>
 c28:	98 3e       	cpi	r25, 0xE8	; 232
 c2a:	d4 f3       	brlt	.-12     	; 0xc20 <__mulsf3_pse+0x84>
 c2c:	86 95       	lsr	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	b7 95       	ror	r27
 c34:	f7 95       	ror	r31
 c36:	e7 95       	ror	r30
 c38:	9f 5f       	subi	r25, 0xFF	; 255
 c3a:	c1 f7       	brne	.-16     	; 0xc2c <__mulsf3_pse+0x90>
 c3c:	fe 2b       	or	r31, r30
 c3e:	88 0f       	add	r24, r24
 c40:	91 1d       	adc	r25, r1
 c42:	96 95       	lsr	r25
 c44:	87 95       	ror	r24
 c46:	97 f9       	bld	r25, 7
 c48:	08 95       	ret

00000c4a <pow>:
 c4a:	fa 01       	movw	r30, r20
 c4c:	ee 0f       	add	r30, r30
 c4e:	ff 1f       	adc	r31, r31
 c50:	30 96       	adiw	r30, 0x00	; 0
 c52:	21 05       	cpc	r18, r1
 c54:	31 05       	cpc	r19, r1
 c56:	a1 f1       	breq	.+104    	; 0xcc0 <pow+0x76>
 c58:	61 15       	cp	r22, r1
 c5a:	71 05       	cpc	r23, r1
 c5c:	61 f4       	brne	.+24     	; 0xc76 <pow+0x2c>
 c5e:	80 38       	cpi	r24, 0x80	; 128
 c60:	bf e3       	ldi	r27, 0x3F	; 63
 c62:	9b 07       	cpc	r25, r27
 c64:	49 f1       	breq	.+82     	; 0xcb8 <pow+0x6e>
 c66:	68 94       	set
 c68:	90 38       	cpi	r25, 0x80	; 128
 c6a:	81 05       	cpc	r24, r1
 c6c:	61 f0       	breq	.+24     	; 0xc86 <pow+0x3c>
 c6e:	80 38       	cpi	r24, 0x80	; 128
 c70:	bf ef       	ldi	r27, 0xFF	; 255
 c72:	9b 07       	cpc	r25, r27
 c74:	41 f0       	breq	.+16     	; 0xc86 <pow+0x3c>
 c76:	99 23       	and	r25, r25
 c78:	4a f5       	brpl	.+82     	; 0xccc <pow+0x82>
 c7a:	ff 3f       	cpi	r31, 0xFF	; 255
 c7c:	e1 05       	cpc	r30, r1
 c7e:	31 05       	cpc	r19, r1
 c80:	21 05       	cpc	r18, r1
 c82:	19 f1       	breq	.+70     	; 0xcca <pow+0x80>
 c84:	e8 94       	clt
 c86:	08 94       	sec
 c88:	e7 95       	ror	r30
 c8a:	d9 01       	movw	r26, r18
 c8c:	aa 23       	and	r26, r26
 c8e:	29 f4       	brne	.+10     	; 0xc9a <pow+0x50>
 c90:	ab 2f       	mov	r26, r27
 c92:	be 2f       	mov	r27, r30
 c94:	f8 5f       	subi	r31, 0xF8	; 248
 c96:	d0 f3       	brcs	.-12     	; 0xc8c <pow+0x42>
 c98:	10 c0       	rjmp	.+32     	; 0xcba <pow+0x70>
 c9a:	ff 5f       	subi	r31, 0xFF	; 255
 c9c:	70 f4       	brcc	.+28     	; 0xcba <pow+0x70>
 c9e:	a6 95       	lsr	r26
 ca0:	e0 f7       	brcc	.-8      	; 0xc9a <pow+0x50>
 ca2:	f7 39       	cpi	r31, 0x97	; 151
 ca4:	50 f0       	brcs	.+20     	; 0xcba <pow+0x70>
 ca6:	19 f0       	breq	.+6      	; 0xcae <pow+0x64>
 ca8:	ff 3a       	cpi	r31, 0xAF	; 175
 caa:	38 f4       	brcc	.+14     	; 0xcba <pow+0x70>
 cac:	9f 77       	andi	r25, 0x7F	; 127
 cae:	9f 93       	push	r25
 cb0:	0d d0       	rcall	.+26     	; 0xccc <pow+0x82>
 cb2:	0f 90       	pop	r0
 cb4:	07 fc       	sbrc	r0, 7
 cb6:	90 58       	subi	r25, 0x80	; 128
 cb8:	08 95       	ret
 cba:	46 f0       	brts	.+16     	; 0xccc <pow+0x82>
 cbc:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>
 cc0:	60 e0       	ldi	r22, 0x00	; 0
 cc2:	70 e0       	ldi	r23, 0x00	; 0
 cc4:	80 e8       	ldi	r24, 0x80	; 128
 cc6:	9f e3       	ldi	r25, 0x3F	; 63
 cc8:	08 95       	ret
 cca:	4f e7       	ldi	r20, 0x7F	; 127
 ccc:	9f 77       	andi	r25, 0x7F	; 127
 cce:	5f 93       	push	r21
 cd0:	4f 93       	push	r20
 cd2:	3f 93       	push	r19
 cd4:	2f 93       	push	r18
 cd6:	0e 94 20 07 	call	0xe40	; 0xe40 <log>
 cda:	2f 91       	pop	r18
 cdc:	3f 91       	pop	r19
 cde:	4f 91       	pop	r20
 ce0:	5f 91       	pop	r21
 ce2:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
 ce6:	0c 94 7d 06 	jmp	0xcfa	; 0xcfa <exp>
 cea:	29 f4       	brne	.+10     	; 0xcf6 <pow+0xac>
 cec:	16 f0       	brts	.+4      	; 0xcf2 <pow+0xa8>
 cee:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 cf2:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_zero>
 cf6:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>

00000cfa <exp>:
 cfa:	0e 94 97 05 	call	0xb2e	; 0xb2e <__fp_splitA>
 cfe:	a8 f3       	brcs	.-22     	; 0xcea <pow+0xa0>
 d00:	96 38       	cpi	r25, 0x86	; 134
 d02:	a0 f7       	brcc	.-24     	; 0xcec <pow+0xa2>
 d04:	07 f8       	bld	r0, 7
 d06:	0f 92       	push	r0
 d08:	e8 94       	clt
 d0a:	2b e3       	ldi	r18, 0x3B	; 59
 d0c:	3a ea       	ldi	r19, 0xAA	; 170
 d0e:	48 eb       	ldi	r20, 0xB8	; 184
 d10:	5f e7       	ldi	r21, 0x7F	; 127
 d12:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__mulsf3_pse>
 d16:	0f 92       	push	r0
 d18:	0f 92       	push	r0
 d1a:	0f 92       	push	r0
 d1c:	4d b7       	in	r20, 0x3d	; 61
 d1e:	5e b7       	in	r21, 0x3e	; 62
 d20:	0f 92       	push	r0
 d22:	0e 94 68 07 	call	0xed0	; 0xed0 <modf>
 d26:	e8 e7       	ldi	r30, 0x78	; 120
 d28:	f0 e0       	ldi	r31, 0x00	; 0
 d2a:	0e 94 af 06 	call	0xd5e	; 0xd5e <__fp_powser>
 d2e:	4f 91       	pop	r20
 d30:	5f 91       	pop	r21
 d32:	ef 91       	pop	r30
 d34:	ff 91       	pop	r31
 d36:	e5 95       	asr	r30
 d38:	ee 1f       	adc	r30, r30
 d3a:	ff 1f       	adc	r31, r31
 d3c:	49 f0       	breq	.+18     	; 0xd50 <exp+0x56>
 d3e:	fe 57       	subi	r31, 0x7E	; 126
 d40:	e0 68       	ori	r30, 0x80	; 128
 d42:	44 27       	eor	r20, r20
 d44:	ee 0f       	add	r30, r30
 d46:	44 1f       	adc	r20, r20
 d48:	fa 95       	dec	r31
 d4a:	e1 f7       	brne	.-8      	; 0xd44 <exp+0x4a>
 d4c:	41 95       	neg	r20
 d4e:	55 0b       	sbc	r21, r21
 d50:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <ldexp>
 d54:	0f 90       	pop	r0
 d56:	07 fe       	sbrs	r0, 7
 d58:	0c 94 d6 06 	jmp	0xdac	; 0xdac <inverse>
 d5c:	08 95       	ret

00000d5e <__fp_powser>:
 d5e:	df 93       	push	r29
 d60:	cf 93       	push	r28
 d62:	1f 93       	push	r17
 d64:	0f 93       	push	r16
 d66:	ff 92       	push	r15
 d68:	ef 92       	push	r14
 d6a:	df 92       	push	r13
 d6c:	7b 01       	movw	r14, r22
 d6e:	8c 01       	movw	r16, r24
 d70:	68 94       	set
 d72:	06 c0       	rjmp	.+12     	; 0xd80 <__fp_powser+0x22>
 d74:	da 2e       	mov	r13, r26
 d76:	ef 01       	movw	r28, r30
 d78:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3x>
 d7c:	fe 01       	movw	r30, r28
 d7e:	e8 94       	clt
 d80:	a5 91       	lpm	r26, Z+
 d82:	25 91       	lpm	r18, Z+
 d84:	35 91       	lpm	r19, Z+
 d86:	45 91       	lpm	r20, Z+
 d88:	55 91       	lpm	r21, Z+
 d8a:	a6 f3       	brts	.-24     	; 0xd74 <__fp_powser+0x16>
 d8c:	ef 01       	movw	r28, r30
 d8e:	0e 94 0b 04 	call	0x816	; 0x816 <__addsf3x>
 d92:	fe 01       	movw	r30, r28
 d94:	97 01       	movw	r18, r14
 d96:	a8 01       	movw	r20, r16
 d98:	da 94       	dec	r13
 d9a:	69 f7       	brne	.-38     	; 0xd76 <__fp_powser+0x18>
 d9c:	df 90       	pop	r13
 d9e:	ef 90       	pop	r14
 da0:	ff 90       	pop	r15
 da2:	0f 91       	pop	r16
 da4:	1f 91       	pop	r17
 da6:	cf 91       	pop	r28
 da8:	df 91       	pop	r29
 daa:	08 95       	ret

00000dac <inverse>:
 dac:	9b 01       	movw	r18, r22
 dae:	ac 01       	movw	r20, r24
 db0:	60 e0       	ldi	r22, 0x00	; 0
 db2:	70 e0       	ldi	r23, 0x00	; 0
 db4:	80 e8       	ldi	r24, 0x80	; 128
 db6:	9f e3       	ldi	r25, 0x3F	; 63
 db8:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__divsf3>
 dbc:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 dc0:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__fp_mpack>

00000dc4 <ldexp>:
 dc4:	0e 94 97 05 	call	0xb2e	; 0xb2e <__fp_splitA>
 dc8:	d8 f3       	brcs	.-10     	; 0xdc0 <inverse+0x14>
 dca:	99 23       	and	r25, r25
 dcc:	c9 f3       	breq	.-14     	; 0xdc0 <inverse+0x14>
 dce:	94 0f       	add	r25, r20
 dd0:	51 1d       	adc	r21, r1
 dd2:	a3 f3       	brvs	.-24     	; 0xdbc <inverse+0x10>
 dd4:	91 50       	subi	r25, 0x01	; 1
 dd6:	50 40       	sbci	r21, 0x00	; 0
 dd8:	94 f0       	brlt	.+36     	; 0xdfe <ldexp+0x3a>
 dda:	59 f0       	breq	.+22     	; 0xdf2 <ldexp+0x2e>
 ddc:	88 23       	and	r24, r24
 dde:	32 f0       	brmi	.+12     	; 0xdec <ldexp+0x28>
 de0:	66 0f       	add	r22, r22
 de2:	77 1f       	adc	r23, r23
 de4:	88 1f       	adc	r24, r24
 de6:	91 50       	subi	r25, 0x01	; 1
 de8:	50 40       	sbci	r21, 0x00	; 0
 dea:	c1 f7       	brne	.-16     	; 0xddc <ldexp+0x18>
 dec:	9e 3f       	cpi	r25, 0xFE	; 254
 dee:	51 05       	cpc	r21, r1
 df0:	2c f7       	brge	.-54     	; 0xdbc <inverse+0x10>
 df2:	88 0f       	add	r24, r24
 df4:	91 1d       	adc	r25, r1
 df6:	96 95       	lsr	r25
 df8:	87 95       	ror	r24
 dfa:	97 f9       	bld	r25, 7
 dfc:	08 95       	ret
 dfe:	5f 3f       	cpi	r21, 0xFF	; 255
 e00:	ac f0       	brlt	.+42     	; 0xe2c <ldexp+0x68>
 e02:	98 3e       	cpi	r25, 0xE8	; 232
 e04:	9c f0       	brlt	.+38     	; 0xe2c <ldexp+0x68>
 e06:	bb 27       	eor	r27, r27
 e08:	86 95       	lsr	r24
 e0a:	77 95       	ror	r23
 e0c:	67 95       	ror	r22
 e0e:	b7 95       	ror	r27
 e10:	08 f4       	brcc	.+2      	; 0xe14 <ldexp+0x50>
 e12:	b1 60       	ori	r27, 0x01	; 1
 e14:	93 95       	inc	r25
 e16:	c1 f7       	brne	.-16     	; 0xe08 <ldexp+0x44>
 e18:	bb 0f       	add	r27, r27
 e1a:	58 f7       	brcc	.-42     	; 0xdf2 <ldexp+0x2e>
 e1c:	11 f4       	brne	.+4      	; 0xe22 <ldexp+0x5e>
 e1e:	60 ff       	sbrs	r22, 0
 e20:	e8 cf       	rjmp	.-48     	; 0xdf2 <ldexp+0x2e>
 e22:	6f 5f       	subi	r22, 0xFF	; 255
 e24:	7f 4f       	sbci	r23, 0xFF	; 255
 e26:	8f 4f       	sbci	r24, 0xFF	; 255
 e28:	9f 4f       	sbci	r25, 0xFF	; 255
 e2a:	e3 cf       	rjmp	.-58     	; 0xdf2 <ldexp+0x2e>
 e2c:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 e30:	16 f0       	brts	.+4      	; 0xe36 <ldexp+0x72>
 e32:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__fp_mpack>
 e36:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>
 e3a:	68 94       	set
 e3c:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>

00000e40 <log>:
 e40:	0e 94 97 05 	call	0xb2e	; 0xb2e <__fp_splitA>
 e44:	a8 f3       	brcs	.-22     	; 0xe30 <ldexp+0x6c>
 e46:	99 23       	and	r25, r25
 e48:	c1 f3       	breq	.-16     	; 0xe3a <ldexp+0x76>
 e4a:	ae f3       	brts	.-22     	; 0xe36 <ldexp+0x72>
 e4c:	df 93       	push	r29
 e4e:	cf 93       	push	r28
 e50:	1f 93       	push	r17
 e52:	0f 93       	push	r16
 e54:	ff 92       	push	r15
 e56:	c9 2f       	mov	r28, r25
 e58:	dd 27       	eor	r29, r29
 e5a:	88 23       	and	r24, r24
 e5c:	2a f0       	brmi	.+10     	; 0xe68 <log+0x28>
 e5e:	21 97       	sbiw	r28, 0x01	; 1
 e60:	66 0f       	add	r22, r22
 e62:	77 1f       	adc	r23, r23
 e64:	88 1f       	adc	r24, r24
 e66:	da f7       	brpl	.-10     	; 0xe5e <log+0x1e>
 e68:	20 e0       	ldi	r18, 0x00	; 0
 e6a:	30 e0       	ldi	r19, 0x00	; 0
 e6c:	40 e8       	ldi	r20, 0x80	; 128
 e6e:	5f eb       	ldi	r21, 0xBF	; 191
 e70:	9f e3       	ldi	r25, 0x3F	; 63
 e72:	88 39       	cpi	r24, 0x98	; 152
 e74:	20 f0       	brcs	.+8      	; 0xe7e <log+0x3e>
 e76:	80 3e       	cpi	r24, 0xE0	; 224
 e78:	38 f0       	brcs	.+14     	; 0xe88 <log+0x48>
 e7a:	21 96       	adiw	r28, 0x01	; 1
 e7c:	8f 77       	andi	r24, 0x7F	; 127
 e7e:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__addsf3>
 e82:	e0 ea       	ldi	r30, 0xA0	; 160
 e84:	f0 e0       	ldi	r31, 0x00	; 0
 e86:	04 c0       	rjmp	.+8      	; 0xe90 <log+0x50>
 e88:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__addsf3>
 e8c:	ed ec       	ldi	r30, 0xCD	; 205
 e8e:	f0 e0       	ldi	r31, 0x00	; 0
 e90:	0e 94 af 06 	call	0xd5e	; 0xd5e <__fp_powser>
 e94:	8b 01       	movw	r16, r22
 e96:	be 01       	movw	r22, r28
 e98:	ec 01       	movw	r28, r24
 e9a:	fb 2e       	mov	r15, r27
 e9c:	6f 57       	subi	r22, 0x7F	; 127
 e9e:	71 09       	sbc	r23, r1
 ea0:	75 95       	asr	r23
 ea2:	77 1f       	adc	r23, r23
 ea4:	88 0b       	sbc	r24, r24
 ea6:	99 0b       	sbc	r25, r25
 ea8:	0e 94 08 05 	call	0xa10	; 0xa10 <__floatsisf>
 eac:	28 e1       	ldi	r18, 0x18	; 24
 eae:	32 e7       	ldi	r19, 0x72	; 114
 eb0:	41 e3       	ldi	r20, 0x31	; 49
 eb2:	5f e3       	ldi	r21, 0x3F	; 63
 eb4:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3x>
 eb8:	af 2d       	mov	r26, r15
 eba:	98 01       	movw	r18, r16
 ebc:	ae 01       	movw	r20, r28
 ebe:	ff 90       	pop	r15
 ec0:	0f 91       	pop	r16
 ec2:	1f 91       	pop	r17
 ec4:	cf 91       	pop	r28
 ec6:	df 91       	pop	r29
 ec8:	0e 94 0b 04 	call	0x816	; 0x816 <__addsf3x>
 ecc:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>

00000ed0 <modf>:
 ed0:	fa 01       	movw	r30, r20
 ed2:	dc 01       	movw	r26, r24
 ed4:	aa 0f       	add	r26, r26
 ed6:	bb 1f       	adc	r27, r27
 ed8:	9b 01       	movw	r18, r22
 eda:	ac 01       	movw	r20, r24
 edc:	bf 57       	subi	r27, 0x7F	; 127
 ede:	28 f4       	brcc	.+10     	; 0xeea <modf+0x1a>
 ee0:	22 27       	eor	r18, r18
 ee2:	33 27       	eor	r19, r19
 ee4:	44 27       	eor	r20, r20
 ee6:	50 78       	andi	r21, 0x80	; 128
 ee8:	20 c0       	rjmp	.+64     	; 0xf2a <modf+0x5a>
 eea:	b7 51       	subi	r27, 0x17	; 23
 eec:	90 f4       	brcc	.+36     	; 0xf12 <modf+0x42>
 eee:	ab 2f       	mov	r26, r27
 ef0:	00 24       	eor	r0, r0
 ef2:	46 95       	lsr	r20
 ef4:	37 95       	ror	r19
 ef6:	27 95       	ror	r18
 ef8:	01 1c       	adc	r0, r1
 efa:	a3 95       	inc	r26
 efc:	d2 f3       	brmi	.-12     	; 0xef2 <modf+0x22>
 efe:	00 20       	and	r0, r0
 f00:	71 f0       	breq	.+28     	; 0xf1e <modf+0x4e>
 f02:	22 0f       	add	r18, r18
 f04:	33 1f       	adc	r19, r19
 f06:	44 1f       	adc	r20, r20
 f08:	b3 95       	inc	r27
 f0a:	da f3       	brmi	.-10     	; 0xf02 <modf+0x32>
 f0c:	0e d0       	rcall	.+28     	; 0xf2a <modf+0x5a>
 f0e:	0c 94 f3 03 	jmp	0x7e6	; 0x7e6 <__subsf3>
 f12:	61 30       	cpi	r22, 0x01	; 1
 f14:	71 05       	cpc	r23, r1
 f16:	a0 e8       	ldi	r26, 0x80	; 128
 f18:	8a 07       	cpc	r24, r26
 f1a:	b9 46       	sbci	r27, 0x69	; 105
 f1c:	30 f4       	brcc	.+12     	; 0xf2a <modf+0x5a>
 f1e:	9b 01       	movw	r18, r22
 f20:	ac 01       	movw	r20, r24
 f22:	66 27       	eor	r22, r22
 f24:	77 27       	eor	r23, r23
 f26:	88 27       	eor	r24, r24
 f28:	90 78       	andi	r25, 0x80	; 128
 f2a:	30 96       	adiw	r30, 0x00	; 0
 f2c:	21 f0       	breq	.+8      	; 0xf36 <modf+0x66>
 f2e:	20 83       	st	Z, r18
 f30:	31 83       	std	Z+1, r19	; 0x01
 f32:	42 83       	std	Z+2, r20	; 0x02
 f34:	53 83       	std	Z+3, r21	; 0x03
 f36:	08 95       	ret

00000f38 <__fp_mpack>:
 f38:	9f 3f       	cpi	r25, 0xFF	; 255
 f3a:	31 f0       	breq	.+12     	; 0xf48 <__fp_mpack_finite+0xc>

00000f3c <__fp_mpack_finite>:
 f3c:	91 50       	subi	r25, 0x01	; 1
 f3e:	20 f4       	brcc	.+8      	; 0xf48 <__fp_mpack_finite+0xc>
 f40:	87 95       	ror	r24
 f42:	77 95       	ror	r23
 f44:	67 95       	ror	r22
 f46:	b7 95       	ror	r27
 f48:	88 0f       	add	r24, r24
 f4a:	91 1d       	adc	r25, r1
 f4c:	96 95       	lsr	r25
 f4e:	87 95       	ror	r24
 f50:	97 f9       	bld	r25, 7
 f52:	08 95       	ret

00000f54 <__tablejump2__>:
 f54:	ee 0f       	add	r30, r30
 f56:	ff 1f       	adc	r31, r31
 f58:	05 90       	lpm	r0, Z+
 f5a:	f4 91       	lpm	r31, Z
 f5c:	e0 2d       	mov	r30, r0
 f5e:	09 94       	ijmp

00000f60 <__adddi3_s8>:
 f60:	00 24       	eor	r0, r0
 f62:	a7 fd       	sbrc	r26, 7
 f64:	00 94       	com	r0
 f66:	2a 0f       	add	r18, r26
 f68:	30 1d       	adc	r19, r0
 f6a:	40 1d       	adc	r20, r0
 f6c:	50 1d       	adc	r21, r0
 f6e:	60 1d       	adc	r22, r0
 f70:	70 1d       	adc	r23, r0
 f72:	80 1d       	adc	r24, r0
 f74:	90 1d       	adc	r25, r0
 f76:	08 95       	ret

00000f78 <__cmpdi2_s8>:
 f78:	00 24       	eor	r0, r0
 f7a:	a7 fd       	sbrc	r26, 7
 f7c:	00 94       	com	r0
 f7e:	2a 17       	cp	r18, r26
 f80:	30 05       	cpc	r19, r0
 f82:	40 05       	cpc	r20, r0
 f84:	50 05       	cpc	r21, r0
 f86:	60 05       	cpc	r22, r0
 f88:	70 05       	cpc	r23, r0
 f8a:	80 05       	cpc	r24, r0
 f8c:	90 05       	cpc	r25, r0
 f8e:	08 95       	ret

00000f90 <_exit>:
 f90:	f8 94       	cli

00000f92 <__stop_program>:
 f92:	ff cf       	rjmp	.-2      	; 0xf92 <__stop_program>
