
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000480  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800060  00800060  000004f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000524  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006cb  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005f7  00000000  00000000  00000c63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002a8  00000000  00000000  0000125a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00001504  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d8  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000021  00000000  00000000  00001930  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001951  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	aa 36       	cpi	r26, 0x6A	; 106
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  74:	0c 94 3e 02 	jmp	0x47c	; 0x47c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <ADC_readChannel>:
}

unsigned short ADC_readChannel(unsigned char channel_num)
{
//	channel_num &= 0x07; /* channel number must be from 0 --> 7 */
	ADMUX &= 0xE0; /* clear first 5 bits in the ADMUX (channel number MUX4:0 bits) before set the required channel */
  7c:	97 b1       	in	r25, 0x07	; 7
  7e:	90 7e       	andi	r25, 0xE0	; 224
  80:	97 b9       	out	0x07, r25	; 7
	ADMUX = ADMUX | channel_num; /* choose the correct channel by setting the channel number in MUX4:0 bits */
  82:	97 b1       	in	r25, 0x07	; 7
  84:	89 2b       	or	r24, r25
  86:	87 b9       	out	0x07, r24	; 7
	SET_BIT(ADCSRA,6); /* start conversion write '1' to ADSC */
  88:	86 b1       	in	r24, 0x06	; 6
  8a:	80 64       	ori	r24, 0x40	; 64
  8c:	86 b9       	out	0x06, r24	; 6
//	ADCSRA |= (1<<ADSC);
	while(BIT_IS_CLEAR(ADCSRA,4)); /* wait for conversion to complete ADIF becomes '1' */
  8e:	34 9b       	sbis	0x06, 4	; 6
  90:	fe cf       	rjmp	.-4      	; 0x8e <ADC_readChannel+0x12>
	SET_BIT(ADCSRA,4); /* clear ADIF by write '1' to it :) */
  92:	86 b1       	in	r24, 0x06	; 6
  94:	80 61       	ori	r24, 0x10	; 16
  96:	86 b9       	out	0x06, r24	; 6
	return ADC; /* return the data register */
  98:	84 b1       	in	r24, 0x04	; 4
  9a:	95 b1       	in	r25, 0x05	; 5
}
  9c:	08 95       	ret

0000009e <ELECTRIC_WATER_HEATER>:
uint16 counter_2 =0;

	 /*the main process*/
 void  ELECTRIC_WATER_HEATER(void)
	{
		DDRC=0xFF;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	84 bb       	out	0x14, r24	; 20
		DDRD=0xFF;
  a2:	81 bb       	out	0x11, r24	; 17
		PORTD=0x60;
  a4:	80 e6       	ldi	r24, 0x60	; 96
  a6:	82 bb       	out	0x12, r24	; 18
		PORTC=0x00;
  a8:	15 ba       	out	0x15, r1	; 21
		//super loop for repeating this code infinitely
		while(1)  
		{
		volt = ADC_readChannel(0); // read channel two where the temp sensor is connect
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	0e 94 3e 00 	call	0x7c	; 0x7c <ADC_readChannel>
  b0:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <volt+0x1>
  b4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <volt>
			x=(float)(5*volt)/1023; // to gain the ADC of temperature reading
  b8:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <volt>
  bc:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <volt+0x1>
  c0:	cb 01       	movw	r24, r22
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	88 0f       	add	r24, r24
  c8:	99 1f       	adc	r25, r25
  ca:	68 0f       	add	r22, r24
  cc:	79 1f       	adc	r23, r25
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 43 01 	call	0x286	; 0x286 <__floatunsisf>
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 ec       	ldi	r19, 0xC0	; 192
  da:	4f e7       	ldi	r20, 0x7F	; 127
  dc:	54 e4       	ldi	r21, 0x44	; 68
  de:	0e 94 a2 00 	call	0x144	; 0x144 <__divsf3>
			x=x*10;   // out of Temp equation
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	40 e2       	ldi	r20, 0x20	; 32
  e8:	51 e4       	ldi	r21, 0x41	; 65
  ea:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__mulsf3>
  ee:	6b 01       	movw	r12, r22
  f0:	7c 01       	movw	r14, r24
  f2:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <x>
  f6:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <x+0x1>
  fa:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <x+0x2>
  fe:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <x+0x3>
			y=x*10;
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	40 e2       	ldi	r20, 0x20	; 32
 108:	51 e4       	ldi	r21, 0x41	; 65
 10a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__mulsf3>
 10e:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 112:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 116:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 11a:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
			PORTD=x;
 11e:	c7 01       	movw	r24, r14
 120:	b6 01       	movw	r22, r12
 122:	0e 94 14 01 	call	0x228	; 0x228 <__fixunssfsi>
 126:	62 bb       	out	0x12, r22	; 18
			PORTC=y;
 128:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 12c:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 130:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 134:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 138:	0e 94 14 01 	call	0x228	; 0x228 <__fixunssfsi>
 13c:	65 bb       	out	0x15, r22	; 21
 13e:	b5 cf       	rjmp	.-150    	; 0xaa <ELECTRIC_WATER_HEATER+0xc>

00000140 <main>:
 * Author : Kirollos Gerges Asaad
 */ 
#include "Electric water heater.c"
int main(void)
{
   ELECTRIC_WATER_HEATER();
 140:	0e 94 4f 00 	call	0x9e	; 0x9e <ELECTRIC_WATER_HEATER>

00000144 <__divsf3>:
 144:	0e 94 b6 00 	call	0x16c	; 0x16c <__divsf3x>
 148:	0c 94 97 01 	jmp	0x32e	; 0x32e <__fp_round>
 14c:	0e 94 90 01 	call	0x320	; 0x320 <__fp_pscB>
 150:	58 f0       	brcs	.+22     	; 0x168 <__divsf3+0x24>
 152:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscA>
 156:	40 f0       	brcs	.+16     	; 0x168 <__divsf3+0x24>
 158:	29 f4       	brne	.+10     	; 0x164 <__divsf3+0x20>
 15a:	5f 3f       	cpi	r21, 0xFF	; 255
 15c:	29 f0       	breq	.+10     	; 0x168 <__divsf3+0x24>
 15e:	0c 94 80 01 	jmp	0x300	; 0x300 <__fp_inf>
 162:	51 11       	cpse	r21, r1
 164:	0c 94 cb 01 	jmp	0x396	; 0x396 <__fp_szero>
 168:	0c 94 86 01 	jmp	0x30c	; 0x30c <__fp_nan>

0000016c <__divsf3x>:
 16c:	0e 94 a8 01 	call	0x350	; 0x350 <__fp_split3>
 170:	68 f3       	brcs	.-38     	; 0x14c <__divsf3+0x8>

00000172 <__divsf3_pse>:
 172:	99 23       	and	r25, r25
 174:	b1 f3       	breq	.-20     	; 0x162 <__divsf3+0x1e>
 176:	55 23       	and	r21, r21
 178:	91 f3       	breq	.-28     	; 0x15e <__divsf3+0x1a>
 17a:	95 1b       	sub	r25, r21
 17c:	55 0b       	sbc	r21, r21
 17e:	bb 27       	eor	r27, r27
 180:	aa 27       	eor	r26, r26
 182:	62 17       	cp	r22, r18
 184:	73 07       	cpc	r23, r19
 186:	84 07       	cpc	r24, r20
 188:	38 f0       	brcs	.+14     	; 0x198 <__divsf3_pse+0x26>
 18a:	9f 5f       	subi	r25, 0xFF	; 255
 18c:	5f 4f       	sbci	r21, 0xFF	; 255
 18e:	22 0f       	add	r18, r18
 190:	33 1f       	adc	r19, r19
 192:	44 1f       	adc	r20, r20
 194:	aa 1f       	adc	r26, r26
 196:	a9 f3       	breq	.-22     	; 0x182 <__divsf3_pse+0x10>
 198:	35 d0       	rcall	.+106    	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 19a:	0e 2e       	mov	r0, r30
 19c:	3a f0       	brmi	.+14     	; 0x1ac <__divsf3_pse+0x3a>
 19e:	e0 e8       	ldi	r30, 0x80	; 128
 1a0:	32 d0       	rcall	.+100    	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 1a2:	91 50       	subi	r25, 0x01	; 1
 1a4:	50 40       	sbci	r21, 0x00	; 0
 1a6:	e6 95       	lsr	r30
 1a8:	00 1c       	adc	r0, r0
 1aa:	ca f7       	brpl	.-14     	; 0x19e <__divsf3_pse+0x2c>
 1ac:	2b d0       	rcall	.+86     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 1ae:	fe 2f       	mov	r31, r30
 1b0:	29 d0       	rcall	.+82     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 1b2:	66 0f       	add	r22, r22
 1b4:	77 1f       	adc	r23, r23
 1b6:	88 1f       	adc	r24, r24
 1b8:	bb 1f       	adc	r27, r27
 1ba:	26 17       	cp	r18, r22
 1bc:	37 07       	cpc	r19, r23
 1be:	48 07       	cpc	r20, r24
 1c0:	ab 07       	cpc	r26, r27
 1c2:	b0 e8       	ldi	r27, 0x80	; 128
 1c4:	09 f0       	breq	.+2      	; 0x1c8 <__divsf3_pse+0x56>
 1c6:	bb 0b       	sbc	r27, r27
 1c8:	80 2d       	mov	r24, r0
 1ca:	bf 01       	movw	r22, r30
 1cc:	ff 27       	eor	r31, r31
 1ce:	93 58       	subi	r25, 0x83	; 131
 1d0:	5f 4f       	sbci	r21, 0xFF	; 255
 1d2:	3a f0       	brmi	.+14     	; 0x1e2 <__divsf3_pse+0x70>
 1d4:	9e 3f       	cpi	r25, 0xFE	; 254
 1d6:	51 05       	cpc	r21, r1
 1d8:	78 f0       	brcs	.+30     	; 0x1f8 <__divsf3_pse+0x86>
 1da:	0c 94 80 01 	jmp	0x300	; 0x300 <__fp_inf>
 1de:	0c 94 cb 01 	jmp	0x396	; 0x396 <__fp_szero>
 1e2:	5f 3f       	cpi	r21, 0xFF	; 255
 1e4:	e4 f3       	brlt	.-8      	; 0x1de <__divsf3_pse+0x6c>
 1e6:	98 3e       	cpi	r25, 0xE8	; 232
 1e8:	d4 f3       	brlt	.-12     	; 0x1de <__divsf3_pse+0x6c>
 1ea:	86 95       	lsr	r24
 1ec:	77 95       	ror	r23
 1ee:	67 95       	ror	r22
 1f0:	b7 95       	ror	r27
 1f2:	f7 95       	ror	r31
 1f4:	9f 5f       	subi	r25, 0xFF	; 255
 1f6:	c9 f7       	brne	.-14     	; 0x1ea <__divsf3_pse+0x78>
 1f8:	88 0f       	add	r24, r24
 1fa:	91 1d       	adc	r25, r1
 1fc:	96 95       	lsr	r25
 1fe:	87 95       	ror	r24
 200:	97 f9       	bld	r25, 7
 202:	08 95       	ret
 204:	e1 e0       	ldi	r30, 0x01	; 1
 206:	66 0f       	add	r22, r22
 208:	77 1f       	adc	r23, r23
 20a:	88 1f       	adc	r24, r24
 20c:	bb 1f       	adc	r27, r27
 20e:	62 17       	cp	r22, r18
 210:	73 07       	cpc	r23, r19
 212:	84 07       	cpc	r24, r20
 214:	ba 07       	cpc	r27, r26
 216:	20 f0       	brcs	.+8      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
 218:	62 1b       	sub	r22, r18
 21a:	73 0b       	sbc	r23, r19
 21c:	84 0b       	sbc	r24, r20
 21e:	ba 0b       	sbc	r27, r26
 220:	ee 1f       	adc	r30, r30
 222:	88 f7       	brcc	.-30     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 224:	e0 95       	com	r30
 226:	08 95       	ret

00000228 <__fixunssfsi>:
 228:	0e 94 b0 01 	call	0x360	; 0x360 <__fp_splitA>
 22c:	88 f0       	brcs	.+34     	; 0x250 <__fixunssfsi+0x28>
 22e:	9f 57       	subi	r25, 0x7F	; 127
 230:	98 f0       	brcs	.+38     	; 0x258 <__fixunssfsi+0x30>
 232:	b9 2f       	mov	r27, r25
 234:	99 27       	eor	r25, r25
 236:	b7 51       	subi	r27, 0x17	; 23
 238:	b0 f0       	brcs	.+44     	; 0x266 <__fixunssfsi+0x3e>
 23a:	e1 f0       	breq	.+56     	; 0x274 <__fixunssfsi+0x4c>
 23c:	66 0f       	add	r22, r22
 23e:	77 1f       	adc	r23, r23
 240:	88 1f       	adc	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	1a f0       	brmi	.+6      	; 0x24c <__fixunssfsi+0x24>
 246:	ba 95       	dec	r27
 248:	c9 f7       	brne	.-14     	; 0x23c <__fixunssfsi+0x14>
 24a:	14 c0       	rjmp	.+40     	; 0x274 <__fixunssfsi+0x4c>
 24c:	b1 30       	cpi	r27, 0x01	; 1
 24e:	91 f0       	breq	.+36     	; 0x274 <__fixunssfsi+0x4c>
 250:	0e 94 ca 01 	call	0x394	; 0x394 <__fp_zero>
 254:	b1 e0       	ldi	r27, 0x01	; 1
 256:	08 95       	ret
 258:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_zero>
 25c:	67 2f       	mov	r22, r23
 25e:	78 2f       	mov	r23, r24
 260:	88 27       	eor	r24, r24
 262:	b8 5f       	subi	r27, 0xF8	; 248
 264:	39 f0       	breq	.+14     	; 0x274 <__fixunssfsi+0x4c>
 266:	b9 3f       	cpi	r27, 0xF9	; 249
 268:	cc f3       	brlt	.-14     	; 0x25c <__fixunssfsi+0x34>
 26a:	86 95       	lsr	r24
 26c:	77 95       	ror	r23
 26e:	67 95       	ror	r22
 270:	b3 95       	inc	r27
 272:	d9 f7       	brne	.-10     	; 0x26a <__fixunssfsi+0x42>
 274:	3e f4       	brtc	.+14     	; 0x284 <__fixunssfsi+0x5c>
 276:	90 95       	com	r25
 278:	80 95       	com	r24
 27a:	70 95       	com	r23
 27c:	61 95       	neg	r22
 27e:	7f 4f       	sbci	r23, 0xFF	; 255
 280:	8f 4f       	sbci	r24, 0xFF	; 255
 282:	9f 4f       	sbci	r25, 0xFF	; 255
 284:	08 95       	ret

00000286 <__floatunsisf>:
 286:	e8 94       	clt
 288:	09 c0       	rjmp	.+18     	; 0x29c <__floatsisf+0x12>

0000028a <__floatsisf>:
 28a:	97 fb       	bst	r25, 7
 28c:	3e f4       	brtc	.+14     	; 0x29c <__floatsisf+0x12>
 28e:	90 95       	com	r25
 290:	80 95       	com	r24
 292:	70 95       	com	r23
 294:	61 95       	neg	r22
 296:	7f 4f       	sbci	r23, 0xFF	; 255
 298:	8f 4f       	sbci	r24, 0xFF	; 255
 29a:	9f 4f       	sbci	r25, 0xFF	; 255
 29c:	99 23       	and	r25, r25
 29e:	a9 f0       	breq	.+42     	; 0x2ca <__floatsisf+0x40>
 2a0:	f9 2f       	mov	r31, r25
 2a2:	96 e9       	ldi	r25, 0x96	; 150
 2a4:	bb 27       	eor	r27, r27
 2a6:	93 95       	inc	r25
 2a8:	f6 95       	lsr	r31
 2aa:	87 95       	ror	r24
 2ac:	77 95       	ror	r23
 2ae:	67 95       	ror	r22
 2b0:	b7 95       	ror	r27
 2b2:	f1 11       	cpse	r31, r1
 2b4:	f8 cf       	rjmp	.-16     	; 0x2a6 <__floatsisf+0x1c>
 2b6:	fa f4       	brpl	.+62     	; 0x2f6 <__floatsisf+0x6c>
 2b8:	bb 0f       	add	r27, r27
 2ba:	11 f4       	brne	.+4      	; 0x2c0 <__floatsisf+0x36>
 2bc:	60 ff       	sbrs	r22, 0
 2be:	1b c0       	rjmp	.+54     	; 0x2f6 <__floatsisf+0x6c>
 2c0:	6f 5f       	subi	r22, 0xFF	; 255
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255
 2c4:	8f 4f       	sbci	r24, 0xFF	; 255
 2c6:	9f 4f       	sbci	r25, 0xFF	; 255
 2c8:	16 c0       	rjmp	.+44     	; 0x2f6 <__floatsisf+0x6c>
 2ca:	88 23       	and	r24, r24
 2cc:	11 f0       	breq	.+4      	; 0x2d2 <__floatsisf+0x48>
 2ce:	96 e9       	ldi	r25, 0x96	; 150
 2d0:	11 c0       	rjmp	.+34     	; 0x2f4 <__floatsisf+0x6a>
 2d2:	77 23       	and	r23, r23
 2d4:	21 f0       	breq	.+8      	; 0x2de <__floatsisf+0x54>
 2d6:	9e e8       	ldi	r25, 0x8E	; 142
 2d8:	87 2f       	mov	r24, r23
 2da:	76 2f       	mov	r23, r22
 2dc:	05 c0       	rjmp	.+10     	; 0x2e8 <__floatsisf+0x5e>
 2de:	66 23       	and	r22, r22
 2e0:	71 f0       	breq	.+28     	; 0x2fe <__floatsisf+0x74>
 2e2:	96 e8       	ldi	r25, 0x86	; 134
 2e4:	86 2f       	mov	r24, r22
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	2a f0       	brmi	.+10     	; 0x2f6 <__floatsisf+0x6c>
 2ec:	9a 95       	dec	r25
 2ee:	66 0f       	add	r22, r22
 2f0:	77 1f       	adc	r23, r23
 2f2:	88 1f       	adc	r24, r24
 2f4:	da f7       	brpl	.-10     	; 0x2ec <__floatsisf+0x62>
 2f6:	88 0f       	add	r24, r24
 2f8:	96 95       	lsr	r25
 2fa:	87 95       	ror	r24
 2fc:	97 f9       	bld	r25, 7
 2fe:	08 95       	ret

00000300 <__fp_inf>:
 300:	97 f9       	bld	r25, 7
 302:	9f 67       	ori	r25, 0x7F	; 127
 304:	80 e8       	ldi	r24, 0x80	; 128
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	08 95       	ret

0000030c <__fp_nan>:
 30c:	9f ef       	ldi	r25, 0xFF	; 255
 30e:	80 ec       	ldi	r24, 0xC0	; 192
 310:	08 95       	ret

00000312 <__fp_pscA>:
 312:	00 24       	eor	r0, r0
 314:	0a 94       	dec	r0
 316:	16 16       	cp	r1, r22
 318:	17 06       	cpc	r1, r23
 31a:	18 06       	cpc	r1, r24
 31c:	09 06       	cpc	r0, r25
 31e:	08 95       	ret

00000320 <__fp_pscB>:
 320:	00 24       	eor	r0, r0
 322:	0a 94       	dec	r0
 324:	12 16       	cp	r1, r18
 326:	13 06       	cpc	r1, r19
 328:	14 06       	cpc	r1, r20
 32a:	05 06       	cpc	r0, r21
 32c:	08 95       	ret

0000032e <__fp_round>:
 32e:	09 2e       	mov	r0, r25
 330:	03 94       	inc	r0
 332:	00 0c       	add	r0, r0
 334:	11 f4       	brne	.+4      	; 0x33a <__fp_round+0xc>
 336:	88 23       	and	r24, r24
 338:	52 f0       	brmi	.+20     	; 0x34e <__fp_round+0x20>
 33a:	bb 0f       	add	r27, r27
 33c:	40 f4       	brcc	.+16     	; 0x34e <__fp_round+0x20>
 33e:	bf 2b       	or	r27, r31
 340:	11 f4       	brne	.+4      	; 0x346 <__fp_round+0x18>
 342:	60 ff       	sbrs	r22, 0
 344:	04 c0       	rjmp	.+8      	; 0x34e <__fp_round+0x20>
 346:	6f 5f       	subi	r22, 0xFF	; 255
 348:	7f 4f       	sbci	r23, 0xFF	; 255
 34a:	8f 4f       	sbci	r24, 0xFF	; 255
 34c:	9f 4f       	sbci	r25, 0xFF	; 255
 34e:	08 95       	ret

00000350 <__fp_split3>:
 350:	57 fd       	sbrc	r21, 7
 352:	90 58       	subi	r25, 0x80	; 128
 354:	44 0f       	add	r20, r20
 356:	55 1f       	adc	r21, r21
 358:	59 f0       	breq	.+22     	; 0x370 <__fp_splitA+0x10>
 35a:	5f 3f       	cpi	r21, 0xFF	; 255
 35c:	71 f0       	breq	.+28     	; 0x37a <__fp_splitA+0x1a>
 35e:	47 95       	ror	r20

00000360 <__fp_splitA>:
 360:	88 0f       	add	r24, r24
 362:	97 fb       	bst	r25, 7
 364:	99 1f       	adc	r25, r25
 366:	61 f0       	breq	.+24     	; 0x380 <__fp_splitA+0x20>
 368:	9f 3f       	cpi	r25, 0xFF	; 255
 36a:	79 f0       	breq	.+30     	; 0x38a <__fp_splitA+0x2a>
 36c:	87 95       	ror	r24
 36e:	08 95       	ret
 370:	12 16       	cp	r1, r18
 372:	13 06       	cpc	r1, r19
 374:	14 06       	cpc	r1, r20
 376:	55 1f       	adc	r21, r21
 378:	f2 cf       	rjmp	.-28     	; 0x35e <__fp_split3+0xe>
 37a:	46 95       	lsr	r20
 37c:	f1 df       	rcall	.-30     	; 0x360 <__fp_splitA>
 37e:	08 c0       	rjmp	.+16     	; 0x390 <__fp_splitA+0x30>
 380:	16 16       	cp	r1, r22
 382:	17 06       	cpc	r1, r23
 384:	18 06       	cpc	r1, r24
 386:	99 1f       	adc	r25, r25
 388:	f1 cf       	rjmp	.-30     	; 0x36c <__fp_splitA+0xc>
 38a:	86 95       	lsr	r24
 38c:	71 05       	cpc	r23, r1
 38e:	61 05       	cpc	r22, r1
 390:	08 94       	sec
 392:	08 95       	ret

00000394 <__fp_zero>:
 394:	e8 94       	clt

00000396 <__fp_szero>:
 396:	bb 27       	eor	r27, r27
 398:	66 27       	eor	r22, r22
 39a:	77 27       	eor	r23, r23
 39c:	cb 01       	movw	r24, r22
 39e:	97 f9       	bld	r25, 7
 3a0:	08 95       	ret

000003a2 <__mulsf3>:
 3a2:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__mulsf3x>
 3a6:	0c 94 97 01 	jmp	0x32e	; 0x32e <__fp_round>
 3aa:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscA>
 3ae:	38 f0       	brcs	.+14     	; 0x3be <__mulsf3+0x1c>
 3b0:	0e 94 90 01 	call	0x320	; 0x320 <__fp_pscB>
 3b4:	20 f0       	brcs	.+8      	; 0x3be <__mulsf3+0x1c>
 3b6:	95 23       	and	r25, r21
 3b8:	11 f0       	breq	.+4      	; 0x3be <__mulsf3+0x1c>
 3ba:	0c 94 80 01 	jmp	0x300	; 0x300 <__fp_inf>
 3be:	0c 94 86 01 	jmp	0x30c	; 0x30c <__fp_nan>
 3c2:	11 24       	eor	r1, r1
 3c4:	0c 94 cb 01 	jmp	0x396	; 0x396 <__fp_szero>

000003c8 <__mulsf3x>:
 3c8:	0e 94 a8 01 	call	0x350	; 0x350 <__fp_split3>
 3cc:	70 f3       	brcs	.-36     	; 0x3aa <__mulsf3+0x8>

000003ce <__mulsf3_pse>:
 3ce:	95 9f       	mul	r25, r21
 3d0:	c1 f3       	breq	.-16     	; 0x3c2 <__mulsf3+0x20>
 3d2:	95 0f       	add	r25, r21
 3d4:	50 e0       	ldi	r21, 0x00	; 0
 3d6:	55 1f       	adc	r21, r21
 3d8:	62 9f       	mul	r22, r18
 3da:	f0 01       	movw	r30, r0
 3dc:	72 9f       	mul	r23, r18
 3de:	bb 27       	eor	r27, r27
 3e0:	f0 0d       	add	r31, r0
 3e2:	b1 1d       	adc	r27, r1
 3e4:	63 9f       	mul	r22, r19
 3e6:	aa 27       	eor	r26, r26
 3e8:	f0 0d       	add	r31, r0
 3ea:	b1 1d       	adc	r27, r1
 3ec:	aa 1f       	adc	r26, r26
 3ee:	64 9f       	mul	r22, r20
 3f0:	66 27       	eor	r22, r22
 3f2:	b0 0d       	add	r27, r0
 3f4:	a1 1d       	adc	r26, r1
 3f6:	66 1f       	adc	r22, r22
 3f8:	82 9f       	mul	r24, r18
 3fa:	22 27       	eor	r18, r18
 3fc:	b0 0d       	add	r27, r0
 3fe:	a1 1d       	adc	r26, r1
 400:	62 1f       	adc	r22, r18
 402:	73 9f       	mul	r23, r19
 404:	b0 0d       	add	r27, r0
 406:	a1 1d       	adc	r26, r1
 408:	62 1f       	adc	r22, r18
 40a:	83 9f       	mul	r24, r19
 40c:	a0 0d       	add	r26, r0
 40e:	61 1d       	adc	r22, r1
 410:	22 1f       	adc	r18, r18
 412:	74 9f       	mul	r23, r20
 414:	33 27       	eor	r19, r19
 416:	a0 0d       	add	r26, r0
 418:	61 1d       	adc	r22, r1
 41a:	23 1f       	adc	r18, r19
 41c:	84 9f       	mul	r24, r20
 41e:	60 0d       	add	r22, r0
 420:	21 1d       	adc	r18, r1
 422:	82 2f       	mov	r24, r18
 424:	76 2f       	mov	r23, r22
 426:	6a 2f       	mov	r22, r26
 428:	11 24       	eor	r1, r1
 42a:	9f 57       	subi	r25, 0x7F	; 127
 42c:	50 40       	sbci	r21, 0x00	; 0
 42e:	9a f0       	brmi	.+38     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 430:	f1 f0       	breq	.+60     	; 0x46e <__stack+0xf>
 432:	88 23       	and	r24, r24
 434:	4a f0       	brmi	.+18     	; 0x448 <__DATA_REGION_LENGTH__+0x48>
 436:	ee 0f       	add	r30, r30
 438:	ff 1f       	adc	r31, r31
 43a:	bb 1f       	adc	r27, r27
 43c:	66 1f       	adc	r22, r22
 43e:	77 1f       	adc	r23, r23
 440:	88 1f       	adc	r24, r24
 442:	91 50       	subi	r25, 0x01	; 1
 444:	50 40       	sbci	r21, 0x00	; 0
 446:	a9 f7       	brne	.-22     	; 0x432 <__DATA_REGION_LENGTH__+0x32>
 448:	9e 3f       	cpi	r25, 0xFE	; 254
 44a:	51 05       	cpc	r21, r1
 44c:	80 f0       	brcs	.+32     	; 0x46e <__stack+0xf>
 44e:	0c 94 80 01 	jmp	0x300	; 0x300 <__fp_inf>
 452:	0c 94 cb 01 	jmp	0x396	; 0x396 <__fp_szero>
 456:	5f 3f       	cpi	r21, 0xFF	; 255
 458:	e4 f3       	brlt	.-8      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 45a:	98 3e       	cpi	r25, 0xE8	; 232
 45c:	d4 f3       	brlt	.-12     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 45e:	86 95       	lsr	r24
 460:	77 95       	ror	r23
 462:	67 95       	ror	r22
 464:	b7 95       	ror	r27
 466:	f7 95       	ror	r31
 468:	e7 95       	ror	r30
 46a:	9f 5f       	subi	r25, 0xFF	; 255
 46c:	c1 f7       	brne	.-16     	; 0x45e <__DATA_REGION_LENGTH__+0x5e>
 46e:	fe 2b       	or	r31, r30
 470:	88 0f       	add	r24, r24
 472:	91 1d       	adc	r25, r1
 474:	96 95       	lsr	r25
 476:	87 95       	ror	r24
 478:	97 f9       	bld	r25, 7
 47a:	08 95       	ret

0000047c <_exit>:
 47c:	f8 94       	cli

0000047e <__stop_program>:
 47e:	ff cf       	rjmp	.-2      	; 0x47e <__stop_program>
