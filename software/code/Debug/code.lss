
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f7c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000ff0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800060  00800060  00000ff0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ff0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001020  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd7  00000000  00000000  00001154  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000079b  00000000  00000000  00001f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008fe  00000000  00000000  000026c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  00002fc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b8  00000000  00000000  00003204  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ab  00000000  00000000  000037bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00003b67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__vector_8>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	5b 02       	muls	r21, r27
  56:	58 02       	muls	r21, r24
  58:	52 02       	muls	r21, r18
  5a:	4c 02       	muls	r20, r28
  5c:	46 02       	muls	r20, r22
  5e:	55 02       	muls	r21, r21
  60:	43 02       	muls	r20, r19
  62:	49 02       	muls	r20, r25
  64:	4f 02       	muls	r20, r31
  66:	f9 02       	muls	r31, r25
  68:	f2 02       	muls	r31, r18
  6a:	e4 02       	muls	r30, r20
  6c:	d6 02       	muls	r29, r22
  6e:	c8 02       	muls	r28, r24
  70:	eb 02       	muls	r30, r27
  72:	c1 02       	muls	r28, r17
  74:	cf 02       	muls	r28, r31
  76:	dd 02       	muls	r29, r29
  78:	07 63       	ori	r16, 0x37	; 55
  7a:	42 36       	cpi	r20, 0x62	; 98
  7c:	b7 9b       	sbis	0x16, 7	; 22
  7e:	d8 a7       	std	Y+40, r29	; 0x28
  80:	1a 39       	cpi	r17, 0x9A	; 154
  82:	68 56       	subi	r22, 0x68	; 104
  84:	18 ae       	std	Y+56, r1	; 0x38
  86:	ba ab       	std	Y+50, r27	; 0x32
  88:	55 8c       	ldd	r5, Z+29	; 0x1d
  8a:	1d 3c       	cpi	r17, 0xCD	; 205
  8c:	b7 cc       	rjmp	.-1682   	; 0xfffff9fc <__eeprom_end+0xff7ef9fc>
  8e:	57 63       	ori	r21, 0x37	; 55
  90:	bd 6d       	ori	r27, 0xDD	; 221
  92:	ed fd       	.word	0xfded	; ????
  94:	75 3e       	cpi	r23, 0xE5	; 229
  96:	f6 17       	cp	r31, r22
  98:	72 31       	cpi	r23, 0x12	; 18
  9a:	bf 00       	.word	0x00bf	; ????
  9c:	00 00       	nop
  9e:	80 3f       	cpi	r24, 0xF0	; 240
  a0:	08 00       	.word	0x0008	; ????
  a2:	00 00       	nop
  a4:	be 92       	st	-X, r11
  a6:	24 49       	sbci	r18, 0x94	; 148
  a8:	12 3e       	cpi	r17, 0xE2	; 226
  aa:	ab aa       	std	Y+51, r10	; 0x33
  ac:	aa 2a       	or	r10, r26
  ae:	be cd       	rjmp	.-1156   	; 0xfffffc2c <__eeprom_end+0xff7efc2c>
  b0:	cc cc       	rjmp	.-1640   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
  b2:	4c 3e       	cpi	r20, 0xEC	; 236
  b4:	00 00       	nop
  b6:	00 80       	ld	r0, Z
  b8:	be ab       	std	Y+54, r27	; 0x36
  ba:	aa aa       	std	Y+50, r10	; 0x32
  bc:	aa 3e       	cpi	r26, 0xEA	; 234
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	bf 00       	.word	0x00bf	; ????
  c4:	00 00       	nop
  c6:	80 3f       	cpi	r24, 0xF0	; 240
  c8:	00 00       	nop
  ca:	00 00       	nop
  cc:	00 08       	sbc	r0, r0
  ce:	41 78       	andi	r20, 0x81	; 129
  d0:	d3 bb       	out	0x13, r29	; 19
  d2:	43 87       	std	Z+11, r20	; 0x0b
  d4:	d1 13       	cpse	r29, r17
  d6:	3d 19       	sub	r19, r13
  d8:	0e 3c       	cpi	r16, 0xCE	; 206
  da:	c3 bd       	out	0x23, r28	; 35
  dc:	42 82       	std	Z+2, r4	; 0x02
  de:	ad 2b       	or	r26, r29
  e0:	3e 68       	ori	r19, 0x8E	; 142
  e2:	ec 82       	std	Y+4, r14	; 0x04
  e4:	76 be       	out	0x36, r7	; 54
  e6:	d9 8f       	std	Y+25, r29	; 0x19
  e8:	e1 a9       	ldd	r30, Z+49	; 0x31
  ea:	3e 4c       	sbci	r19, 0xCE	; 206
  ec:	80 ef       	ldi	r24, 0xF0	; 240
  ee:	ff be       	out	0x3f, r15	; 63
  f0:	01 c4       	rjmp	.+2050   	; 0x8f4 <__divsf3_pse+0x14>
  f2:	ff 7f       	andi	r31, 0xFF	; 255
  f4:	3f 00       	.word	0x003f	; ????
  f6:	00 00       	nop
	...

000000fa <__ctors_end>:
  fa:	11 24       	eor	r1, r1
  fc:	1f be       	out	0x3f, r1	; 63
  fe:	cf e5       	ldi	r28, 0x5F	; 95
 100:	d4 e0       	ldi	r29, 0x04	; 4
 102:	de bf       	out	0x3e, r29	; 62
 104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_clear_bss>:
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	a0 e6       	ldi	r26, 0x60	; 96
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	aa 37       	cpi	r26, 0x7A	; 122
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	0e 94 de 03 	call	0x7bc	; 0x7bc <main>
 11a:	0c 94 bc 07 	jmp	0xf78	; 0xf78 <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_init>:
	// turns a BCD-encoded byte back into a standard one
	u8 Bcd_to_decimal ()
	{
		
		return( ((TWDR>>4)*10)+(TWDR &0xF));
	}
 122:	17 b8       	out	0x07, r1	; 7
 124:	83 e8       	ldi	r24, 0x83	; 131
 126:	86 b9       	out	0x06, r24	; 6
 128:	08 95       	ret

0000012a <ADC_readChannel>:
 12a:	87 70       	andi	r24, 0x07	; 7
 12c:	97 b1       	in	r25, 0x07	; 7
 12e:	90 7e       	andi	r25, 0xE0	; 224
 130:	97 b9       	out	0x07, r25	; 7
 132:	97 b1       	in	r25, 0x07	; 7
 134:	89 2b       	or	r24, r25
 136:	87 b9       	out	0x07, r24	; 7
 138:	86 b1       	in	r24, 0x06	; 6
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	86 b9       	out	0x06, r24	; 6
 13e:	34 9b       	sbis	0x06, 4	; 6
 140:	fe cf       	rjmp	.-4      	; 0x13e <ADC_readChannel+0x14>
 142:	86 b1       	in	r24, 0x06	; 6
 144:	80 61       	ori	r24, 0x10	; 16
 146:	86 b9       	out	0x06, r24	; 6
 148:	84 b1       	in	r24, 0x04	; 4
 14a:	95 b1       	in	r25, 0x05	; 5
 14c:	08 95       	ret

0000014e <INT_interrupt>:
 14e:	84 e6       	ldi	r24, 0x64	; 100
 150:	9f ef       	ldi	r25, 0xFF	; 255
 152:	9d bd       	out	0x2d, r25	; 45
 154:	8c bd       	out	0x2c, r24	; 44
 156:	1f bc       	out	0x2f, r1	; 47
 158:	85 e0       	ldi	r24, 0x05	; 5
 15a:	8e bd       	out	0x2e, r24	; 46
 15c:	84 e0       	ldi	r24, 0x04	; 4
 15e:	89 bf       	out	0x39, r24	; 57
 160:	78 94       	sei
 162:	08 95       	ret

00000164 <I2C_Init>:
 164:	11 b8       	out	0x01, r1	; 1
 166:	61 b1       	in	r22, 0x01	; 1
 168:	63 70       	andi	r22, 0x03	; 3
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__floatsisf>
 174:	9b 01       	movw	r18, r22
 176:	ac 01       	movw	r20, r24
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	90 e4       	ldi	r25, 0x40	; 64
 180:	0e 94 19 06 	call	0xc32	; 0xc32 <pow>
 184:	9b 01       	movw	r18, r22
 186:	ac 01       	movw	r20, r24
 188:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__addsf3>
 18c:	9b 01       	movw	r18, r22
 18e:	ac 01       	movw	r20, r24
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	9f e4       	ldi	r25, 0x4F	; 79
 198:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__divsf3>
 19c:	0e 94 cb 04 	call	0x996	; 0x996 <__fixunssfsi>
 1a0:	60 b9       	out	0x00, r22	; 0
 1a2:	08 95       	ret

000001a4 <I2C_Start>:
 1a4:	94 ea       	ldi	r25, 0xA4	; 164
 1a6:	96 bf       	out	0x36, r25	; 54
 1a8:	06 b6       	in	r0, 0x36	; 54
 1aa:	07 fe       	sbrs	r0, 7
 1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <I2C_Start+0x4>
 1ae:	83 b9       	out	0x03, r24	; 3
 1b0:	84 e8       	ldi	r24, 0x84	; 132
 1b2:	86 bf       	out	0x36, r24	; 54
 1b4:	06 b6       	in	r0, 0x36	; 54
 1b6:	07 fe       	sbrs	r0, 7
 1b8:	fd cf       	rjmp	.-6      	; 0x1b4 <I2C_Start+0x10>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	08 95       	ret

000001be <I2C_Repeated_Start>:
 1be:	94 ea       	ldi	r25, 0xA4	; 164
 1c0:	96 bf       	out	0x36, r25	; 54
 1c2:	06 b6       	in	r0, 0x36	; 54
 1c4:	07 fe       	sbrs	r0, 7
 1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <I2C_Repeated_Start+0x4>
 1c8:	83 b9       	out	0x03, r24	; 3
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	86 bf       	out	0x36, r24	; 54
 1ce:	06 b6       	in	r0, 0x36	; 54
 1d0:	07 fe       	sbrs	r0, 7
 1d2:	fd cf       	rjmp	.-6      	; 0x1ce <I2C_Repeated_Start+0x10>
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	08 95       	ret

000001d8 <I2C_Read_Nack>:
 1d8:	84 e8       	ldi	r24, 0x84	; 132
 1da:	86 bf       	out	0x36, r24	; 54
 1dc:	06 b6       	in	r0, 0x36	; 54
 1de:	07 fe       	sbrs	r0, 7
 1e0:	fd cf       	rjmp	.-6      	; 0x1dc <I2C_Read_Nack+0x4>
 1e2:	83 b1       	in	r24, 0x03	; 3
 1e4:	08 95       	ret

000001e6 <I2C_Stop>:
 1e6:	84 e9       	ldi	r24, 0x94	; 148
 1e8:	86 bf       	out	0x36, r24	; 54
 1ea:	86 b7       	in	r24, 0x36	; 54
 1ec:	08 95       	ret

000001ee <decimal_to_bcd>:
 1ee:	9d ec       	ldi	r25, 0xCD	; 205
 1f0:	89 9f       	mul	r24, r25
 1f2:	91 2d       	mov	r25, r1
 1f4:	11 24       	eor	r1, r1
 1f6:	96 95       	lsr	r25
 1f8:	96 95       	lsr	r25
 1fa:	96 95       	lsr	r25
 1fc:	39 2f       	mov	r19, r25
 1fe:	33 0f       	add	r19, r19
 200:	23 2f       	mov	r18, r19
 202:	22 0f       	add	r18, r18
 204:	22 0f       	add	r18, r18
 206:	23 0f       	add	r18, r19
 208:	82 1b       	sub	r24, r18
 20a:	30 e1       	ldi	r19, 0x10	; 16
 20c:	93 9f       	mul	r25, r19
 20e:	80 0d       	add	r24, r0
 210:	11 24       	eor	r1, r1
 212:	08 95       	ret

00000214 <I2C_Write>:
 214:	0e 94 f7 00 	call	0x1ee	; 0x1ee <decimal_to_bcd>
 218:	83 b9       	out	0x03, r24	; 3
 21a:	84 e8       	ldi	r24, 0x84	; 132
 21c:	86 bf       	out	0x36, r24	; 54
 21e:	06 b6       	in	r0, 0x36	; 54
 220:	07 fe       	sbrs	r0, 7
 222:	fd cf       	rjmp	.-6      	; 0x21e <I2C_Write+0xa>
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	08 95       	ret

00000228 <EEPROM_write_read>:
	
	u8 EEPROM_write_read(u8 stored_data)
	{
 228:	cf 93       	push	r28
 22a:	c8 2f       	mov	r28, r24
		u8 data;
		I2C_Init();
 22c:	0e 94 b2 00 	call	0x164	; 0x164 <I2C_Init>
		I2C_Start(0xA0);
 230:	80 ea       	ldi	r24, 0xA0	; 160
 232:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2C_Start>
		I2C_Write(stored_data);
 236:	8c 2f       	mov	r24, r28
 238:	0e 94 0a 01 	call	0x214	; 0x214 <I2C_Write>
		I2C_Repeated_Start(0xA1);
 23c:	81 ea       	ldi	r24, 0xA1	; 161
 23e:	0e 94 df 00 	call	0x1be	; 0x1be <I2C_Repeated_Start>
		data=I2C_Read_Nack ();
 242:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Read_Nack>
 246:	c8 2f       	mov	r28, r24
		I2C_Stop();
 248:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <I2C_Stop>
		return data;
		
	}
 24c:	8c 2f       	mov	r24, r28
 24e:	cf 91       	pop	r28
 250:	08 95       	ret

00000252 <Data_Direction_registers>:
#endif

void Data_Direction_registers(void)
{
	/*OUTPUTS*/
	DDRD=0xFF;
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	81 bb       	out	0x11, r24	; 17
	OUTPUT_MODULE(DDRB,0); //set Enable of first 7 segment as output
 256:	87 b3       	in	r24, 0x17	; 23
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	87 bb       	out	0x17, r24	; 23
	OUTPUT_MODULE(DDRA,7); //set Enable of second 7 segment as output
 25c:	8a b3       	in	r24, 0x1a	; 26
 25e:	80 68       	ori	r24, 0x80	; 128
 260:	8a bb       	out	0x1a, r24	; 26
	OUTPUT_MODULE(DDRB,5); //set cooling fan as output
 262:	87 b3       	in	r24, 0x17	; 23
 264:	80 62       	ori	r24, 0x20	; 32
 266:	87 bb       	out	0x17, r24	; 23
	OUTPUT_MODULE(DDRB,6); //set Heater as output
 268:	87 b3       	in	r24, 0x17	; 23
 26a:	80 64       	ori	r24, 0x40	; 64
 26c:	87 bb       	out	0x17, r24	; 23
	OUTPUT_MODULE(DDRB,4); //set Heater LED as output
 26e:	87 b3       	in	r24, 0x17	; 23
 270:	80 61       	ori	r24, 0x10	; 16
 272:	87 bb       	out	0x17, r24	; 23
	
/* INPUTS*/
	INPUT_MODULE(DDRB,3); //set increment temperature button to be input
 274:	87 b3       	in	r24, 0x17	; 23
 276:	87 7f       	andi	r24, 0xF7	; 247
 278:	87 bb       	out	0x17, r24	; 23
	INPUT_MODULE(DDRB,2); //set decrement temperature button to be input
 27a:	87 b3       	in	r24, 0x17	; 23
 27c:	8b 7f       	andi	r24, 0xFB	; 251
 27e:	87 bb       	out	0x17, r24	; 23
	INPUT_MODULE(DDRB,1); //set OFF/ON button to be input
 280:	87 b3       	in	r24, 0x17	; 23
 282:	8d 7f       	andi	r24, 0xFD	; 253
 284:	87 bb       	out	0x17, r24	; 23
 286:	08 95       	ret

00000288 <initialization_variables>:



void initialization_variables(void)
{
	INT_interrupt();  /* initialize internally interrupt Timer1*/
 288:	0e 94 a7 00 	call	0x14e	; 0x14e <INT_interrupt>
ADC_init(); /* initialize ADC driver */
 28c:	0e 94 91 00 	call	0x122	; 0x122 <ADC_init>

/* deceleration, initialize 7_segments by 60*/
PORTD=0x60;
 290:	80 e6       	ldi	r24, 0x60	; 96
 292:	82 bb       	out	0x12, r24	; 18

/* initialization cooling fan,heater ,heater LED to be off */
OUTPUT_MODULE_OFF(PORTB,4);
 294:	88 b3       	in	r24, 0x18	; 24
 296:	8f 7e       	andi	r24, 0xEF	; 239
 298:	88 bb       	out	0x18, r24	; 24
OUTPUT_MODULE_OFF(PORTB,5);
 29a:	88 b3       	in	r24, 0x18	; 24
 29c:	8f 7d       	andi	r24, 0xDF	; 223
 29e:	88 bb       	out	0x18, r24	; 24
OUTPUT_MODULE_OFF(PORTB,6);
 2a0:	88 b3       	in	r24, 0x18	; 24
 2a2:	8f 7b       	andi	r24, 0xBF	; 191
 2a4:	88 bb       	out	0x18, r24	; 24
// initialization Enables of 7 segments to be off as active low
OUTPUT_MODULE_ON(PORTB,0);
 2a6:	88 b3       	in	r24, 0x18	; 24
 2a8:	81 60       	ori	r24, 0x01	; 1
 2aa:	88 bb       	out	0x18, r24	; 24
OUTPUT_MODULE_ON(PORTA,7);
 2ac:	8b b3       	in	r24, 0x1b	; 27
 2ae:	80 68       	ori	r24, 0x80	; 128
 2b0:	8b bb       	out	0x1b, r24	; 27
 2b2:	08 95       	ret

000002b4 <Avg_reading>:
	
	
	void Avg_reading(void)
	{
		
		sum=sum+x;
 2b4:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 2b8:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 2bc:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 2c0:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 2c4:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <sum>
 2c8:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <sum+0x1>
 2cc:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <sum+0x2>
 2d0:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <sum+0x3>
 2d4:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__addsf3>
 2d8:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <sum>
 2dc:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <sum+0x1>
 2e0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <sum+0x2>
 2e4:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <sum+0x3>
		i++;
 2e8:	20 91 69 00 	lds	r18, 0x0069	; 0x800069 <i>
 2ec:	2f 5f       	subi	r18, 0xFF	; 255
 2ee:	20 93 69 00 	sts	0x0069, r18	; 0x800069 <i>
		if(i==9)
 2f2:	29 30       	cpi	r18, 0x09	; 9
 2f4:	c1 f4       	brne	.+48     	; 0x326 <Avg_reading+0x72>
		{
			average=(sum)/9.105;  //In testing and validation ,calibration 9.1125
 2f6:	24 e1       	ldi	r18, 0x14	; 20
 2f8:	3e ea       	ldi	r19, 0xAE	; 174
 2fa:	41 e1       	ldi	r20, 0x11	; 17
 2fc:	51 e4       	ldi	r21, 0x41	; 65
 2fe:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__divsf3>
 302:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <average>
 306:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <average+0x1>
 30a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <average+0x2>
 30e:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <average+0x3>
			i=0;
 312:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <i>
			sum=0;
 316:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <sum>
 31a:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <sum+0x1>
 31e:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <sum+0x2>
 322:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <sum+0x3>
 326:	08 95       	ret

00000328 <Temperature_reading>:



	void Temperature_reading(void)
	{
		volt = ADC_readChannel(0); // read channel two where the temp sensor is connect
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_readChannel>
 32e:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <volt+0x1>
 332:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <volt>
		x=(float)(5*volt)/1023; // to gain the ADC of temperature reading
 336:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <volt>
 33a:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <volt+0x1>
 33e:	cb 01       	movw	r24, r22
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	68 0f       	add	r22, r24
 34a:	79 1f       	adc	r23, r25
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__floatunsisf>
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 ec       	ldi	r19, 0xC0	; 192
 358:	4f e7       	ldi	r20, 0x7F	; 127
 35a:	54 e4       	ldi	r21, 0x44	; 68
 35c:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__divsf3>
 360:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 364:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 368:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 36c:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
		x=x*100;   //the reading of temperature
 370:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 374:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 378:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 37c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 380:	20 e0       	ldi	r18, 0x00	; 0
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	48 ec       	ldi	r20, 0xC8	; 200
 386:	52 e4       	ldi	r21, 0x42	; 66
 388:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3>
 38c:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 390:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 394:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 398:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
		Avg_reading();  //the equations of average 10 temperature reading
 39c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <Avg_reading>
 3a0:	08 95       	ret

000003a2 <__vector_8>:
#ifndef INTERRUPT_H
#define INTERRUPT_H 
void Temperature_reading(void); 
#endif
ISR (TIMER1_OVF_vect)    // Timer1 ISR
{
 3a2:	1f 92       	push	r1
 3a4:	0f 92       	push	r0
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	0f 92       	push	r0
 3aa:	11 24       	eor	r1, r1
 3ac:	2f 93       	push	r18
 3ae:	3f 93       	push	r19
 3b0:	4f 93       	push	r20
 3b2:	5f 93       	push	r21
 3b4:	6f 93       	push	r22
 3b6:	7f 93       	push	r23
 3b8:	8f 93       	push	r24
 3ba:	9f 93       	push	r25
 3bc:	af 93       	push	r26
 3be:	bf 93       	push	r27
 3c0:	ef 93       	push	r30
 3c2:	ff 93       	push	r31
	TCNT1 = 65380;  // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64"
 3c4:	84 e6       	ldi	r24, 0x64	; 100
 3c6:	9f ef       	ldi	r25, 0xFF	; 255
 3c8:	9d bd       	out	0x2d, r25	; 45
 3ca:	8c bd       	out	0x2c, r24	; 44
		Temperature_reading();  //read temperature each 100 ms 
 3cc:	0e 94 94 01 	call	0x328	; 0x328 <Temperature_reading>
	
		}
 3d0:	ff 91       	pop	r31
 3d2:	ef 91       	pop	r30
 3d4:	bf 91       	pop	r27
 3d6:	af 91       	pop	r26
 3d8:	9f 91       	pop	r25
 3da:	8f 91       	pop	r24
 3dc:	7f 91       	pop	r23
 3de:	6f 91       	pop	r22
 3e0:	5f 91       	pop	r21
 3e2:	4f 91       	pop	r20
 3e4:	3f 91       	pop	r19
 3e6:	2f 91       	pop	r18
 3e8:	0f 90       	pop	r0
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	0f 90       	pop	r0
 3ee:	1f 90       	pop	r1
 3f0:	18 95       	reti

000003f2 <setting_temp>:

	void setting_temp(void)

	{
		//counter=EEPROM_read();
		if(PINB&(1<<3)&&counter<3 )
 3f2:	b3 9b       	sbis	0x16, 3	; 22
 3f4:	1d c0       	rjmp	.+58     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
 3f6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 3fa:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 3fe:	83 30       	cpi	r24, 0x03	; 3
 400:	91 05       	cpc	r25, r1
 402:	b4 f4       	brge	.+44     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
		{
			counter++;
 404:	01 96       	adiw	r24, 0x01	; 1
 406:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 40a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
			counter_for_Timer=0;
 40e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 412:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 416:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 41a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 41e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 422:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 426:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 42a:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 42e:	1f c0       	rjmp	.+62     	; 0x46e <__stack+0xf>
		}
		else if(PINB&(1<<2)&&counter>-5)
 430:	b2 9b       	sbis	0x16, 2	; 22
 432:	1d c0       	rjmp	.+58     	; 0x46e <__stack+0xf>
 434:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 438:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 43c:	8c 3f       	cpi	r24, 0xFC	; 252
 43e:	2f ef       	ldi	r18, 0xFF	; 255
 440:	92 07       	cpc	r25, r18
 442:	ac f0       	brlt	.+42     	; 0x46e <__stack+0xf>
		{
			counter--;
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 44a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
			counter_for_Timer=0;
 44e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 452:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 456:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 45a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 45e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 462:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 466:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 46a:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		}
		
		switch(counter)
 46e:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 472:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 476:	35 96       	adiw	r30, 0x05	; 5
 478:	e9 30       	cpi	r30, 0x09	; 9
 47a:	f1 05       	cpc	r31, r1
 47c:	f0 f4       	brcc	.+60     	; 0x4ba <__stack+0x5b>
 47e:	e6 5d       	subi	r30, 0xD6	; 214
 480:	ff 4f       	sbci	r31, 0xFF	; 255
 482:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__tablejump2__>
		{
			case 1:
			PORTD=0x65;
 486:	85 e6       	ldi	r24, 0x65	; 101
 488:	82 bb       	out	0x12, r24	; 18
			break;
 48a:	17 c0       	rjmp	.+46     	; 0x4ba <__stack+0x5b>
			case -1:
			PORTD=0x55;
 48c:	85 e5       	ldi	r24, 0x55	; 85
 48e:	82 bb       	out	0x12, r24	; 18
			break;
 490:	14 c0       	rjmp	.+40     	; 0x4ba <__stack+0x5b>
			case 2:
			PORTD=0x70;
 492:	80 e7       	ldi	r24, 0x70	; 112
 494:	82 bb       	out	0x12, r24	; 18
			break;
 496:	11 c0       	rjmp	.+34     	; 0x4ba <__stack+0x5b>
			case -2:
			PORTD=0x50;
 498:	80 e5       	ldi	r24, 0x50	; 80
 49a:	82 bb       	out	0x12, r24	; 18
			break;
 49c:	0e c0       	rjmp	.+28     	; 0x4ba <__stack+0x5b>
			case 3:
			PORTD=0x75;
 49e:	85 e7       	ldi	r24, 0x75	; 117
 4a0:	82 bb       	out	0x12, r24	; 18
			break;
 4a2:	0b c0       	rjmp	.+22     	; 0x4ba <__stack+0x5b>
			case -3:
			PORTD=0x45;
 4a4:	85 e4       	ldi	r24, 0x45	; 69
 4a6:	82 bb       	out	0x12, r24	; 18
			break;
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__stack+0x5b>
			case 0:
			PORTD=0x60;
 4aa:	80 e6       	ldi	r24, 0x60	; 96
 4ac:	82 bb       	out	0x12, r24	; 18
			break;
 4ae:	05 c0       	rjmp	.+10     	; 0x4ba <__stack+0x5b>
			case -4:
			PORTD=0x40;
 4b0:	80 e4       	ldi	r24, 0x40	; 64
 4b2:	82 bb       	out	0x12, r24	; 18
			break;
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__stack+0x5b>
			case -5:
			PORTD=0x35;
 4b6:	85 e3       	ldi	r24, 0x35	; 53
 4b8:	82 bb       	out	0x12, r24	; 18
			break;
		}
		
		EEPROM_write_read(counter);   // store value of counter.
 4ba:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 4be:	0e 94 14 01 	call	0x228	; 0x228 <EEPROM_write_read>
 4c2:	08 95       	ret

000004c4 <ACTIVATION>:
		}
		
	}
	
	void ACTIVATION(uint16 value,u8 max, u8 min)
	{
 4c4:	cf 92       	push	r12
 4c6:	df 92       	push	r13
 4c8:	ef 92       	push	r14
 4ca:	ff 92       	push	r15
 4cc:	cf 93       	push	r28
		if(counter == value)
 4ce:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <counter>
 4d2:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <counter+0x1>
 4d6:	28 17       	cp	r18, r24
 4d8:	39 07       	cpc	r19, r25
 4da:	09 f0       	breq	.+2      	; 0x4de <ACTIVATION+0x1a>
 4dc:	3f c0       	rjmp	.+126    	; 0x55c <ACTIVATION+0x98>
 4de:	c4 2f       	mov	r28, r20
		{
			if(average>=max)
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__floatsisf>
 4ea:	c0 90 6c 00 	lds	r12, 0x006C	; 0x80006c <average>
 4ee:	d0 90 6d 00 	lds	r13, 0x006D	; 0x80006d <average+0x1>
 4f2:	e0 90 6e 00 	lds	r14, 0x006E	; 0x80006e <average+0x2>
 4f6:	f0 90 6f 00 	lds	r15, 0x006F	; 0x80006f <average+0x3>
 4fa:	a7 01       	movw	r20, r14
 4fc:	96 01       	movw	r18, r12
 4fe:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__cmpsf2>
 502:	18 16       	cp	r1, r24
 504:	54 f0       	brlt	.+20     	; 0x51a <ACTIVATION+0x56>
			{
				OUTPUT_MODULE_ON(PORTB,5);  //cooling element activate
 506:	88 b3       	in	r24, 0x18	; 24
 508:	80 62       	ori	r24, 0x20	; 32
 50a:	88 bb       	out	0x18, r24	; 24
				OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 50c:	88 b3       	in	r24, 0x18	; 24
 50e:	8f 7b       	andi	r24, 0xBF	; 191
 510:	88 bb       	out	0x18, r24	; 24
				OUTPUT_MODULE_ON(PORTB,4); //LED
 512:	88 b3       	in	r24, 0x18	; 24
 514:	80 61       	ori	r24, 0x10	; 16
 516:	88 bb       	out	0x18, r24	; 24
 518:	21 c0       	rjmp	.+66     	; 0x55c <ACTIVATION+0x98>
			}
			else if(average<=min)
 51a:	6c 2f       	mov	r22, r28
 51c:	70 e0       	ldi	r23, 0x00	; 0
 51e:	80 e0       	ldi	r24, 0x00	; 0
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__floatsisf>
 526:	9b 01       	movw	r18, r22
 528:	ac 01       	movw	r20, r24
 52a:	c7 01       	movw	r24, r14
 52c:	b6 01       	movw	r22, r12
 52e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__cmpsf2>
 532:	18 16       	cp	r1, r24
 534:	9c f0       	brlt	.+38     	; 0x55c <ACTIVATION+0x98>
			{
				OUTPUT_MODULE_OFF(PORTB,5);  //cooling element disactivate
 536:	88 b3       	in	r24, 0x18	; 24
 538:	8f 7d       	andi	r24, 0xDF	; 223
 53a:	88 bb       	out	0x18, r24	; 24
				OUTPUT_MODULE_ON(PORTB,6);  //Heating element activate
 53c:	88 b3       	in	r24, 0x18	; 24
 53e:	80 64       	ori	r24, 0x40	; 64
 540:	88 bb       	out	0x18, r24	; 24
				TOGGLe_BIT(PORTB,4);
 542:	98 b3       	in	r25, 0x18	; 24
 544:	80 e1       	ldi	r24, 0x10	; 16
 546:	89 27       	eor	r24, r25
 548:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 54a:	2f ed       	ldi	r18, 0xDF	; 223
 54c:	82 e2       	ldi	r24, 0x22	; 34
 54e:	92 e0       	ldi	r25, 0x02	; 2
 550:	21 50       	subi	r18, 0x01	; 1
 552:	80 40       	sbci	r24, 0x00	; 0
 554:	90 40       	sbci	r25, 0x00	; 0
 556:	e1 f7       	brne	.-8      	; 0x550 <ACTIVATION+0x8c>
 558:	00 c0       	rjmp	.+0      	; 0x55a <ACTIVATION+0x96>
 55a:	00 00       	nop
				
				
			}
		}
		
	}
 55c:	cf 91       	pop	r28
 55e:	ff 90       	pop	r15
 560:	ef 90       	pop	r14
 562:	df 90       	pop	r13
 564:	cf 90       	pop	r12
 566:	08 95       	ret

00000568 <ELEMENTS>:

	void ELEMENTS (void)
	{

		{
			switch(counter)
 568:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 56c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 570:	35 96       	adiw	r30, 0x05	; 5
 572:	e9 30       	cpi	r30, 0x09	; 9
 574:	f1 05       	cpc	r31, r1
 576:	08 f0       	brcs	.+2      	; 0x57a <ELEMENTS+0x12>
 578:	42 c0       	rjmp	.+132    	; 0x5fe <ELEMENTS+0x96>
 57a:	ed 5c       	subi	r30, 0xCD	; 205
 57c:	ff 4f       	sbci	r31, 0xFF	; 255
 57e:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__tablejump2__>
			{
				case 1:
				ACTIVATION(1,70,60);
 582:	4c e3       	ldi	r20, 0x3C	; 60
 584:	66 e4       	ldi	r22, 0x46	; 70
 586:	81 e0       	ldi	r24, 0x01	; 1
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 58e:	08 95       	ret
				case -1:
				ACTIVATION(-1,60,50);
 590:	42 e3       	ldi	r20, 0x32	; 50
 592:	6c e3       	ldi	r22, 0x3C	; 60
 594:	8f ef       	ldi	r24, 0xFF	; 255
 596:	9f ef       	ldi	r25, 0xFF	; 255
 598:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 59c:	08 95       	ret
				case 2:
				ACTIVATION(2,75,65);
 59e:	41 e4       	ldi	r20, 0x41	; 65
 5a0:	6b e4       	ldi	r22, 0x4B	; 75
 5a2:	82 e0       	ldi	r24, 0x02	; 2
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 5aa:	08 95       	ret
				case -2:
				ACTIVATION(-2,55,45);
 5ac:	4d e2       	ldi	r20, 0x2D	; 45
 5ae:	67 e3       	ldi	r22, 0x37	; 55
 5b0:	8e ef       	ldi	r24, 0xFE	; 254
 5b2:	9f ef       	ldi	r25, 0xFF	; 255
 5b4:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 5b8:	08 95       	ret
				case 3:
				ACTIVATION(3,80,70);
 5ba:	46 e4       	ldi	r20, 0x46	; 70
 5bc:	60 e5       	ldi	r22, 0x50	; 80
 5be:	83 e0       	ldi	r24, 0x03	; 3
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 5c6:	08 95       	ret
				case -3:
				ACTIVATION(-3,50,40);
 5c8:	48 e2       	ldi	r20, 0x28	; 40
 5ca:	62 e3       	ldi	r22, 0x32	; 50
 5cc:	8d ef       	ldi	r24, 0xFD	; 253
 5ce:	9f ef       	ldi	r25, 0xFF	; 255
 5d0:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 5d4:	08 95       	ret
				case 0:
				ACTIVATION(0,65,55);
 5d6:	47 e3       	ldi	r20, 0x37	; 55
 5d8:	61 e4       	ldi	r22, 0x41	; 65
 5da:	80 e0       	ldi	r24, 0x00	; 0
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 5e2:	08 95       	ret
				case -4:
				ACTIVATION(-4,45,35);
 5e4:	43 e2       	ldi	r20, 0x23	; 35
 5e6:	6d e2       	ldi	r22, 0x2D	; 45
 5e8:	8c ef       	ldi	r24, 0xFC	; 252
 5ea:	9f ef       	ldi	r25, 0xFF	; 255
 5ec:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
				break;
 5f0:	08 95       	ret
				case -5:
				ACTIVATION(-5,40,30);
 5f2:	4e e1       	ldi	r20, 0x1E	; 30
 5f4:	68 e2       	ldi	r22, 0x28	; 40
 5f6:	8b ef       	ldi	r24, 0xFB	; 251
 5f8:	9f ef       	ldi	r25, 0xFF	; 255
 5fa:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ACTIVATION>
 5fe:	08 95       	ret

00000600 <on_off_7_segment>:
		
		
	}
	void on_off_7_segment(u8 Mode)
	{
		if(Mode==1)
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	39 f4       	brne	.+14     	; 0x612 <on_off_7_segment+0x12>
		{
			OUTPUT_MODULE_OFF(PORTB,0);
 604:	88 b3       	in	r24, 0x18	; 24
 606:	8e 7f       	andi	r24, 0xFE	; 254
 608:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_OFF(PORTA,7);
 60a:	8b b3       	in	r24, 0x1b	; 27
 60c:	8f 77       	andi	r24, 0x7F	; 127
 60e:	8b bb       	out	0x1b, r24	; 27
 610:	08 95       	ret
		}
		else if(Mode==0)
 612:	81 11       	cpse	r24, r1
 614:	06 c0       	rjmp	.+12     	; 0x622 <on_off_7_segment+0x22>
		{
			OUTPUT_MODULE_ON(PORTB,0);
 616:	88 b3       	in	r24, 0x18	; 24
 618:	81 60       	ori	r24, 0x01	; 1
 61a:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_ON(PORTA,7);
 61c:	8b b3       	in	r24, 0x1b	; 27
 61e:	80 68       	ori	r24, 0x80	; 128
 620:	8b bb       	out	0x1b, r24	; 27
 622:	08 95       	ret

00000624 <current_water_temperature>:
	}
	
	
	void current_water_temperature(void)
	{
		on_off_7_segment(1);
 624:	81 e0       	ldi	r24, 0x01	; 1
 626:	0e 94 00 03 	call	0x600	; 0x600 <on_off_7_segment>
		PORTD=decimal_to_bcd(x);
 62a:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 62e:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 632:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 636:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 63a:	0e 94 cb 04 	call	0x996	; 0x996 <__fixunssfsi>
 63e:	86 2f       	mov	r24, r22
 640:	0e 94 f7 00 	call	0x1ee	; 0x1ee <decimal_to_bcd>
 644:	82 bb       	out	0x12, r24	; 18
 646:	08 95       	ret

00000648 <OFF_MODE>:


	void OFF_MODE(void)
	{

		OUTPUT_MODULE_OFF(PORTB,5);  //cooling element activate
 648:	88 b3       	in	r24, 0x18	; 24
 64a:	8f 7d       	andi	r24, 0xDF	; 223
 64c:	88 bb       	out	0x18, r24	; 24
		OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 64e:	88 b3       	in	r24, 0x18	; 24
 650:	8f 7b       	andi	r24, 0xBF	; 191
 652:	88 bb       	out	0x18, r24	; 24
		OUTPUT_MODULE_OFF(PORTB,4); //LED
 654:	88 b3       	in	r24, 0x18	; 24
 656:	8f 7e       	andi	r24, 0xEF	; 239
 658:	88 bb       	out	0x18, r24	; 24
		on_off_7_segment(0);
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	0e 94 00 03 	call	0x600	; 0x600 <on_off_7_segment>
 660:	08 95       	ret

00000662 <on_off_mode>:
	}
	
	void on_off_mode(void)
	{
		
		if(INPUT_BIT(PINB,1) && flag==0)
 662:	b1 9b       	sbis	0x16, 1	; 22
 664:	0a c0       	rjmp	.+20     	; 0x67a <on_off_mode+0x18>
 666:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 66a:	81 11       	cpse	r24, r1
 66c:	06 c0       	rjmp	.+12     	; 0x67a <on_off_mode+0x18>
		{
			
			
			flag=1;
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <flag>
			while(INPUT_BIT(PINB,1));
 674:	b1 99       	sbic	0x16, 1	; 22
 676:	fe cf       	rjmp	.-4      	; 0x674 <on_off_mode+0x12>
 678:	08 95       	ret
		}
		else if(INPUT_BIT(PINB,1) && flag==1)
 67a:	b1 9b       	sbis	0x16, 1	; 22
 67c:	0a c0       	rjmp	.+20     	; 0x692 <on_off_mode+0x30>
 67e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 682:	81 30       	cpi	r24, 0x01	; 1
 684:	31 f4       	brne	.+12     	; 0x692 <on_off_mode+0x30>
		{
			while(INPUT_BIT(PINB,1));
 686:	b1 99       	sbic	0x16, 1	; 22
 688:	fe cf       	rjmp	.-4      	; 0x686 <on_off_mode+0x24>
			
			flag=0;
 68a:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <flag>
			OFF_MODE();
 68e:	0e 94 24 03 	call	0x648	; 0x648 <OFF_MODE>
 692:	08 95       	ret

00000694 <ON_MODE_Process>:
		
	}
	
	void ON_MODE_Process (void)
	{
		while(flag==1)
 694:	8d c0       	rjmp	.+282    	; 0x7b0 <ON_MODE_Process+0x11c>
		{
			
			current_water_temperature();
 696:	0e 94 12 03 	call	0x624	; 0x624 <current_water_temperature>
			ELEMENTS();
 69a:	0e 94 b4 02 	call	0x568	; 0x568 <ELEMENTS>
			on_off_mode();
 69e:	0e 94 31 03 	call	0x662	; 0x662 <on_off_mode>
			if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
 6a2:	b3 99       	sbic	0x16, 3	; 22
 6a4:	5b c0       	rjmp	.+182    	; 0x75c <ON_MODE_Process+0xc8>
 6a6:	b2 99       	sbic	0x16, 2	; 22
 6a8:	59 c0       	rjmp	.+178    	; 0x75c <ON_MODE_Process+0xc8>
 6aa:	82 c0       	rjmp	.+260    	; 0x7b0 <ON_MODE_Process+0x11c>
			{
				
				while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
				{
					on_off_7_segment(1);
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	0e 94 00 03 	call	0x600	; 0x600 <on_off_7_segment>
					setting_temp();
 6b2:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <setting_temp>
					ELEMENTS();
 6b6:	0e 94 b4 02 	call	0x568	; 0x568 <ELEMENTS>
					on_off_mode();
 6ba:	0e 94 31 03 	call	0x662	; 0x662 <on_off_mode>
					counter_for_Timer++;
 6be:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 6c2:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6c6:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 6ca:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 6ce:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 6d2:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 6d6:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 6da:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 6de:	a1 e0       	ldi	r26, 0x01	; 1
 6e0:	0e 94 a4 07 	call	0xf48	; 0xf48 <__adddi3_s8>
 6e4:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 6e8:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6ec:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 6f0:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 6f4:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 6f8:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 6fc:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 700:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
					on_off_7_segment(0);
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	0e 94 00 03 	call	0x600	; 0x600 <on_off_7_segment>
					setting_temp();
 70a:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <setting_temp>
					ELEMENTS();
 70e:	0e 94 b4 02 	call	0x568	; 0x568 <ELEMENTS>
					on_off_mode();
 712:	0e 94 31 03 	call	0x662	; 0x662 <on_off_mode>
					counter_for_Timer++;
 716:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 71a:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 71e:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 722:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 726:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 72a:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 72e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 732:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 736:	a1 e0       	ldi	r26, 0x01	; 1
 738:	0e 94 a4 07 	call	0xf48	; 0xf48 <__adddi3_s8>
 73c:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 740:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 744:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 748:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 74c:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 750:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 754:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 758:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
			ELEMENTS();
			on_off_mode();
			if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
			{
				
				while( counter_for_Timer<10 &&flag==1 ) //In testing and validation ,calibration
 75c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 760:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 764:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 768:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 76c:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 770:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 774:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 778:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 77c:	a9 e0       	ldi	r26, 0x09	; 9
 77e:	0e 94 b0 07 	call	0xf60	; 0xf60 <__cmpdi2_s8>
 782:	09 f0       	breq	.+2      	; 0x786 <ON_MODE_Process+0xf2>
 784:	2c f4       	brge	.+10     	; 0x790 <ON_MODE_Process+0xfc>
 786:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 78a:	81 30       	cpi	r24, 0x01	; 1
 78c:	09 f4       	brne	.+2      	; 0x790 <ON_MODE_Process+0xfc>
 78e:	8e cf       	rjmp	.-228    	; 0x6ac <ON_MODE_Process+0x18>
					counter_for_Timer++;
					
					
					
				}
				counter_for_Timer=0;
 790:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 794:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 798:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 79c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 7a0:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 7a4:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 7a8:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 7ac:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		
	}
	
	void ON_MODE_Process (void)
	{
		while(flag==1)
 7b0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 7b4:	81 30       	cpi	r24, 0x01	; 1
 7b6:	09 f4       	brne	.+2      	; 0x7ba <ON_MODE_Process+0x126>
 7b8:	6e cf       	rjmp	.-292    	; 0x696 <ON_MODE_Process+0x2>
					
				}
				counter_for_Timer=0;
			}
		}
	}
 7ba:	08 95       	ret

000007bc <main>:
GLOBAL_VARIABLES_H;
PROTOTYPES_H;
	 /*the main process*/
 int  main (void)
	{	 	
	DATA_DIRECTION_REGISTERS_H;
 7bc:	0e 94 29 01 	call	0x252	; 0x252 <Data_Direction_registers>
INITIALIZATION_VARIABLES_H;
 7c0:	0e 94 44 01 	call	0x288	; 0x288 <initialization_variables>
		//super loop for repeating this process infinitely
		while(1)  
		{
			 on_off_mode();
 7c4:	0e 94 31 03 	call	0x662	; 0x662 <on_off_mode>
		ON_MODE_Process();
 7c8:	0e 94 4a 03 	call	0x694	; 0x694 <ON_MODE_Process>
 7cc:	fb cf       	rjmp	.-10     	; 0x7c4 <main+0x8>

000007ce <__subsf3>:
 7ce:	50 58       	subi	r21, 0x80	; 128

000007d0 <__addsf3>:
 7d0:	bb 27       	eor	r27, r27
 7d2:	aa 27       	eor	r26, r26
 7d4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__addsf3x>
 7d8:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>
 7dc:	0e 94 64 05 	call	0xac8	; 0xac8 <__fp_pscA>
 7e0:	38 f0       	brcs	.+14     	; 0x7f0 <__addsf3+0x20>
 7e2:	0e 94 6b 05 	call	0xad6	; 0xad6 <__fp_pscB>
 7e6:	20 f0       	brcs	.+8      	; 0x7f0 <__addsf3+0x20>
 7e8:	39 f4       	brne	.+14     	; 0x7f8 <__addsf3+0x28>
 7ea:	9f 3f       	cpi	r25, 0xFF	; 255
 7ec:	19 f4       	brne	.+6      	; 0x7f4 <__addsf3+0x24>
 7ee:	26 f4       	brtc	.+8      	; 0x7f8 <__addsf3+0x28>
 7f0:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>
 7f4:	0e f4       	brtc	.+2      	; 0x7f8 <__addsf3+0x28>
 7f6:	e0 95       	com	r30
 7f8:	e7 fb       	bst	r30, 7
 7fa:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>

000007fe <__addsf3x>:
 7fe:	e9 2f       	mov	r30, r25
 800:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_split3>
 804:	58 f3       	brcs	.-42     	; 0x7dc <__addsf3+0xc>
 806:	ba 17       	cp	r27, r26
 808:	62 07       	cpc	r22, r18
 80a:	73 07       	cpc	r23, r19
 80c:	84 07       	cpc	r24, r20
 80e:	95 07       	cpc	r25, r21
 810:	20 f0       	brcs	.+8      	; 0x81a <__addsf3x+0x1c>
 812:	79 f4       	brne	.+30     	; 0x832 <__addsf3x+0x34>
 814:	a6 f5       	brtc	.+104    	; 0x87e <__addsf3x+0x80>
 816:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_zero>
 81a:	0e f4       	brtc	.+2      	; 0x81e <__addsf3x+0x20>
 81c:	e0 95       	com	r30
 81e:	0b 2e       	mov	r0, r27
 820:	ba 2f       	mov	r27, r26
 822:	a0 2d       	mov	r26, r0
 824:	0b 01       	movw	r0, r22
 826:	b9 01       	movw	r22, r18
 828:	90 01       	movw	r18, r0
 82a:	0c 01       	movw	r0, r24
 82c:	ca 01       	movw	r24, r20
 82e:	a0 01       	movw	r20, r0
 830:	11 24       	eor	r1, r1
 832:	ff 27       	eor	r31, r31
 834:	59 1b       	sub	r21, r25
 836:	99 f0       	breq	.+38     	; 0x85e <__addsf3x+0x60>
 838:	59 3f       	cpi	r21, 0xF9	; 249
 83a:	50 f4       	brcc	.+20     	; 0x850 <__addsf3x+0x52>
 83c:	50 3e       	cpi	r21, 0xE0	; 224
 83e:	68 f1       	brcs	.+90     	; 0x89a <__addsf3x+0x9c>
 840:	1a 16       	cp	r1, r26
 842:	f0 40       	sbci	r31, 0x00	; 0
 844:	a2 2f       	mov	r26, r18
 846:	23 2f       	mov	r18, r19
 848:	34 2f       	mov	r19, r20
 84a:	44 27       	eor	r20, r20
 84c:	58 5f       	subi	r21, 0xF8	; 248
 84e:	f3 cf       	rjmp	.-26     	; 0x836 <__addsf3x+0x38>
 850:	46 95       	lsr	r20
 852:	37 95       	ror	r19
 854:	27 95       	ror	r18
 856:	a7 95       	ror	r26
 858:	f0 40       	sbci	r31, 0x00	; 0
 85a:	53 95       	inc	r21
 85c:	c9 f7       	brne	.-14     	; 0x850 <__addsf3x+0x52>
 85e:	7e f4       	brtc	.+30     	; 0x87e <__addsf3x+0x80>
 860:	1f 16       	cp	r1, r31
 862:	ba 0b       	sbc	r27, r26
 864:	62 0b       	sbc	r22, r18
 866:	73 0b       	sbc	r23, r19
 868:	84 0b       	sbc	r24, r20
 86a:	ba f0       	brmi	.+46     	; 0x89a <__addsf3x+0x9c>
 86c:	91 50       	subi	r25, 0x01	; 1
 86e:	a1 f0       	breq	.+40     	; 0x898 <__addsf3x+0x9a>
 870:	ff 0f       	add	r31, r31
 872:	bb 1f       	adc	r27, r27
 874:	66 1f       	adc	r22, r22
 876:	77 1f       	adc	r23, r23
 878:	88 1f       	adc	r24, r24
 87a:	c2 f7       	brpl	.-16     	; 0x86c <__addsf3x+0x6e>
 87c:	0e c0       	rjmp	.+28     	; 0x89a <__addsf3x+0x9c>
 87e:	ba 0f       	add	r27, r26
 880:	62 1f       	adc	r22, r18
 882:	73 1f       	adc	r23, r19
 884:	84 1f       	adc	r24, r20
 886:	48 f4       	brcc	.+18     	; 0x89a <__addsf3x+0x9c>
 888:	87 95       	ror	r24
 88a:	77 95       	ror	r23
 88c:	67 95       	ror	r22
 88e:	b7 95       	ror	r27
 890:	f7 95       	ror	r31
 892:	9e 3f       	cpi	r25, 0xFE	; 254
 894:	08 f0       	brcs	.+2      	; 0x898 <__addsf3x+0x9a>
 896:	b0 cf       	rjmp	.-160    	; 0x7f8 <__addsf3+0x28>
 898:	93 95       	inc	r25
 89a:	88 0f       	add	r24, r24
 89c:	08 f0       	brcs	.+2      	; 0x8a0 <__addsf3x+0xa2>
 89e:	99 27       	eor	r25, r25
 8a0:	ee 0f       	add	r30, r30
 8a2:	97 95       	ror	r25
 8a4:	87 95       	ror	r24
 8a6:	08 95       	ret

000008a8 <__cmpsf2>:
 8a8:	0e 94 37 05 	call	0xa6e	; 0xa6e <__fp_cmp>
 8ac:	08 f4       	brcc	.+2      	; 0x8b0 <__cmpsf2+0x8>
 8ae:	81 e0       	ldi	r24, 0x01	; 1
 8b0:	08 95       	ret

000008b2 <__divsf3>:
 8b2:	0e 94 6d 04 	call	0x8da	; 0x8da <__divsf3x>
 8b6:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>
 8ba:	0e 94 6b 05 	call	0xad6	; 0xad6 <__fp_pscB>
 8be:	58 f0       	brcs	.+22     	; 0x8d6 <__divsf3+0x24>
 8c0:	0e 94 64 05 	call	0xac8	; 0xac8 <__fp_pscA>
 8c4:	40 f0       	brcs	.+16     	; 0x8d6 <__divsf3+0x24>
 8c6:	29 f4       	brne	.+10     	; 0x8d2 <__divsf3+0x20>
 8c8:	5f 3f       	cpi	r21, 0xFF	; 255
 8ca:	29 f0       	breq	.+10     	; 0x8d6 <__divsf3+0x24>
 8cc:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 8d0:	51 11       	cpse	r21, r1
 8d2:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 8d6:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>

000008da <__divsf3x>:
 8da:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_split3>
 8de:	68 f3       	brcs	.-38     	; 0x8ba <__divsf3+0x8>

000008e0 <__divsf3_pse>:
 8e0:	99 23       	and	r25, r25
 8e2:	b1 f3       	breq	.-20     	; 0x8d0 <__divsf3+0x1e>
 8e4:	55 23       	and	r21, r21
 8e6:	91 f3       	breq	.-28     	; 0x8cc <__divsf3+0x1a>
 8e8:	95 1b       	sub	r25, r21
 8ea:	55 0b       	sbc	r21, r21
 8ec:	bb 27       	eor	r27, r27
 8ee:	aa 27       	eor	r26, r26
 8f0:	62 17       	cp	r22, r18
 8f2:	73 07       	cpc	r23, r19
 8f4:	84 07       	cpc	r24, r20
 8f6:	38 f0       	brcs	.+14     	; 0x906 <__divsf3_pse+0x26>
 8f8:	9f 5f       	subi	r25, 0xFF	; 255
 8fa:	5f 4f       	sbci	r21, 0xFF	; 255
 8fc:	22 0f       	add	r18, r18
 8fe:	33 1f       	adc	r19, r19
 900:	44 1f       	adc	r20, r20
 902:	aa 1f       	adc	r26, r26
 904:	a9 f3       	breq	.-22     	; 0x8f0 <__divsf3_pse+0x10>
 906:	35 d0       	rcall	.+106    	; 0x972 <__divsf3_pse+0x92>
 908:	0e 2e       	mov	r0, r30
 90a:	3a f0       	brmi	.+14     	; 0x91a <__divsf3_pse+0x3a>
 90c:	e0 e8       	ldi	r30, 0x80	; 128
 90e:	32 d0       	rcall	.+100    	; 0x974 <__divsf3_pse+0x94>
 910:	91 50       	subi	r25, 0x01	; 1
 912:	50 40       	sbci	r21, 0x00	; 0
 914:	e6 95       	lsr	r30
 916:	00 1c       	adc	r0, r0
 918:	ca f7       	brpl	.-14     	; 0x90c <__divsf3_pse+0x2c>
 91a:	2b d0       	rcall	.+86     	; 0x972 <__divsf3_pse+0x92>
 91c:	fe 2f       	mov	r31, r30
 91e:	29 d0       	rcall	.+82     	; 0x972 <__divsf3_pse+0x92>
 920:	66 0f       	add	r22, r22
 922:	77 1f       	adc	r23, r23
 924:	88 1f       	adc	r24, r24
 926:	bb 1f       	adc	r27, r27
 928:	26 17       	cp	r18, r22
 92a:	37 07       	cpc	r19, r23
 92c:	48 07       	cpc	r20, r24
 92e:	ab 07       	cpc	r26, r27
 930:	b0 e8       	ldi	r27, 0x80	; 128
 932:	09 f0       	breq	.+2      	; 0x936 <__divsf3_pse+0x56>
 934:	bb 0b       	sbc	r27, r27
 936:	80 2d       	mov	r24, r0
 938:	bf 01       	movw	r22, r30
 93a:	ff 27       	eor	r31, r31
 93c:	93 58       	subi	r25, 0x83	; 131
 93e:	5f 4f       	sbci	r21, 0xFF	; 255
 940:	3a f0       	brmi	.+14     	; 0x950 <__divsf3_pse+0x70>
 942:	9e 3f       	cpi	r25, 0xFE	; 254
 944:	51 05       	cpc	r21, r1
 946:	78 f0       	brcs	.+30     	; 0x966 <__divsf3_pse+0x86>
 948:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 94c:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 950:	5f 3f       	cpi	r21, 0xFF	; 255
 952:	e4 f3       	brlt	.-8      	; 0x94c <__divsf3_pse+0x6c>
 954:	98 3e       	cpi	r25, 0xE8	; 232
 956:	d4 f3       	brlt	.-12     	; 0x94c <__divsf3_pse+0x6c>
 958:	86 95       	lsr	r24
 95a:	77 95       	ror	r23
 95c:	67 95       	ror	r22
 95e:	b7 95       	ror	r27
 960:	f7 95       	ror	r31
 962:	9f 5f       	subi	r25, 0xFF	; 255
 964:	c9 f7       	brne	.-14     	; 0x958 <__divsf3_pse+0x78>
 966:	88 0f       	add	r24, r24
 968:	91 1d       	adc	r25, r1
 96a:	96 95       	lsr	r25
 96c:	87 95       	ror	r24
 96e:	97 f9       	bld	r25, 7
 970:	08 95       	ret
 972:	e1 e0       	ldi	r30, 0x01	; 1
 974:	66 0f       	add	r22, r22
 976:	77 1f       	adc	r23, r23
 978:	88 1f       	adc	r24, r24
 97a:	bb 1f       	adc	r27, r27
 97c:	62 17       	cp	r22, r18
 97e:	73 07       	cpc	r23, r19
 980:	84 07       	cpc	r24, r20
 982:	ba 07       	cpc	r27, r26
 984:	20 f0       	brcs	.+8      	; 0x98e <__divsf3_pse+0xae>
 986:	62 1b       	sub	r22, r18
 988:	73 0b       	sbc	r23, r19
 98a:	84 0b       	sbc	r24, r20
 98c:	ba 0b       	sbc	r27, r26
 98e:	ee 1f       	adc	r30, r30
 990:	88 f7       	brcc	.-30     	; 0x974 <__divsf3_pse+0x94>
 992:	e0 95       	com	r30
 994:	08 95       	ret

00000996 <__fixunssfsi>:
 996:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_splitA>
 99a:	88 f0       	brcs	.+34     	; 0x9be <__fixunssfsi+0x28>
 99c:	9f 57       	subi	r25, 0x7F	; 127
 99e:	98 f0       	brcs	.+38     	; 0x9c6 <__fixunssfsi+0x30>
 9a0:	b9 2f       	mov	r27, r25
 9a2:	99 27       	eor	r25, r25
 9a4:	b7 51       	subi	r27, 0x17	; 23
 9a6:	b0 f0       	brcs	.+44     	; 0x9d4 <__fixunssfsi+0x3e>
 9a8:	e1 f0       	breq	.+56     	; 0x9e2 <__fixunssfsi+0x4c>
 9aa:	66 0f       	add	r22, r22
 9ac:	77 1f       	adc	r23, r23
 9ae:	88 1f       	adc	r24, r24
 9b0:	99 1f       	adc	r25, r25
 9b2:	1a f0       	brmi	.+6      	; 0x9ba <__fixunssfsi+0x24>
 9b4:	ba 95       	dec	r27
 9b6:	c9 f7       	brne	.-14     	; 0x9aa <__fixunssfsi+0x14>
 9b8:	14 c0       	rjmp	.+40     	; 0x9e2 <__fixunssfsi+0x4c>
 9ba:	b1 30       	cpi	r27, 0x01	; 1
 9bc:	91 f0       	breq	.+36     	; 0x9e2 <__fixunssfsi+0x4c>
 9be:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__fp_zero>
 9c2:	b1 e0       	ldi	r27, 0x01	; 1
 9c4:	08 95       	ret
 9c6:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_zero>
 9ca:	67 2f       	mov	r22, r23
 9cc:	78 2f       	mov	r23, r24
 9ce:	88 27       	eor	r24, r24
 9d0:	b8 5f       	subi	r27, 0xF8	; 248
 9d2:	39 f0       	breq	.+14     	; 0x9e2 <__fixunssfsi+0x4c>
 9d4:	b9 3f       	cpi	r27, 0xF9	; 249
 9d6:	cc f3       	brlt	.-14     	; 0x9ca <__fixunssfsi+0x34>
 9d8:	86 95       	lsr	r24
 9da:	77 95       	ror	r23
 9dc:	67 95       	ror	r22
 9de:	b3 95       	inc	r27
 9e0:	d9 f7       	brne	.-10     	; 0x9d8 <__fixunssfsi+0x42>
 9e2:	3e f4       	brtc	.+14     	; 0x9f2 <__fixunssfsi+0x5c>
 9e4:	90 95       	com	r25
 9e6:	80 95       	com	r24
 9e8:	70 95       	com	r23
 9ea:	61 95       	neg	r22
 9ec:	7f 4f       	sbci	r23, 0xFF	; 255
 9ee:	8f 4f       	sbci	r24, 0xFF	; 255
 9f0:	9f 4f       	sbci	r25, 0xFF	; 255
 9f2:	08 95       	ret

000009f4 <__floatunsisf>:
 9f4:	e8 94       	clt
 9f6:	09 c0       	rjmp	.+18     	; 0xa0a <__floatsisf+0x12>

000009f8 <__floatsisf>:
 9f8:	97 fb       	bst	r25, 7
 9fa:	3e f4       	brtc	.+14     	; 0xa0a <__floatsisf+0x12>
 9fc:	90 95       	com	r25
 9fe:	80 95       	com	r24
 a00:	70 95       	com	r23
 a02:	61 95       	neg	r22
 a04:	7f 4f       	sbci	r23, 0xFF	; 255
 a06:	8f 4f       	sbci	r24, 0xFF	; 255
 a08:	9f 4f       	sbci	r25, 0xFF	; 255
 a0a:	99 23       	and	r25, r25
 a0c:	a9 f0       	breq	.+42     	; 0xa38 <__floatsisf+0x40>
 a0e:	f9 2f       	mov	r31, r25
 a10:	96 e9       	ldi	r25, 0x96	; 150
 a12:	bb 27       	eor	r27, r27
 a14:	93 95       	inc	r25
 a16:	f6 95       	lsr	r31
 a18:	87 95       	ror	r24
 a1a:	77 95       	ror	r23
 a1c:	67 95       	ror	r22
 a1e:	b7 95       	ror	r27
 a20:	f1 11       	cpse	r31, r1
 a22:	f8 cf       	rjmp	.-16     	; 0xa14 <__floatsisf+0x1c>
 a24:	fa f4       	brpl	.+62     	; 0xa64 <__floatsisf+0x6c>
 a26:	bb 0f       	add	r27, r27
 a28:	11 f4       	brne	.+4      	; 0xa2e <__floatsisf+0x36>
 a2a:	60 ff       	sbrs	r22, 0
 a2c:	1b c0       	rjmp	.+54     	; 0xa64 <__floatsisf+0x6c>
 a2e:	6f 5f       	subi	r22, 0xFF	; 255
 a30:	7f 4f       	sbci	r23, 0xFF	; 255
 a32:	8f 4f       	sbci	r24, 0xFF	; 255
 a34:	9f 4f       	sbci	r25, 0xFF	; 255
 a36:	16 c0       	rjmp	.+44     	; 0xa64 <__floatsisf+0x6c>
 a38:	88 23       	and	r24, r24
 a3a:	11 f0       	breq	.+4      	; 0xa40 <__floatsisf+0x48>
 a3c:	96 e9       	ldi	r25, 0x96	; 150
 a3e:	11 c0       	rjmp	.+34     	; 0xa62 <__floatsisf+0x6a>
 a40:	77 23       	and	r23, r23
 a42:	21 f0       	breq	.+8      	; 0xa4c <__floatsisf+0x54>
 a44:	9e e8       	ldi	r25, 0x8E	; 142
 a46:	87 2f       	mov	r24, r23
 a48:	76 2f       	mov	r23, r22
 a4a:	05 c0       	rjmp	.+10     	; 0xa56 <__floatsisf+0x5e>
 a4c:	66 23       	and	r22, r22
 a4e:	71 f0       	breq	.+28     	; 0xa6c <__floatsisf+0x74>
 a50:	96 e8       	ldi	r25, 0x86	; 134
 a52:	86 2f       	mov	r24, r22
 a54:	70 e0       	ldi	r23, 0x00	; 0
 a56:	60 e0       	ldi	r22, 0x00	; 0
 a58:	2a f0       	brmi	.+10     	; 0xa64 <__floatsisf+0x6c>
 a5a:	9a 95       	dec	r25
 a5c:	66 0f       	add	r22, r22
 a5e:	77 1f       	adc	r23, r23
 a60:	88 1f       	adc	r24, r24
 a62:	da f7       	brpl	.-10     	; 0xa5a <__floatsisf+0x62>
 a64:	88 0f       	add	r24, r24
 a66:	96 95       	lsr	r25
 a68:	87 95       	ror	r24
 a6a:	97 f9       	bld	r25, 7
 a6c:	08 95       	ret

00000a6e <__fp_cmp>:
 a6e:	99 0f       	add	r25, r25
 a70:	00 08       	sbc	r0, r0
 a72:	55 0f       	add	r21, r21
 a74:	aa 0b       	sbc	r26, r26
 a76:	e0 e8       	ldi	r30, 0x80	; 128
 a78:	fe ef       	ldi	r31, 0xFE	; 254
 a7a:	16 16       	cp	r1, r22
 a7c:	17 06       	cpc	r1, r23
 a7e:	e8 07       	cpc	r30, r24
 a80:	f9 07       	cpc	r31, r25
 a82:	c0 f0       	brcs	.+48     	; 0xab4 <__fp_cmp+0x46>
 a84:	12 16       	cp	r1, r18
 a86:	13 06       	cpc	r1, r19
 a88:	e4 07       	cpc	r30, r20
 a8a:	f5 07       	cpc	r31, r21
 a8c:	98 f0       	brcs	.+38     	; 0xab4 <__fp_cmp+0x46>
 a8e:	62 1b       	sub	r22, r18
 a90:	73 0b       	sbc	r23, r19
 a92:	84 0b       	sbc	r24, r20
 a94:	95 0b       	sbc	r25, r21
 a96:	39 f4       	brne	.+14     	; 0xaa6 <__fp_cmp+0x38>
 a98:	0a 26       	eor	r0, r26
 a9a:	61 f0       	breq	.+24     	; 0xab4 <__fp_cmp+0x46>
 a9c:	23 2b       	or	r18, r19
 a9e:	24 2b       	or	r18, r20
 aa0:	25 2b       	or	r18, r21
 aa2:	21 f4       	brne	.+8      	; 0xaac <__fp_cmp+0x3e>
 aa4:	08 95       	ret
 aa6:	0a 26       	eor	r0, r26
 aa8:	09 f4       	brne	.+2      	; 0xaac <__fp_cmp+0x3e>
 aaa:	a1 40       	sbci	r26, 0x01	; 1
 aac:	a6 95       	lsr	r26
 aae:	8f ef       	ldi	r24, 0xFF	; 255
 ab0:	81 1d       	adc	r24, r1
 ab2:	81 1d       	adc	r24, r1
 ab4:	08 95       	ret

00000ab6 <__fp_inf>:
 ab6:	97 f9       	bld	r25, 7
 ab8:	9f 67       	ori	r25, 0x7F	; 127
 aba:	80 e8       	ldi	r24, 0x80	; 128
 abc:	70 e0       	ldi	r23, 0x00	; 0
 abe:	60 e0       	ldi	r22, 0x00	; 0
 ac0:	08 95       	ret

00000ac2 <__fp_nan>:
 ac2:	9f ef       	ldi	r25, 0xFF	; 255
 ac4:	80 ec       	ldi	r24, 0xC0	; 192
 ac6:	08 95       	ret

00000ac8 <__fp_pscA>:
 ac8:	00 24       	eor	r0, r0
 aca:	0a 94       	dec	r0
 acc:	16 16       	cp	r1, r22
 ace:	17 06       	cpc	r1, r23
 ad0:	18 06       	cpc	r1, r24
 ad2:	09 06       	cpc	r0, r25
 ad4:	08 95       	ret

00000ad6 <__fp_pscB>:
 ad6:	00 24       	eor	r0, r0
 ad8:	0a 94       	dec	r0
 ada:	12 16       	cp	r1, r18
 adc:	13 06       	cpc	r1, r19
 ade:	14 06       	cpc	r1, r20
 ae0:	05 06       	cpc	r0, r21
 ae2:	08 95       	ret

00000ae4 <__fp_round>:
 ae4:	09 2e       	mov	r0, r25
 ae6:	03 94       	inc	r0
 ae8:	00 0c       	add	r0, r0
 aea:	11 f4       	brne	.+4      	; 0xaf0 <__fp_round+0xc>
 aec:	88 23       	and	r24, r24
 aee:	52 f0       	brmi	.+20     	; 0xb04 <__fp_round+0x20>
 af0:	bb 0f       	add	r27, r27
 af2:	40 f4       	brcc	.+16     	; 0xb04 <__fp_round+0x20>
 af4:	bf 2b       	or	r27, r31
 af6:	11 f4       	brne	.+4      	; 0xafc <__fp_round+0x18>
 af8:	60 ff       	sbrs	r22, 0
 afa:	04 c0       	rjmp	.+8      	; 0xb04 <__fp_round+0x20>
 afc:	6f 5f       	subi	r22, 0xFF	; 255
 afe:	7f 4f       	sbci	r23, 0xFF	; 255
 b00:	8f 4f       	sbci	r24, 0xFF	; 255
 b02:	9f 4f       	sbci	r25, 0xFF	; 255
 b04:	08 95       	ret

00000b06 <__fp_split3>:
 b06:	57 fd       	sbrc	r21, 7
 b08:	90 58       	subi	r25, 0x80	; 128
 b0a:	44 0f       	add	r20, r20
 b0c:	55 1f       	adc	r21, r21
 b0e:	59 f0       	breq	.+22     	; 0xb26 <__fp_splitA+0x10>
 b10:	5f 3f       	cpi	r21, 0xFF	; 255
 b12:	71 f0       	breq	.+28     	; 0xb30 <__fp_splitA+0x1a>
 b14:	47 95       	ror	r20

00000b16 <__fp_splitA>:
 b16:	88 0f       	add	r24, r24
 b18:	97 fb       	bst	r25, 7
 b1a:	99 1f       	adc	r25, r25
 b1c:	61 f0       	breq	.+24     	; 0xb36 <__fp_splitA+0x20>
 b1e:	9f 3f       	cpi	r25, 0xFF	; 255
 b20:	79 f0       	breq	.+30     	; 0xb40 <__fp_splitA+0x2a>
 b22:	87 95       	ror	r24
 b24:	08 95       	ret
 b26:	12 16       	cp	r1, r18
 b28:	13 06       	cpc	r1, r19
 b2a:	14 06       	cpc	r1, r20
 b2c:	55 1f       	adc	r21, r21
 b2e:	f2 cf       	rjmp	.-28     	; 0xb14 <__fp_split3+0xe>
 b30:	46 95       	lsr	r20
 b32:	f1 df       	rcall	.-30     	; 0xb16 <__fp_splitA>
 b34:	08 c0       	rjmp	.+16     	; 0xb46 <__fp_splitA+0x30>
 b36:	16 16       	cp	r1, r22
 b38:	17 06       	cpc	r1, r23
 b3a:	18 06       	cpc	r1, r24
 b3c:	99 1f       	adc	r25, r25
 b3e:	f1 cf       	rjmp	.-30     	; 0xb22 <__fp_splitA+0xc>
 b40:	86 95       	lsr	r24
 b42:	71 05       	cpc	r23, r1
 b44:	61 05       	cpc	r22, r1
 b46:	08 94       	sec
 b48:	08 95       	ret

00000b4a <__fp_zero>:
 b4a:	e8 94       	clt

00000b4c <__fp_szero>:
 b4c:	bb 27       	eor	r27, r27
 b4e:	66 27       	eor	r22, r22
 b50:	77 27       	eor	r23, r23
 b52:	cb 01       	movw	r24, r22
 b54:	97 f9       	bld	r25, 7
 b56:	08 95       	ret

00000b58 <__mulsf3>:
 b58:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__mulsf3x>
 b5c:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>
 b60:	0e 94 64 05 	call	0xac8	; 0xac8 <__fp_pscA>
 b64:	38 f0       	brcs	.+14     	; 0xb74 <__mulsf3+0x1c>
 b66:	0e 94 6b 05 	call	0xad6	; 0xad6 <__fp_pscB>
 b6a:	20 f0       	brcs	.+8      	; 0xb74 <__mulsf3+0x1c>
 b6c:	95 23       	and	r25, r21
 b6e:	11 f0       	breq	.+4      	; 0xb74 <__mulsf3+0x1c>
 b70:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 b74:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>
 b78:	11 24       	eor	r1, r1
 b7a:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>

00000b7e <__mulsf3x>:
 b7e:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_split3>
 b82:	70 f3       	brcs	.-36     	; 0xb60 <__mulsf3+0x8>

00000b84 <__mulsf3_pse>:
 b84:	95 9f       	mul	r25, r21
 b86:	c1 f3       	breq	.-16     	; 0xb78 <__mulsf3+0x20>
 b88:	95 0f       	add	r25, r21
 b8a:	50 e0       	ldi	r21, 0x00	; 0
 b8c:	55 1f       	adc	r21, r21
 b8e:	62 9f       	mul	r22, r18
 b90:	f0 01       	movw	r30, r0
 b92:	72 9f       	mul	r23, r18
 b94:	bb 27       	eor	r27, r27
 b96:	f0 0d       	add	r31, r0
 b98:	b1 1d       	adc	r27, r1
 b9a:	63 9f       	mul	r22, r19
 b9c:	aa 27       	eor	r26, r26
 b9e:	f0 0d       	add	r31, r0
 ba0:	b1 1d       	adc	r27, r1
 ba2:	aa 1f       	adc	r26, r26
 ba4:	64 9f       	mul	r22, r20
 ba6:	66 27       	eor	r22, r22
 ba8:	b0 0d       	add	r27, r0
 baa:	a1 1d       	adc	r26, r1
 bac:	66 1f       	adc	r22, r22
 bae:	82 9f       	mul	r24, r18
 bb0:	22 27       	eor	r18, r18
 bb2:	b0 0d       	add	r27, r0
 bb4:	a1 1d       	adc	r26, r1
 bb6:	62 1f       	adc	r22, r18
 bb8:	73 9f       	mul	r23, r19
 bba:	b0 0d       	add	r27, r0
 bbc:	a1 1d       	adc	r26, r1
 bbe:	62 1f       	adc	r22, r18
 bc0:	83 9f       	mul	r24, r19
 bc2:	a0 0d       	add	r26, r0
 bc4:	61 1d       	adc	r22, r1
 bc6:	22 1f       	adc	r18, r18
 bc8:	74 9f       	mul	r23, r20
 bca:	33 27       	eor	r19, r19
 bcc:	a0 0d       	add	r26, r0
 bce:	61 1d       	adc	r22, r1
 bd0:	23 1f       	adc	r18, r19
 bd2:	84 9f       	mul	r24, r20
 bd4:	60 0d       	add	r22, r0
 bd6:	21 1d       	adc	r18, r1
 bd8:	82 2f       	mov	r24, r18
 bda:	76 2f       	mov	r23, r22
 bdc:	6a 2f       	mov	r22, r26
 bde:	11 24       	eor	r1, r1
 be0:	9f 57       	subi	r25, 0x7F	; 127
 be2:	50 40       	sbci	r21, 0x00	; 0
 be4:	9a f0       	brmi	.+38     	; 0xc0c <__mulsf3_pse+0x88>
 be6:	f1 f0       	breq	.+60     	; 0xc24 <__mulsf3_pse+0xa0>
 be8:	88 23       	and	r24, r24
 bea:	4a f0       	brmi	.+18     	; 0xbfe <__mulsf3_pse+0x7a>
 bec:	ee 0f       	add	r30, r30
 bee:	ff 1f       	adc	r31, r31
 bf0:	bb 1f       	adc	r27, r27
 bf2:	66 1f       	adc	r22, r22
 bf4:	77 1f       	adc	r23, r23
 bf6:	88 1f       	adc	r24, r24
 bf8:	91 50       	subi	r25, 0x01	; 1
 bfa:	50 40       	sbci	r21, 0x00	; 0
 bfc:	a9 f7       	brne	.-22     	; 0xbe8 <__mulsf3_pse+0x64>
 bfe:	9e 3f       	cpi	r25, 0xFE	; 254
 c00:	51 05       	cpc	r21, r1
 c02:	80 f0       	brcs	.+32     	; 0xc24 <__mulsf3_pse+0xa0>
 c04:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 c08:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 c0c:	5f 3f       	cpi	r21, 0xFF	; 255
 c0e:	e4 f3       	brlt	.-8      	; 0xc08 <__mulsf3_pse+0x84>
 c10:	98 3e       	cpi	r25, 0xE8	; 232
 c12:	d4 f3       	brlt	.-12     	; 0xc08 <__mulsf3_pse+0x84>
 c14:	86 95       	lsr	r24
 c16:	77 95       	ror	r23
 c18:	67 95       	ror	r22
 c1a:	b7 95       	ror	r27
 c1c:	f7 95       	ror	r31
 c1e:	e7 95       	ror	r30
 c20:	9f 5f       	subi	r25, 0xFF	; 255
 c22:	c1 f7       	brne	.-16     	; 0xc14 <__mulsf3_pse+0x90>
 c24:	fe 2b       	or	r31, r30
 c26:	88 0f       	add	r24, r24
 c28:	91 1d       	adc	r25, r1
 c2a:	96 95       	lsr	r25
 c2c:	87 95       	ror	r24
 c2e:	97 f9       	bld	r25, 7
 c30:	08 95       	ret

00000c32 <pow>:
 c32:	fa 01       	movw	r30, r20
 c34:	ee 0f       	add	r30, r30
 c36:	ff 1f       	adc	r31, r31
 c38:	30 96       	adiw	r30, 0x00	; 0
 c3a:	21 05       	cpc	r18, r1
 c3c:	31 05       	cpc	r19, r1
 c3e:	a1 f1       	breq	.+104    	; 0xca8 <pow+0x76>
 c40:	61 15       	cp	r22, r1
 c42:	71 05       	cpc	r23, r1
 c44:	61 f4       	brne	.+24     	; 0xc5e <pow+0x2c>
 c46:	80 38       	cpi	r24, 0x80	; 128
 c48:	bf e3       	ldi	r27, 0x3F	; 63
 c4a:	9b 07       	cpc	r25, r27
 c4c:	49 f1       	breq	.+82     	; 0xca0 <pow+0x6e>
 c4e:	68 94       	set
 c50:	90 38       	cpi	r25, 0x80	; 128
 c52:	81 05       	cpc	r24, r1
 c54:	61 f0       	breq	.+24     	; 0xc6e <pow+0x3c>
 c56:	80 38       	cpi	r24, 0x80	; 128
 c58:	bf ef       	ldi	r27, 0xFF	; 255
 c5a:	9b 07       	cpc	r25, r27
 c5c:	41 f0       	breq	.+16     	; 0xc6e <pow+0x3c>
 c5e:	99 23       	and	r25, r25
 c60:	4a f5       	brpl	.+82     	; 0xcb4 <pow+0x82>
 c62:	ff 3f       	cpi	r31, 0xFF	; 255
 c64:	e1 05       	cpc	r30, r1
 c66:	31 05       	cpc	r19, r1
 c68:	21 05       	cpc	r18, r1
 c6a:	19 f1       	breq	.+70     	; 0xcb2 <pow+0x80>
 c6c:	e8 94       	clt
 c6e:	08 94       	sec
 c70:	e7 95       	ror	r30
 c72:	d9 01       	movw	r26, r18
 c74:	aa 23       	and	r26, r26
 c76:	29 f4       	brne	.+10     	; 0xc82 <pow+0x50>
 c78:	ab 2f       	mov	r26, r27
 c7a:	be 2f       	mov	r27, r30
 c7c:	f8 5f       	subi	r31, 0xF8	; 248
 c7e:	d0 f3       	brcs	.-12     	; 0xc74 <pow+0x42>
 c80:	10 c0       	rjmp	.+32     	; 0xca2 <pow+0x70>
 c82:	ff 5f       	subi	r31, 0xFF	; 255
 c84:	70 f4       	brcc	.+28     	; 0xca2 <pow+0x70>
 c86:	a6 95       	lsr	r26
 c88:	e0 f7       	brcc	.-8      	; 0xc82 <pow+0x50>
 c8a:	f7 39       	cpi	r31, 0x97	; 151
 c8c:	50 f0       	brcs	.+20     	; 0xca2 <pow+0x70>
 c8e:	19 f0       	breq	.+6      	; 0xc96 <pow+0x64>
 c90:	ff 3a       	cpi	r31, 0xAF	; 175
 c92:	38 f4       	brcc	.+14     	; 0xca2 <pow+0x70>
 c94:	9f 77       	andi	r25, 0x7F	; 127
 c96:	9f 93       	push	r25
 c98:	0d d0       	rcall	.+26     	; 0xcb4 <pow+0x82>
 c9a:	0f 90       	pop	r0
 c9c:	07 fc       	sbrc	r0, 7
 c9e:	90 58       	subi	r25, 0x80	; 128
 ca0:	08 95       	ret
 ca2:	46 f0       	brts	.+16     	; 0xcb4 <pow+0x82>
 ca4:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>
 ca8:	60 e0       	ldi	r22, 0x00	; 0
 caa:	70 e0       	ldi	r23, 0x00	; 0
 cac:	80 e8       	ldi	r24, 0x80	; 128
 cae:	9f e3       	ldi	r25, 0x3F	; 63
 cb0:	08 95       	ret
 cb2:	4f e7       	ldi	r20, 0x7F	; 127
 cb4:	9f 77       	andi	r25, 0x7F	; 127
 cb6:	5f 93       	push	r21
 cb8:	4f 93       	push	r20
 cba:	3f 93       	push	r19
 cbc:	2f 93       	push	r18
 cbe:	0e 94 14 07 	call	0xe28	; 0xe28 <log>
 cc2:	2f 91       	pop	r18
 cc4:	3f 91       	pop	r19
 cc6:	4f 91       	pop	r20
 cc8:	5f 91       	pop	r21
 cca:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3>
 cce:	0c 94 71 06 	jmp	0xce2	; 0xce2 <exp>
 cd2:	29 f4       	brne	.+10     	; 0xcde <pow+0xac>
 cd4:	16 f0       	brts	.+4      	; 0xcda <pow+0xa8>
 cd6:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 cda:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_zero>
 cde:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>

00000ce2 <exp>:
 ce2:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_splitA>
 ce6:	a8 f3       	brcs	.-22     	; 0xcd2 <pow+0xa0>
 ce8:	96 38       	cpi	r25, 0x86	; 134
 cea:	a0 f7       	brcc	.-24     	; 0xcd4 <pow+0xa2>
 cec:	07 f8       	bld	r0, 7
 cee:	0f 92       	push	r0
 cf0:	e8 94       	clt
 cf2:	2b e3       	ldi	r18, 0x3B	; 59
 cf4:	3a ea       	ldi	r19, 0xAA	; 170
 cf6:	48 eb       	ldi	r20, 0xB8	; 184
 cf8:	5f e7       	ldi	r21, 0x7F	; 127
 cfa:	0e 94 c2 05 	call	0xb84	; 0xb84 <__mulsf3_pse>
 cfe:	0f 92       	push	r0
 d00:	0f 92       	push	r0
 d02:	0f 92       	push	r0
 d04:	4d b7       	in	r20, 0x3d	; 61
 d06:	5e b7       	in	r21, 0x3e	; 62
 d08:	0f 92       	push	r0
 d0a:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <modf>
 d0e:	e8 e7       	ldi	r30, 0x78	; 120
 d10:	f0 e0       	ldi	r31, 0x00	; 0
 d12:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fp_powser>
 d16:	4f 91       	pop	r20
 d18:	5f 91       	pop	r21
 d1a:	ef 91       	pop	r30
 d1c:	ff 91       	pop	r31
 d1e:	e5 95       	asr	r30
 d20:	ee 1f       	adc	r30, r30
 d22:	ff 1f       	adc	r31, r31
 d24:	49 f0       	breq	.+18     	; 0xd38 <exp+0x56>
 d26:	fe 57       	subi	r31, 0x7E	; 126
 d28:	e0 68       	ori	r30, 0x80	; 128
 d2a:	44 27       	eor	r20, r20
 d2c:	ee 0f       	add	r30, r30
 d2e:	44 1f       	adc	r20, r20
 d30:	fa 95       	dec	r31
 d32:	e1 f7       	brne	.-8      	; 0xd2c <exp+0x4a>
 d34:	41 95       	neg	r20
 d36:	55 0b       	sbc	r21, r21
 d38:	0e 94 d6 06 	call	0xdac	; 0xdac <ldexp>
 d3c:	0f 90       	pop	r0
 d3e:	07 fe       	sbrs	r0, 7
 d40:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <inverse>
 d44:	08 95       	ret

00000d46 <__fp_powser>:
 d46:	df 93       	push	r29
 d48:	cf 93       	push	r28
 d4a:	1f 93       	push	r17
 d4c:	0f 93       	push	r16
 d4e:	ff 92       	push	r15
 d50:	ef 92       	push	r14
 d52:	df 92       	push	r13
 d54:	7b 01       	movw	r14, r22
 d56:	8c 01       	movw	r16, r24
 d58:	68 94       	set
 d5a:	06 c0       	rjmp	.+12     	; 0xd68 <__fp_powser+0x22>
 d5c:	da 2e       	mov	r13, r26
 d5e:	ef 01       	movw	r28, r30
 d60:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__mulsf3x>
 d64:	fe 01       	movw	r30, r28
 d66:	e8 94       	clt
 d68:	a5 91       	lpm	r26, Z+
 d6a:	25 91       	lpm	r18, Z+
 d6c:	35 91       	lpm	r19, Z+
 d6e:	45 91       	lpm	r20, Z+
 d70:	55 91       	lpm	r21, Z+
 d72:	a6 f3       	brts	.-24     	; 0xd5c <__fp_powser+0x16>
 d74:	ef 01       	movw	r28, r30
 d76:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__addsf3x>
 d7a:	fe 01       	movw	r30, r28
 d7c:	97 01       	movw	r18, r14
 d7e:	a8 01       	movw	r20, r16
 d80:	da 94       	dec	r13
 d82:	69 f7       	brne	.-38     	; 0xd5e <__fp_powser+0x18>
 d84:	df 90       	pop	r13
 d86:	ef 90       	pop	r14
 d88:	ff 90       	pop	r15
 d8a:	0f 91       	pop	r16
 d8c:	1f 91       	pop	r17
 d8e:	cf 91       	pop	r28
 d90:	df 91       	pop	r29
 d92:	08 95       	ret

00000d94 <inverse>:
 d94:	9b 01       	movw	r18, r22
 d96:	ac 01       	movw	r20, r24
 d98:	60 e0       	ldi	r22, 0x00	; 0
 d9a:	70 e0       	ldi	r23, 0x00	; 0
 d9c:	80 e8       	ldi	r24, 0x80	; 128
 d9e:	9f e3       	ldi	r25, 0x3F	; 63
 da0:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <__divsf3>
 da4:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>
 da8:	0c 94 90 07 	jmp	0xf20	; 0xf20 <__fp_mpack>

00000dac <ldexp>:
 dac:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_splitA>
 db0:	d8 f3       	brcs	.-10     	; 0xda8 <inverse+0x14>
 db2:	99 23       	and	r25, r25
 db4:	c9 f3       	breq	.-14     	; 0xda8 <inverse+0x14>
 db6:	94 0f       	add	r25, r20
 db8:	51 1d       	adc	r21, r1
 dba:	a3 f3       	brvs	.-24     	; 0xda4 <inverse+0x10>
 dbc:	91 50       	subi	r25, 0x01	; 1
 dbe:	50 40       	sbci	r21, 0x00	; 0
 dc0:	94 f0       	brlt	.+36     	; 0xde6 <ldexp+0x3a>
 dc2:	59 f0       	breq	.+22     	; 0xdda <ldexp+0x2e>
 dc4:	88 23       	and	r24, r24
 dc6:	32 f0       	brmi	.+12     	; 0xdd4 <ldexp+0x28>
 dc8:	66 0f       	add	r22, r22
 dca:	77 1f       	adc	r23, r23
 dcc:	88 1f       	adc	r24, r24
 dce:	91 50       	subi	r25, 0x01	; 1
 dd0:	50 40       	sbci	r21, 0x00	; 0
 dd2:	c1 f7       	brne	.-16     	; 0xdc4 <ldexp+0x18>
 dd4:	9e 3f       	cpi	r25, 0xFE	; 254
 dd6:	51 05       	cpc	r21, r1
 dd8:	2c f7       	brge	.-54     	; 0xda4 <inverse+0x10>
 dda:	88 0f       	add	r24, r24
 ddc:	91 1d       	adc	r25, r1
 dde:	96 95       	lsr	r25
 de0:	87 95       	ror	r24
 de2:	97 f9       	bld	r25, 7
 de4:	08 95       	ret
 de6:	5f 3f       	cpi	r21, 0xFF	; 255
 de8:	ac f0       	brlt	.+42     	; 0xe14 <ldexp+0x68>
 dea:	98 3e       	cpi	r25, 0xE8	; 232
 dec:	9c f0       	brlt	.+38     	; 0xe14 <ldexp+0x68>
 dee:	bb 27       	eor	r27, r27
 df0:	86 95       	lsr	r24
 df2:	77 95       	ror	r23
 df4:	67 95       	ror	r22
 df6:	b7 95       	ror	r27
 df8:	08 f4       	brcc	.+2      	; 0xdfc <ldexp+0x50>
 dfa:	b1 60       	ori	r27, 0x01	; 1
 dfc:	93 95       	inc	r25
 dfe:	c1 f7       	brne	.-16     	; 0xdf0 <ldexp+0x44>
 e00:	bb 0f       	add	r27, r27
 e02:	58 f7       	brcc	.-42     	; 0xdda <ldexp+0x2e>
 e04:	11 f4       	brne	.+4      	; 0xe0a <ldexp+0x5e>
 e06:	60 ff       	sbrs	r22, 0
 e08:	e8 cf       	rjmp	.-48     	; 0xdda <ldexp+0x2e>
 e0a:	6f 5f       	subi	r22, 0xFF	; 255
 e0c:	7f 4f       	sbci	r23, 0xFF	; 255
 e0e:	8f 4f       	sbci	r24, 0xFF	; 255
 e10:	9f 4f       	sbci	r25, 0xFF	; 255
 e12:	e3 cf       	rjmp	.-58     	; 0xdda <ldexp+0x2e>
 e14:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__fp_szero>
 e18:	16 f0       	brts	.+4      	; 0xe1e <ldexp+0x72>
 e1a:	0c 94 90 07 	jmp	0xf20	; 0xf20 <__fp_mpack>
 e1e:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__fp_nan>
 e22:	68 94       	set
 e24:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_inf>

00000e28 <log>:
 e28:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_splitA>
 e2c:	a8 f3       	brcs	.-22     	; 0xe18 <ldexp+0x6c>
 e2e:	99 23       	and	r25, r25
 e30:	c1 f3       	breq	.-16     	; 0xe22 <ldexp+0x76>
 e32:	ae f3       	brts	.-22     	; 0xe1e <ldexp+0x72>
 e34:	df 93       	push	r29
 e36:	cf 93       	push	r28
 e38:	1f 93       	push	r17
 e3a:	0f 93       	push	r16
 e3c:	ff 92       	push	r15
 e3e:	c9 2f       	mov	r28, r25
 e40:	dd 27       	eor	r29, r29
 e42:	88 23       	and	r24, r24
 e44:	2a f0       	brmi	.+10     	; 0xe50 <log+0x28>
 e46:	21 97       	sbiw	r28, 0x01	; 1
 e48:	66 0f       	add	r22, r22
 e4a:	77 1f       	adc	r23, r23
 e4c:	88 1f       	adc	r24, r24
 e4e:	da f7       	brpl	.-10     	; 0xe46 <log+0x1e>
 e50:	20 e0       	ldi	r18, 0x00	; 0
 e52:	30 e0       	ldi	r19, 0x00	; 0
 e54:	40 e8       	ldi	r20, 0x80	; 128
 e56:	5f eb       	ldi	r21, 0xBF	; 191
 e58:	9f e3       	ldi	r25, 0x3F	; 63
 e5a:	88 39       	cpi	r24, 0x98	; 152
 e5c:	20 f0       	brcs	.+8      	; 0xe66 <log+0x3e>
 e5e:	80 3e       	cpi	r24, 0xE0	; 224
 e60:	38 f0       	brcs	.+14     	; 0xe70 <log+0x48>
 e62:	21 96       	adiw	r28, 0x01	; 1
 e64:	8f 77       	andi	r24, 0x7F	; 127
 e66:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__addsf3>
 e6a:	e0 ea       	ldi	r30, 0xA0	; 160
 e6c:	f0 e0       	ldi	r31, 0x00	; 0
 e6e:	04 c0       	rjmp	.+8      	; 0xe78 <log+0x50>
 e70:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__addsf3>
 e74:	ed ec       	ldi	r30, 0xCD	; 205
 e76:	f0 e0       	ldi	r31, 0x00	; 0
 e78:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fp_powser>
 e7c:	8b 01       	movw	r16, r22
 e7e:	be 01       	movw	r22, r28
 e80:	ec 01       	movw	r28, r24
 e82:	fb 2e       	mov	r15, r27
 e84:	6f 57       	subi	r22, 0x7F	; 127
 e86:	71 09       	sbc	r23, r1
 e88:	75 95       	asr	r23
 e8a:	77 1f       	adc	r23, r23
 e8c:	88 0b       	sbc	r24, r24
 e8e:	99 0b       	sbc	r25, r25
 e90:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__floatsisf>
 e94:	28 e1       	ldi	r18, 0x18	; 24
 e96:	32 e7       	ldi	r19, 0x72	; 114
 e98:	41 e3       	ldi	r20, 0x31	; 49
 e9a:	5f e3       	ldi	r21, 0x3F	; 63
 e9c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__mulsf3x>
 ea0:	af 2d       	mov	r26, r15
 ea2:	98 01       	movw	r18, r16
 ea4:	ae 01       	movw	r20, r28
 ea6:	ff 90       	pop	r15
 ea8:	0f 91       	pop	r16
 eaa:	1f 91       	pop	r17
 eac:	cf 91       	pop	r28
 eae:	df 91       	pop	r29
 eb0:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__addsf3x>
 eb4:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__fp_round>

00000eb8 <modf>:
 eb8:	fa 01       	movw	r30, r20
 eba:	dc 01       	movw	r26, r24
 ebc:	aa 0f       	add	r26, r26
 ebe:	bb 1f       	adc	r27, r27
 ec0:	9b 01       	movw	r18, r22
 ec2:	ac 01       	movw	r20, r24
 ec4:	bf 57       	subi	r27, 0x7F	; 127
 ec6:	28 f4       	brcc	.+10     	; 0xed2 <modf+0x1a>
 ec8:	22 27       	eor	r18, r18
 eca:	33 27       	eor	r19, r19
 ecc:	44 27       	eor	r20, r20
 ece:	50 78       	andi	r21, 0x80	; 128
 ed0:	20 c0       	rjmp	.+64     	; 0xf12 <modf+0x5a>
 ed2:	b7 51       	subi	r27, 0x17	; 23
 ed4:	90 f4       	brcc	.+36     	; 0xefa <modf+0x42>
 ed6:	ab 2f       	mov	r26, r27
 ed8:	00 24       	eor	r0, r0
 eda:	46 95       	lsr	r20
 edc:	37 95       	ror	r19
 ede:	27 95       	ror	r18
 ee0:	01 1c       	adc	r0, r1
 ee2:	a3 95       	inc	r26
 ee4:	d2 f3       	brmi	.-12     	; 0xeda <modf+0x22>
 ee6:	00 20       	and	r0, r0
 ee8:	71 f0       	breq	.+28     	; 0xf06 <modf+0x4e>
 eea:	22 0f       	add	r18, r18
 eec:	33 1f       	adc	r19, r19
 eee:	44 1f       	adc	r20, r20
 ef0:	b3 95       	inc	r27
 ef2:	da f3       	brmi	.-10     	; 0xeea <modf+0x32>
 ef4:	0e d0       	rcall	.+28     	; 0xf12 <modf+0x5a>
 ef6:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__subsf3>
 efa:	61 30       	cpi	r22, 0x01	; 1
 efc:	71 05       	cpc	r23, r1
 efe:	a0 e8       	ldi	r26, 0x80	; 128
 f00:	8a 07       	cpc	r24, r26
 f02:	b9 46       	sbci	r27, 0x69	; 105
 f04:	30 f4       	brcc	.+12     	; 0xf12 <modf+0x5a>
 f06:	9b 01       	movw	r18, r22
 f08:	ac 01       	movw	r20, r24
 f0a:	66 27       	eor	r22, r22
 f0c:	77 27       	eor	r23, r23
 f0e:	88 27       	eor	r24, r24
 f10:	90 78       	andi	r25, 0x80	; 128
 f12:	30 96       	adiw	r30, 0x00	; 0
 f14:	21 f0       	breq	.+8      	; 0xf1e <modf+0x66>
 f16:	20 83       	st	Z, r18
 f18:	31 83       	std	Z+1, r19	; 0x01
 f1a:	42 83       	std	Z+2, r20	; 0x02
 f1c:	53 83       	std	Z+3, r21	; 0x03
 f1e:	08 95       	ret

00000f20 <__fp_mpack>:
 f20:	9f 3f       	cpi	r25, 0xFF	; 255
 f22:	31 f0       	breq	.+12     	; 0xf30 <__fp_mpack_finite+0xc>

00000f24 <__fp_mpack_finite>:
 f24:	91 50       	subi	r25, 0x01	; 1
 f26:	20 f4       	brcc	.+8      	; 0xf30 <__fp_mpack_finite+0xc>
 f28:	87 95       	ror	r24
 f2a:	77 95       	ror	r23
 f2c:	67 95       	ror	r22
 f2e:	b7 95       	ror	r27
 f30:	88 0f       	add	r24, r24
 f32:	91 1d       	adc	r25, r1
 f34:	96 95       	lsr	r25
 f36:	87 95       	ror	r24
 f38:	97 f9       	bld	r25, 7
 f3a:	08 95       	ret

00000f3c <__tablejump2__>:
 f3c:	ee 0f       	add	r30, r30
 f3e:	ff 1f       	adc	r31, r31
 f40:	05 90       	lpm	r0, Z+
 f42:	f4 91       	lpm	r31, Z
 f44:	e0 2d       	mov	r30, r0
 f46:	09 94       	ijmp

00000f48 <__adddi3_s8>:
 f48:	00 24       	eor	r0, r0
 f4a:	a7 fd       	sbrc	r26, 7
 f4c:	00 94       	com	r0
 f4e:	2a 0f       	add	r18, r26
 f50:	30 1d       	adc	r19, r0
 f52:	40 1d       	adc	r20, r0
 f54:	50 1d       	adc	r21, r0
 f56:	60 1d       	adc	r22, r0
 f58:	70 1d       	adc	r23, r0
 f5a:	80 1d       	adc	r24, r0
 f5c:	90 1d       	adc	r25, r0
 f5e:	08 95       	ret

00000f60 <__cmpdi2_s8>:
 f60:	00 24       	eor	r0, r0
 f62:	a7 fd       	sbrc	r26, 7
 f64:	00 94       	com	r0
 f66:	2a 17       	cp	r18, r26
 f68:	30 05       	cpc	r19, r0
 f6a:	40 05       	cpc	r20, r0
 f6c:	50 05       	cpc	r21, r0
 f6e:	60 05       	cpc	r22, r0
 f70:	70 05       	cpc	r23, r0
 f72:	80 05       	cpc	r24, r0
 f74:	90 05       	cpc	r25, r0
 f76:	08 95       	ret

00000f78 <_exit>:
 f78:	f8 94       	cli

00000f7a <__stop_program>:
 f7a:	ff cf       	rjmp	.-2      	; 0xf7a <__stop_program>
