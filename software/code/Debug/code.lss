
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f90  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00001004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800060  00800060  00001004  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001004  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001034  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00001070  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ea3  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e5  00000000  00000000  00001ff3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008dd  00000000  00000000  000027d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  000030b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000583  00000000  00000000  000032c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ab  00000000  00000000  0000384b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00003bf6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  20:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__vector_8>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	27 02       	muls	r18, r23
  56:	24 02       	muls	r18, r20
  58:	1e 02       	muls	r17, r30
  5a:	18 02       	muls	r17, r24
  5c:	12 02       	muls	r17, r18
  5e:	21 02       	muls	r18, r17
  60:	0f 02       	muls	r16, r31
  62:	15 02       	muls	r17, r21
  64:	1b 02       	muls	r17, r27
  66:	d9 02       	muls	r29, r25
  68:	d0 02       	muls	r29, r16
  6a:	be 02       	muls	r27, r30
  6c:	ac 02       	muls	r26, r28
  6e:	9a 02       	muls	r25, r26
  70:	c7 02       	muls	r28, r23
  72:	91 02       	muls	r25, r17
  74:	a3 02       	muls	r26, r19
  76:	b5 02       	muls	r27, r21
  78:	07 63       	ori	r16, 0x37	; 55
  7a:	42 36       	cpi	r20, 0x62	; 98
  7c:	b7 9b       	sbis	0x16, 7	; 22
  7e:	d8 a7       	std	Y+40, r29	; 0x28
  80:	1a 39       	cpi	r17, 0x9A	; 154
  82:	68 56       	subi	r22, 0x68	; 104
  84:	18 ae       	std	Y+56, r1	; 0x38
  86:	ba ab       	std	Y+50, r27	; 0x32
  88:	55 8c       	ldd	r5, Z+29	; 0x1d
  8a:	1d 3c       	cpi	r17, 0xCD	; 205
  8c:	b7 cc       	rjmp	.-1682   	; 0xfffff9fc <__eeprom_end+0xff7ef9fc>
  8e:	57 63       	ori	r21, 0x37	; 55
  90:	bd 6d       	ori	r27, 0xDD	; 221
  92:	ed fd       	.word	0xfded	; ????
  94:	75 3e       	cpi	r23, 0xE5	; 229
  96:	f6 17       	cp	r31, r22
  98:	72 31       	cpi	r23, 0x12	; 18
  9a:	bf 00       	.word	0x00bf	; ????
  9c:	00 00       	nop
  9e:	80 3f       	cpi	r24, 0xF0	; 240
  a0:	08 00       	.word	0x0008	; ????
  a2:	00 00       	nop
  a4:	be 92       	st	-X, r11
  a6:	24 49       	sbci	r18, 0x94	; 148
  a8:	12 3e       	cpi	r17, 0xE2	; 226
  aa:	ab aa       	std	Y+51, r10	; 0x33
  ac:	aa 2a       	or	r10, r26
  ae:	be cd       	rjmp	.-1156   	; 0xfffffc2c <__eeprom_end+0xff7efc2c>
  b0:	cc cc       	rjmp	.-1640   	; 0xfffffa4a <__eeprom_end+0xff7efa4a>
  b2:	4c 3e       	cpi	r20, 0xEC	; 236
  b4:	00 00       	nop
  b6:	00 80       	ld	r0, Z
  b8:	be ab       	std	Y+54, r27	; 0x36
  ba:	aa aa       	std	Y+50, r10	; 0x32
  bc:	aa 3e       	cpi	r26, 0xEA	; 234
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	bf 00       	.word	0x00bf	; ????
  c4:	00 00       	nop
  c6:	80 3f       	cpi	r24, 0xF0	; 240
  c8:	00 00       	nop
  ca:	00 00       	nop
  cc:	00 08       	sbc	r0, r0
  ce:	41 78       	andi	r20, 0x81	; 129
  d0:	d3 bb       	out	0x13, r29	; 19
  d2:	43 87       	std	Z+11, r20	; 0x0b
  d4:	d1 13       	cpse	r29, r17
  d6:	3d 19       	sub	r19, r13
  d8:	0e 3c       	cpi	r16, 0xCE	; 206
  da:	c3 bd       	out	0x23, r28	; 35
  dc:	42 82       	std	Z+2, r4	; 0x02
  de:	ad 2b       	or	r26, r29
  e0:	3e 68       	ori	r19, 0x8E	; 142
  e2:	ec 82       	std	Y+4, r14	; 0x04
  e4:	76 be       	out	0x36, r7	; 54
  e6:	d9 8f       	std	Y+25, r29	; 0x19
  e8:	e1 a9       	ldd	r30, Z+49	; 0x31
  ea:	3e 4c       	sbci	r19, 0xCE	; 206
  ec:	80 ef       	ldi	r24, 0xF0	; 240
  ee:	ff be       	out	0x3f, r15	; 63
  f0:	01 c4       	rjmp	.+2050   	; 0x8f4 <__divsf3+0x16>
  f2:	ff 7f       	andi	r31, 0xFF	; 255
  f4:	3f 00       	.word	0x003f	; ????
  f6:	00 00       	nop
	...

000000fa <__ctors_end>:
  fa:	11 24       	eor	r1, r1
  fc:	1f be       	out	0x3f, r1	; 63
  fe:	cf e5       	ldi	r28, 0x5F	; 95
 100:	d4 e0       	ldi	r29, 0x04	; 4
 102:	de bf       	out	0x3e, r29	; 62
 104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_clear_bss>:
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	a0 e6       	ldi	r26, 0x60	; 96
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	aa 37       	cpi	r26, 0x7A	; 122
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <main>
 11a:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_init>:
			// turns a BCD-encoded byte back into a standard one
			u8 Bcd_to_decimal ()
			{
			
				return( ((TWDR>>4)*10)+(TWDR &0xF));
			}
 122:	17 b8       	out	0x07, r1	; 7
 124:	83 e8       	ldi	r24, 0x83	; 131
 126:	86 b9       	out	0x06, r24	; 6
 128:	08 95       	ret

0000012a <ADC_readChannel>:
 12a:	87 70       	andi	r24, 0x07	; 7
 12c:	97 b1       	in	r25, 0x07	; 7
 12e:	90 7e       	andi	r25, 0xE0	; 224
 130:	97 b9       	out	0x07, r25	; 7
 132:	97 b1       	in	r25, 0x07	; 7
 134:	89 2b       	or	r24, r25
 136:	87 b9       	out	0x07, r24	; 7
 138:	86 b1       	in	r24, 0x06	; 6
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	86 b9       	out	0x06, r24	; 6
 13e:	34 9b       	sbis	0x06, 4	; 6
 140:	fe cf       	rjmp	.-4      	; 0x13e <ADC_readChannel+0x14>
 142:	86 b1       	in	r24, 0x06	; 6
 144:	80 61       	ori	r24, 0x10	; 16
 146:	86 b9       	out	0x06, r24	; 6
 148:	84 b1       	in	r24, 0x04	; 4
 14a:	95 b1       	in	r25, 0x05	; 5
 14c:	08 95       	ret

0000014e <INT_interrupt>:
 14e:	84 e6       	ldi	r24, 0x64	; 100
 150:	9f ef       	ldi	r25, 0xFF	; 255
 152:	9d bd       	out	0x2d, r25	; 45
 154:	8c bd       	out	0x2c, r24	; 44
 156:	1f bc       	out	0x2f, r1	; 47
 158:	85 e0       	ldi	r24, 0x05	; 5
 15a:	8e bd       	out	0x2e, r24	; 46
 15c:	84 e0       	ldi	r24, 0x04	; 4
 15e:	89 bf       	out	0x39, r24	; 57
 160:	78 94       	sei
 162:	08 95       	ret

00000164 <I2C_Init>:
 164:	11 b8       	out	0x01, r1	; 1
 166:	61 b1       	in	r22, 0x01	; 1
 168:	63 70       	andi	r22, 0x03	; 3
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 12 05 	call	0xa24	; 0xa24 <__floatsisf>
 174:	9b 01       	movw	r18, r22
 176:	ac 01       	movw	r20, r24
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	90 e4       	ldi	r25, 0x40	; 64
 180:	0e 94 2f 06 	call	0xc5e	; 0xc5e <pow>
 184:	9b 01       	movw	r18, r22
 186:	ac 01       	movw	r20, r24
 188:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__addsf3>
 18c:	9b 01       	movw	r18, r22
 18e:	ac 01       	movw	r20, r24
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	80 e8       	ldi	r24, 0x80	; 128
 196:	9f e4       	ldi	r25, 0x4F	; 79
 198:	0e 94 6f 04 	call	0x8de	; 0x8de <__divsf3>
 19c:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__fixunssfsi>
 1a0:	60 b9       	out	0x00, r22	; 0
 1a2:	08 95       	ret

000001a4 <I2C_Start>:
 1a4:	94 ea       	ldi	r25, 0xA4	; 164
 1a6:	96 bf       	out	0x36, r25	; 54
 1a8:	06 b6       	in	r0, 0x36	; 54
 1aa:	07 fe       	sbrs	r0, 7
 1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <I2C_Start+0x4>
 1ae:	83 b9       	out	0x03, r24	; 3
 1b0:	84 e8       	ldi	r24, 0x84	; 132
 1b2:	86 bf       	out	0x36, r24	; 54
 1b4:	06 b6       	in	r0, 0x36	; 54
 1b6:	07 fe       	sbrs	r0, 7
 1b8:	fd cf       	rjmp	.-6      	; 0x1b4 <I2C_Start+0x10>
 1ba:	08 95       	ret

000001bc <I2C_Repeated_Start>:
 1bc:	94 ea       	ldi	r25, 0xA4	; 164
 1be:	96 bf       	out	0x36, r25	; 54
 1c0:	06 b6       	in	r0, 0x36	; 54
 1c2:	07 fe       	sbrs	r0, 7
 1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <I2C_Repeated_Start+0x4>
 1c6:	83 b9       	out	0x03, r24	; 3
 1c8:	84 e8       	ldi	r24, 0x84	; 132
 1ca:	86 bf       	out	0x36, r24	; 54
 1cc:	06 b6       	in	r0, 0x36	; 54
 1ce:	07 fe       	sbrs	r0, 7
 1d0:	fd cf       	rjmp	.-6      	; 0x1cc <I2C_Repeated_Start+0x10>
 1d2:	08 95       	ret

000001d4 <I2C_Read_Nack>:
 1d4:	84 e8       	ldi	r24, 0x84	; 132
 1d6:	86 bf       	out	0x36, r24	; 54
 1d8:	06 b6       	in	r0, 0x36	; 54
 1da:	07 fe       	sbrs	r0, 7
 1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <I2C_Read_Nack+0x4>
 1de:	83 b1       	in	r24, 0x03	; 3
 1e0:	08 95       	ret

000001e2 <I2C_Stop>:
 1e2:	84 e9       	ldi	r24, 0x94	; 148
 1e4:	86 bf       	out	0x36, r24	; 54
 1e6:	86 b7       	in	r24, 0x36	; 54
 1e8:	08 95       	ret

000001ea <decimal_to_bcd>:
 1ea:	9d ec       	ldi	r25, 0xCD	; 205
 1ec:	89 9f       	mul	r24, r25
 1ee:	91 2d       	mov	r25, r1
 1f0:	11 24       	eor	r1, r1
 1f2:	96 95       	lsr	r25
 1f4:	96 95       	lsr	r25
 1f6:	96 95       	lsr	r25
 1f8:	39 2f       	mov	r19, r25
 1fa:	33 0f       	add	r19, r19
 1fc:	23 2f       	mov	r18, r19
 1fe:	22 0f       	add	r18, r18
 200:	22 0f       	add	r18, r18
 202:	23 0f       	add	r18, r19
 204:	82 1b       	sub	r24, r18
 206:	30 e1       	ldi	r19, 0x10	; 16
 208:	93 9f       	mul	r25, r19
 20a:	80 0d       	add	r24, r0
 20c:	11 24       	eor	r1, r1
 20e:	08 95       	ret

00000210 <I2C_Write>:
 210:	0e 94 f5 00 	call	0x1ea	; 0x1ea <decimal_to_bcd>
 214:	83 b9       	out	0x03, r24	; 3
 216:	84 e8       	ldi	r24, 0x84	; 132
 218:	86 bf       	out	0x36, r24	; 54
 21a:	06 b6       	in	r0, 0x36	; 54
 21c:	07 fe       	sbrs	r0, 7
 21e:	fd cf       	rjmp	.-6      	; 0x21a <I2C_Write+0xa>
 220:	08 95       	ret

00000222 <EEPROM_write_read>:
			 
			 u8 EEPROM_write_read(u8 stored_data)
			 {
 222:	cf 93       	push	r28
 224:	c8 2f       	mov	r28, r24
				  u8 data;
				  I2C_Init();
 226:	0e 94 b2 00 	call	0x164	; 0x164 <I2C_Init>
				  I2C_Start(0xA0);
 22a:	80 ea       	ldi	r24, 0xA0	; 160
 22c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2C_Start>
				  I2C_Write(stored_data);
 230:	8c 2f       	mov	r24, r28
 232:	0e 94 08 01 	call	0x210	; 0x210 <I2C_Write>
				  I2C_Repeated_Start(0xA1);
 236:	81 ea       	ldi	r24, 0xA1	; 161
 238:	0e 94 de 00 	call	0x1bc	; 0x1bc <I2C_Repeated_Start>
				  data=I2C_Read_Nack ();
 23c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <I2C_Read_Nack>
 240:	c8 2f       	mov	r28, r24
			 I2C_Stop();
 242:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <I2C_Stop>
			 return data;
				  
	 }
 246:	8c 2f       	mov	r24, r28
 248:	cf 91       	pop	r28
 24a:	08 95       	ret

0000024c <Avg_reading>:
	
	
void Avg_reading(void)
{
	  
sum=sum+x;
 24c:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 250:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 254:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 258:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 25c:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <sum>
 260:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <sum+0x1>
 264:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <sum+0x2>
 268:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <sum+0x3>
 26c:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__addsf3>
 270:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <sum>
 274:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <sum+0x1>
 278:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <sum+0x2>
 27c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <sum+0x3>
	i++;
 280:	20 91 69 00 	lds	r18, 0x0069	; 0x800069 <i>
 284:	2f 5f       	subi	r18, 0xFF	; 255
 286:	20 93 69 00 	sts	0x0069, r18	; 0x800069 <i>
	if(i==9)
 28a:	29 30       	cpi	r18, 0x09	; 9
 28c:	c1 f4       	brne	.+48     	; 0x2be <Avg_reading+0x72>
	{
		 average=(sum)/9.1125;  //In testing and validation
 28e:	2d ec       	ldi	r18, 0xCD	; 205
 290:	3c ec       	ldi	r19, 0xCC	; 204
 292:	41 e1       	ldi	r20, 0x11	; 17
 294:	51 e4       	ldi	r21, 0x41	; 65
 296:	0e 94 6f 04 	call	0x8de	; 0x8de <__divsf3>
 29a:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <average>
 29e:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <average+0x1>
 2a2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <average+0x2>
 2a6:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <average+0x3>
		i=0;
 2aa:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <i>
		sum=0;
 2ae:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <sum>
 2b2:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <sum+0x1>
 2b6:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <sum+0x2>
 2ba:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <sum+0x3>
 2be:	08 95       	ret

000002c0 <Temperature_reading>:

		
	
	void Temperature_reading(void)
	{
		volt = ADC_readChannel(0); // read channel two where the temp sensor is connect
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	0e 94 95 00 	call	0x12a	; 0x12a <ADC_readChannel>
 2c6:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <volt+0x1>
 2ca:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <volt>
			x=(float)(5*volt)/1023; // to gain the ADC of temperature reading
 2ce:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <volt>
 2d2:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <volt+0x1>
 2d6:	cb 01       	movw	r24, r22
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	68 0f       	add	r22, r24
 2e2:	79 1f       	adc	r23, r25
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 10 05 	call	0xa20	; 0xa20 <__floatunsisf>
 2ec:	20 e0       	ldi	r18, 0x00	; 0
 2ee:	30 ec       	ldi	r19, 0xC0	; 192
 2f0:	4f e7       	ldi	r20, 0x7F	; 127
 2f2:	54 e4       	ldi	r21, 0x44	; 68
 2f4:	0e 94 6f 04 	call	0x8de	; 0x8de <__divsf3>
 2f8:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 2fc:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 300:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 304:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
			x=x*100;   //the reading of temperature
 308:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 30c:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 310:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 314:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 318:	20 e0       	ldi	r18, 0x00	; 0
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	48 ec       	ldi	r20, 0xC8	; 200
 31e:	52 e4       	ldi	r21, 0x42	; 66
 320:	0e 94 c2 05 	call	0xb84	; 0xb84 <__mulsf3>
 324:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <x>
 328:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <x+0x1>
 32c:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <x+0x2>
 330:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <x+0x3>
			Avg_reading();  //the equations of average 10 temperature reading 
 334:	0e 94 26 01 	call	0x24c	; 0x24c <Avg_reading>
 338:	08 95       	ret

0000033a <__vector_8>:
ISR (TIMER1_OVF_vect)    // Timer1 ISR
{
 33a:	1f 92       	push	r1
 33c:	0f 92       	push	r0
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	0f 92       	push	r0
 342:	11 24       	eor	r1, r1
 344:	2f 93       	push	r18
 346:	3f 93       	push	r19
 348:	4f 93       	push	r20
 34a:	5f 93       	push	r21
 34c:	6f 93       	push	r22
 34e:	7f 93       	push	r23
 350:	8f 93       	push	r24
 352:	9f 93       	push	r25
 354:	af 93       	push	r26
 356:	bf 93       	push	r27
 358:	ef 93       	push	r30
 35a:	ff 93       	push	r31
	TCNT1 = 65380;  // for 100 ms at 16 MHz  in Bin "1111 1111 0110 0100" , in Hexa_decimal "FF64"
 35c:	84 e6       	ldi	r24, 0x64	; 100
 35e:	9f ef       	ldi	r25, 0xFF	; 255
 360:	9d bd       	out	0x2d, r25	; 45
 362:	8c bd       	out	0x2c, r24	; 44
		Temperature_reading();  //read temperature each 100 ms 
 364:	0e 94 60 01 	call	0x2c0	; 0x2c0 <Temperature_reading>
	
		}
 368:	ff 91       	pop	r31
 36a:	ef 91       	pop	r30
 36c:	bf 91       	pop	r27
 36e:	af 91       	pop	r26
 370:	9f 91       	pop	r25
 372:	8f 91       	pop	r24
 374:	7f 91       	pop	r23
 376:	6f 91       	pop	r22
 378:	5f 91       	pop	r21
 37a:	4f 91       	pop	r20
 37c:	3f 91       	pop	r19
 37e:	2f 91       	pop	r18
 380:	0f 90       	pop	r0
 382:	0f be       	out	0x3f, r0	; 63
 384:	0f 90       	pop	r0
 386:	1f 90       	pop	r1
 388:	18 95       	reti

0000038a <setting_temp>:

void setting_temp(void)

{
	//counter=EEPROM_read();
		 if(PINB&(1<<3)&&counter<3 )
 38a:	b3 9b       	sbis	0x16, 3	; 22
 38c:	1d c0       	rjmp	.+58     	; 0x3c8 <setting_temp+0x3e>
 38e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 392:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 396:	83 30       	cpi	r24, 0x03	; 3
 398:	91 05       	cpc	r25, r1
 39a:	b4 f4       	brge	.+44     	; 0x3c8 <setting_temp+0x3e>
			 	{
				 	counter++;
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 3a2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
					 counter_for_Timer=0;
 3a6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3aa:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3ae:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3b2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3b6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 3ba:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 3be:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 3c2:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 3c6:	1f c0       	rjmp	.+62     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
			 	}
			 	else if(PINB&(1<<2)&&counter>-5)
 3c8:	b2 9b       	sbis	0x16, 2	; 22
 3ca:	1d c0       	rjmp	.+58     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 3cc:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 3d0:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <counter+0x1>
 3d4:	8c 3f       	cpi	r24, 0xFC	; 252
 3d6:	2f ef       	ldi	r18, 0xFF	; 255
 3d8:	92 07       	cpc	r25, r18
 3da:	ac f0       	brlt	.+42     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
			 	{
				 	counter--;
 3dc:	01 97       	sbiw	r24, 0x01	; 1
 3de:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <counter+0x1>
 3e2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <counter>
					  counter_for_Timer=0;
 3e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3ea:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3ee:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3f2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3f6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 3fa:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 3fe:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 402:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
			 	}
		
		 switch(counter)
 406:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 40a:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 40e:	35 96       	adiw	r30, 0x05	; 5
 410:	e9 30       	cpi	r30, 0x09	; 9
 412:	f1 05       	cpc	r31, r1
 414:	f0 f4       	brcc	.+60     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 416:	e6 5d       	subi	r30, 0xD6	; 214
 418:	ff 4f       	sbci	r31, 0xFF	; 255
 41a:	0c 94 b4 07 	jmp	0xf68	; 0xf68 <__tablejump2__>
		{
			case 1:
			PORTD=0x65;
 41e:	85 e6       	ldi	r24, 0x65	; 101
 420:	82 bb       	out	0x12, r24	; 18
			break;
 422:	17 c0       	rjmp	.+46     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -1:
			PORTD=0x55;
 424:	85 e5       	ldi	r24, 0x55	; 85
 426:	82 bb       	out	0x12, r24	; 18
			break;
 428:	14 c0       	rjmp	.+40     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case 2:
			PORTD=0x70;
 42a:	80 e7       	ldi	r24, 0x70	; 112
 42c:	82 bb       	out	0x12, r24	; 18
			break;
 42e:	11 c0       	rjmp	.+34     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -2:
			PORTD=0x50;
 430:	80 e5       	ldi	r24, 0x50	; 80
 432:	82 bb       	out	0x12, r24	; 18
			break;
 434:	0e c0       	rjmp	.+28     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case 3:
			PORTD=0x75;
 436:	85 e7       	ldi	r24, 0x75	; 117
 438:	82 bb       	out	0x12, r24	; 18
			 break;
 43a:	0b c0       	rjmp	.+22     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -3:
			PORTD=0x45;
 43c:	85 e4       	ldi	r24, 0x45	; 69
 43e:	82 bb       	out	0x12, r24	; 18
			break;
 440:	08 c0       	rjmp	.+16     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case 0:
		    PORTD=0x60;
 442:	80 e6       	ldi	r24, 0x60	; 96
 444:	82 bb       	out	0x12, r24	; 18
			break;
 446:	05 c0       	rjmp	.+10     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -4:
			PORTD=0x40;
 448:	80 e4       	ldi	r24, 0x40	; 64
 44a:	82 bb       	out	0x12, r24	; 18
			break;
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			case -5:
			PORTD=0x35;
 44e:	85 e3       	ldi	r24, 0x35	; 53
 450:	82 bb       	out	0x12, r24	; 18
			break;
		}
		while(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))));
 452:	b3 99       	sbic	0x16, 3	; 22
 454:	fe cf       	rjmp	.-4      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 456:	b2 99       	sbic	0x16, 2	; 22
 458:	fc cf       	rjmp	.-8      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
		EEPROM_write_read(counter);   // store value of counter.
 45a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <counter>
 45e:	0e 94 11 01 	call	0x222	; 0x222 <EEPROM_write_read>
 462:	08 95       	ret

00000464 <ACTIVATION>:
	}
	
}
		
		void ACTIVATION(uint16 value,u8 max, u8 min)
		{
 464:	cf 92       	push	r12
 466:	df 92       	push	r13
 468:	ef 92       	push	r14
 46a:	ff 92       	push	r15
 46c:	cf 93       	push	r28
			if(counter == value)
 46e:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <counter>
 472:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <counter+0x1>
 476:	28 17       	cp	r18, r24
 478:	39 07       	cpc	r19, r25
 47a:	09 f0       	breq	.+2      	; 0x47e <ACTIVATION+0x1a>
 47c:	3f c0       	rjmp	.+126    	; 0x4fc <ACTIVATION+0x98>
 47e:	c4 2f       	mov	r28, r20
			{
				if(average>=max)
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	0e 94 12 05 	call	0xa24	; 0xa24 <__floatsisf>
 48a:	c0 90 6c 00 	lds	r12, 0x006C	; 0x80006c <average>
 48e:	d0 90 6d 00 	lds	r13, 0x006D	; 0x80006d <average+0x1>
 492:	e0 90 6e 00 	lds	r14, 0x006E	; 0x80006e <average+0x2>
 496:	f0 90 6f 00 	lds	r15, 0x006F	; 0x80006f <average+0x3>
 49a:	a7 01       	movw	r20, r14
 49c:	96 01       	movw	r18, r12
 49e:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__cmpsf2>
 4a2:	18 16       	cp	r1, r24
 4a4:	54 f0       	brlt	.+20     	; 0x4ba <ACTIVATION+0x56>
				{
					OUTPUT_MODULE_ON(PORTB,5);  //cooling element activate
 4a6:	88 b3       	in	r24, 0x18	; 24
 4a8:	80 62       	ori	r24, 0x20	; 32
 4aa:	88 bb       	out	0x18, r24	; 24
					OUTPUT_MODULE_OFF(PORTB,6);  //Heating element disactivate
 4ac:	88 b3       	in	r24, 0x18	; 24
 4ae:	8f 7b       	andi	r24, 0xBF	; 191
 4b0:	88 bb       	out	0x18, r24	; 24
						OUTPUT_MODULE_ON(PORTB,4); //LED
 4b2:	88 b3       	in	r24, 0x18	; 24
 4b4:	80 61       	ori	r24, 0x10	; 16
 4b6:	88 bb       	out	0x18, r24	; 24
 4b8:	21 c0       	rjmp	.+66     	; 0x4fc <ACTIVATION+0x98>
				}
				else if(average<=min)
 4ba:	6c 2f       	mov	r22, r28
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	80 e0       	ldi	r24, 0x00	; 0
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	0e 94 12 05 	call	0xa24	; 0xa24 <__floatsisf>
 4c6:	9b 01       	movw	r18, r22
 4c8:	ac 01       	movw	r20, r24
 4ca:	c7 01       	movw	r24, r14
 4cc:	b6 01       	movw	r22, r12
 4ce:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__cmpsf2>
 4d2:	18 16       	cp	r1, r24
 4d4:	9c f0       	brlt	.+38     	; 0x4fc <ACTIVATION+0x98>
				{
					OUTPUT_MODULE_OFF(PORTB,5);  //cooling element disactivate
 4d6:	88 b3       	in	r24, 0x18	; 24
 4d8:	8f 7d       	andi	r24, 0xDF	; 223
 4da:	88 bb       	out	0x18, r24	; 24
					OUTPUT_MODULE_ON(PORTB,6);  //Heating element activate
 4dc:	88 b3       	in	r24, 0x18	; 24
 4de:	80 64       	ori	r24, 0x40	; 64
 4e0:	88 bb       	out	0x18, r24	; 24
					TOGGLe_BIT(PORTB,4);
 4e2:	98 b3       	in	r25, 0x18	; 24
 4e4:	80 e1       	ldi	r24, 0x10	; 16
 4e6:	89 27       	eor	r24, r25
 4e8:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4ea:	2f ed       	ldi	r18, 0xDF	; 223
 4ec:	82 e2       	ldi	r24, 0x22	; 34
 4ee:	92 e0       	ldi	r25, 0x02	; 2
 4f0:	21 50       	subi	r18, 0x01	; 1
 4f2:	80 40       	sbci	r24, 0x00	; 0
 4f4:	90 40       	sbci	r25, 0x00	; 0
 4f6:	e1 f7       	brne	.-8      	; 0x4f0 <ACTIVATION+0x8c>
 4f8:	00 c0       	rjmp	.+0      	; 0x4fa <ACTIVATION+0x96>
 4fa:	00 00       	nop
					
					
				}
		}
	
	}
 4fc:	cf 91       	pop	r28
 4fe:	ff 90       	pop	r15
 500:	ef 90       	pop	r14
 502:	df 90       	pop	r13
 504:	cf 90       	pop	r12
 506:	08 95       	ret

00000508 <ELEMENTS>:

void ELEMENTS (void)
{

	{
		switch(counter)
 508:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <counter>
 50c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <counter+0x1>
 510:	35 96       	adiw	r30, 0x05	; 5
 512:	e9 30       	cpi	r30, 0x09	; 9
 514:	f1 05       	cpc	r31, r1
 516:	08 f0       	brcs	.+2      	; 0x51a <ELEMENTS+0x12>
 518:	54 c0       	rjmp	.+168    	; 0x5c2 <ELEMENTS+0xba>
 51a:	ed 5c       	subi	r30, 0xCD	; 205
 51c:	ff 4f       	sbci	r31, 0xFF	; 255
 51e:	0c 94 b4 07 	jmp	0xf68	; 0xf68 <__tablejump2__>
	{
		case 1:
		ACTIVATION(1,70,60);
 522:	4c e3       	ldi	r20, 0x3C	; 60
 524:	50 e0       	ldi	r21, 0x00	; 0
 526:	66 e4       	ldi	r22, 0x46	; 70
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 532:	08 95       	ret
		case -1:
		ACTIVATION(-1,60,50);
 534:	42 e3       	ldi	r20, 0x32	; 50
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	6c e3       	ldi	r22, 0x3C	; 60
 53a:	70 e0       	ldi	r23, 0x00	; 0
 53c:	8f ef       	ldi	r24, 0xFF	; 255
 53e:	9f ef       	ldi	r25, 0xFF	; 255
 540:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 544:	08 95       	ret
		case 2:
		ACTIVATION(2,75,65);
 546:	41 e4       	ldi	r20, 0x41	; 65
 548:	50 e0       	ldi	r21, 0x00	; 0
 54a:	6b e4       	ldi	r22, 0x4B	; 75
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	82 e0       	ldi	r24, 0x02	; 2
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 556:	08 95       	ret
		case -2:
		ACTIVATION(-2,55,45);
 558:	4d e2       	ldi	r20, 0x2D	; 45
 55a:	50 e0       	ldi	r21, 0x00	; 0
 55c:	67 e3       	ldi	r22, 0x37	; 55
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	8e ef       	ldi	r24, 0xFE	; 254
 562:	9f ef       	ldi	r25, 0xFF	; 255
 564:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 568:	08 95       	ret
		case 3:
		ACTIVATION(3,80,70);
 56a:	46 e4       	ldi	r20, 0x46	; 70
 56c:	50 e0       	ldi	r21, 0x00	; 0
 56e:	60 e5       	ldi	r22, 0x50	; 80
 570:	70 e0       	ldi	r23, 0x00	; 0
 572:	83 e0       	ldi	r24, 0x03	; 3
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 57a:	08 95       	ret
		case -3:
		ACTIVATION(-3,50,40);
 57c:	48 e2       	ldi	r20, 0x28	; 40
 57e:	50 e0       	ldi	r21, 0x00	; 0
 580:	62 e3       	ldi	r22, 0x32	; 50
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	8d ef       	ldi	r24, 0xFD	; 253
 586:	9f ef       	ldi	r25, 0xFF	; 255
 588:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 58c:	08 95       	ret
		case 0:
		ACTIVATION(0,65,55);
 58e:	47 e3       	ldi	r20, 0x37	; 55
 590:	50 e0       	ldi	r21, 0x00	; 0
 592:	61 e4       	ldi	r22, 0x41	; 65
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 59e:	08 95       	ret
		case -4:
		ACTIVATION(-4,45,35);
 5a0:	43 e2       	ldi	r20, 0x23	; 35
 5a2:	50 e0       	ldi	r21, 0x00	; 0
 5a4:	6d e2       	ldi	r22, 0x2D	; 45
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	8c ef       	ldi	r24, 0xFC	; 252
 5aa:	9f ef       	ldi	r25, 0xFF	; 255
 5ac:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
		break;
 5b0:	08 95       	ret
		case -5:
		ACTIVATION(-5,40,30);
 5b2:	4e e1       	ldi	r20, 0x1E	; 30
 5b4:	50 e0       	ldi	r21, 0x00	; 0
 5b6:	68 e2       	ldi	r22, 0x28	; 40
 5b8:	70 e0       	ldi	r23, 0x00	; 0
 5ba:	8b ef       	ldi	r24, 0xFB	; 251
 5bc:	9f ef       	ldi	r25, 0xFF	; 255
 5be:	0e 94 32 02 	call	0x464	; 0x464 <ACTIVATION>
 5c2:	08 95       	ret

000005c4 <on_off_mode>:
	}
	
	void on_off_mode(void)
	{
		
		if(INPUT_BIT(PINB,1) && flag==0)
 5c4:	b1 9b       	sbis	0x16, 1	; 22
 5c6:	10 c0       	rjmp	.+32     	; 0x5e8 <on_off_mode+0x24>
 5c8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 5cc:	81 11       	cpse	r24, r1
 5ce:	0c c0       	rjmp	.+24     	; 0x5e8 <on_off_mode+0x24>
		{
			TOGGLe_BIT(PORTB,0);
 5d0:	88 b3       	in	r24, 0x18	; 24
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	89 27       	eor	r24, r25
 5d6:	88 bb       	out	0x18, r24	; 24
			TOGGLe_BIT(PORTA,7);
 5d8:	8b b3       	in	r24, 0x1b	; 27
 5da:	80 58       	subi	r24, 0x80	; 128
 5dc:	8b bb       	out	0x1b, r24	; 27
			flag=1;
 5de:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <flag>
			while(INPUT_BIT(PINB,1));
 5e2:	b1 99       	sbic	0x16, 1	; 22
 5e4:	fe cf       	rjmp	.-4      	; 0x5e2 <on_off_mode+0x1e>
 5e6:	08 95       	ret
		}
		else if(INPUT_BIT(PINB,1) && flag==1)
 5e8:	b1 9b       	sbis	0x16, 1	; 22
 5ea:	17 c0       	rjmp	.+46     	; 0x61a <on_off_mode+0x56>
 5ec:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 5f0:	81 30       	cpi	r24, 0x01	; 1
 5f2:	99 f4       	brne	.+38     	; 0x61a <on_off_mode+0x56>
		{
			flag=0;
 5f4:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <flag>
			TOGGLe_BIT(PORTB,0);
 5f8:	98 b3       	in	r25, 0x18	; 24
 5fa:	89 27       	eor	r24, r25
 5fc:	88 bb       	out	0x18, r24	; 24
			TOGGLe_BIT(PORTA,7);
 5fe:	8b b3       	in	r24, 0x1b	; 27
 600:	80 58       	subi	r24, 0x80	; 128
 602:	8b bb       	out	0x1b, r24	; 27
			OUTPUT_MODULE_OFF(PORTB,4);
 604:	88 b3       	in	r24, 0x18	; 24
 606:	8f 7e       	andi	r24, 0xEF	; 239
 608:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_OFF(PORTB,5);
 60a:	88 b3       	in	r24, 0x18	; 24
 60c:	8f 7d       	andi	r24, 0xDF	; 223
 60e:	88 bb       	out	0x18, r24	; 24
			OUTPUT_MODULE_OFF(PORTB,6);
 610:	88 b3       	in	r24, 0x18	; 24
 612:	8f 7b       	andi	r24, 0xBF	; 191
 614:	88 bb       	out	0x18, r24	; 24
			
			while(INPUT_BIT(PINB,1));
 616:	b1 99       	sbic	0x16, 1	; 22
 618:	fe cf       	rjmp	.-4      	; 0x616 <on_off_mode+0x52>
 61a:	08 95       	ret

0000061c <on_off_7_segment>:
		 
		
	}
	void on_off_7_segment(u8 Mode)
	{
		if(Mode==1)
 61c:	81 30       	cpi	r24, 0x01	; 1
 61e:	39 f4       	brne	.+14     	; 0x62e <on_off_7_segment+0x12>
		{
			  OUTPUT_MODULE_OFF(PORTB,0);
 620:	88 b3       	in	r24, 0x18	; 24
 622:	8e 7f       	andi	r24, 0xFE	; 254
 624:	88 bb       	out	0x18, r24	; 24
			  OUTPUT_MODULE_OFF(PORTA,7);
 626:	8b b3       	in	r24, 0x1b	; 27
 628:	8f 77       	andi	r24, 0x7F	; 127
 62a:	8b bb       	out	0x1b, r24	; 27
 62c:	08 95       	ret
		}
		else if(Mode==0)
 62e:	81 11       	cpse	r24, r1
 630:	06 c0       	rjmp	.+12     	; 0x63e <on_off_7_segment+0x22>
		{
	  OUTPUT_MODULE_ON(PORTB,0);
 632:	88 b3       	in	r24, 0x18	; 24
 634:	81 60       	ori	r24, 0x01	; 1
 636:	88 bb       	out	0x18, r24	; 24
	  OUTPUT_MODULE_ON(PORTA,7);
 638:	8b b3       	in	r24, 0x1b	; 27
 63a:	80 68       	ori	r24, 0x80	; 128
 63c:	8b bb       	out	0x1b, r24	; 27
 63e:	08 95       	ret

00000640 <current_water_temperature>:
	}
	
	
	void current_water_temperature(void)
	{
		on_off_7_segment(1);
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 0e 03 	call	0x61c	; 0x61c <on_off_7_segment>
		PORTD=decimal_to_bcd(x);
 648:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <x>
 64c:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <x+0x1>
 650:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <x+0x2>
 654:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <x+0x3>
 658:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__fixunssfsi>
 65c:	86 2f       	mov	r24, r22
 65e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <decimal_to_bcd>
 662:	82 bb       	out	0x12, r24	; 18
 664:	08 95       	ret

00000666 <ELECTRIC_WATER_HEATER>:
s64 counter_for_Timer=0;

	 /*the main process*/
 void  ELECTRIC_WATER_HEATER(void)
	{	 	
		INT_interrupt();  /* initialize internally interrupt Timer1*/
 666:	0e 94 a7 00 	call	0x14e	; 0x14e <INT_interrupt>
		ADC_init(); /* initialize ADC driver */
 66a:	0e 94 91 00 	call	0x122	; 0x122 <ADC_init>
		DDRD=0xFF;
 66e:	8f ef       	ldi	r24, 0xFF	; 255
 670:	81 bb       	out	0x11, r24	; 17
		OUTPUT_MODULE(DDRB,0); //set Enable of first 7 segment as output
 672:	87 b3       	in	r24, 0x17	; 23
 674:	81 60       	ori	r24, 0x01	; 1
 676:	87 bb       	out	0x17, r24	; 23
		OUTPUT_MODULE(DDRA,7); //set Enable of second 7 segment as output  
 678:	8a b3       	in	r24, 0x1a	; 26
 67a:	80 68       	ori	r24, 0x80	; 128
 67c:	8a bb       	out	0x1a, r24	; 26
		OUTPUT_MODULE(DDRB,5); //set cooling fan as output 
 67e:	87 b3       	in	r24, 0x17	; 23
 680:	80 62       	ori	r24, 0x20	; 32
 682:	87 bb       	out	0x17, r24	; 23
		OUTPUT_MODULE(DDRB,6); //set Heater as output 
 684:	87 b3       	in	r24, 0x17	; 23
 686:	80 64       	ori	r24, 0x40	; 64
 688:	87 bb       	out	0x17, r24	; 23
		OUTPUT_MODULE(DDRB,4); //set Heater LED as output
 68a:	87 b3       	in	r24, 0x17	; 23
 68c:	80 61       	ori	r24, 0x10	; 16
 68e:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,3); //set increment temperature button to be input
 690:	87 b3       	in	r24, 0x17	; 23
 692:	87 7f       	andi	r24, 0xF7	; 247
 694:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,2); //set decrement temperature button to be input
 696:	87 b3       	in	r24, 0x17	; 23
 698:	8b 7f       	andi	r24, 0xFB	; 251
 69a:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,1); //set OFF/ON button to be input
 69c:	87 b3       	in	r24, 0x17	; 23
 69e:	8d 7f       	andi	r24, 0xFD	; 253
 6a0:	87 bb       	out	0x17, r24	; 23
		  /* deceleration, initialize 7_segments by 60*/
		PORTD=0x60;
 6a2:	80 e6       	ldi	r24, 0x60	; 96
 6a4:	82 bb       	out	0x12, r24	; 18
		/* initialization cooling fan,heater ,heater LED to be off */	
		OUTPUT_MODULE_OFF(PORTB,4);
 6a6:	88 b3       	in	r24, 0x18	; 24
 6a8:	8f 7e       	andi	r24, 0xEF	; 239
 6aa:	88 bb       	out	0x18, r24	; 24
	OUTPUT_MODULE_OFF(PORTB,5);
 6ac:	88 b3       	in	r24, 0x18	; 24
 6ae:	8f 7d       	andi	r24, 0xDF	; 223
 6b0:	88 bb       	out	0x18, r24	; 24
    OUTPUT_MODULE_OFF(PORTB,6);
 6b2:	88 b3       	in	r24, 0x18	; 24
 6b4:	8f 7b       	andi	r24, 0xBF	; 191
 6b6:	88 bb       	out	0x18, r24	; 24
	// initialization Enables of 7 segments to be off as active low 
		OUTPUT_MODULE_ON(PORTB,0);
 6b8:	88 b3       	in	r24, 0x18	; 24
 6ba:	81 60       	ori	r24, 0x01	; 1
 6bc:	88 bb       	out	0x18, r24	; 24
		OUTPUT_MODULE_ON(PORTA,7);
 6be:	8b b3       	in	r24, 0x1b	; 27
 6c0:	80 68       	ori	r24, 0x80	; 128
 6c2:	8b bb       	out	0x1b, r24	; 27
	
		//super loop for repeating this code infinitely
		while(1)  
		{
			
			 on_off_mode();
 6c4:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <on_off_mode>
			 while(flag==1)
 6c8:	90 c0       	rjmp	.+288    	; 0x7ea <ELECTRIC_WATER_HEATER+0x184>
			 {
			
			current_water_temperature();
 6ca:	0e 94 20 03 	call	0x640	; 0x640 <current_water_temperature>
					   ELEMENTS();
 6ce:	0e 94 84 02 	call	0x508	; 0x508 <ELEMENTS>
					  on_off_mode();
 6d2:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <on_off_mode>
					  if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
 6d6:	b3 99       	sbic	0x16, 3	; 22
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <ELECTRIC_WATER_HEATER+0x78>
 6da:	b2 9b       	sbis	0x16, 2	; 22
 6dc:	86 c0       	rjmp	.+268    	; 0x7ea <ELECTRIC_WATER_HEATER+0x184>
					  {
						  counter_for_Timer=0;
 6de:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 6e2:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6e6:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 6ea:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 6ee:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 6f2:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 6f6:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 6fa:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
						  		while( counter_for_Timer<1000)
 6fe:	5a c0       	rjmp	.+180    	; 0x7b4 <ELECTRIC_WATER_HEATER+0x14e>
						  		{	on_off_7_segment(1);
 700:	81 e0       	ldi	r24, 0x01	; 1
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	0e 94 0e 03 	call	0x61c	; 0x61c <on_off_7_segment>
							  		setting_temp();
 708:	0e 94 c5 01 	call	0x38a	; 0x38a <setting_temp>
							  		ELEMENTS();
 70c:	0e 94 84 02 	call	0x508	; 0x508 <ELEMENTS>
							  		on_off_mode();
 710:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <on_off_mode>
									  	counter_for_Timer++;
 714:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 718:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 71c:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 720:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 724:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 728:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 72c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 730:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 734:	a1 e0       	ldi	r26, 0x01	; 1
 736:	0e 94 ba 07 	call	0xf74	; 0xf74 <__adddi3_s8>
 73a:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 73e:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 742:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 746:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 74a:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 74e:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 752:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 756:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
									  on_off_7_segment(0);
 75a:	80 e0       	ldi	r24, 0x00	; 0
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 0e 03 	call	0x61c	; 0x61c <on_off_7_segment>
									  setting_temp();
 762:	0e 94 c5 01 	call	0x38a	; 0x38a <setting_temp>
									  ELEMENTS();
 766:	0e 94 84 02 	call	0x508	; 0x508 <ELEMENTS>
									  on_off_mode();
 76a:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <on_off_mode>
							  		counter_for_Timer++;
 76e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 772:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 776:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 77a:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 77e:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 782:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 786:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 78a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 78e:	a1 e0       	ldi	r26, 0x01	; 1
 790:	0e 94 ba 07 	call	0xf74	; 0xf74 <__adddi3_s8>
 794:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 798:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 79c:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 7a0:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 7a4:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 7a8:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 7ac:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 7b0:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
					   ELEMENTS();
					  on_off_mode();
					  if(((INPUT_BIT(PINB,3) || INPUT_BIT(PINB,2))))
					  {
						  counter_for_Timer=0;
						  		while( counter_for_Timer<1000)
 7b4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 7b8:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 7bc:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 7c0:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 7c4:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 7c8:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 7cc:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 7d0:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 7d4:	27 3e       	cpi	r18, 0xE7	; 231
 7d6:	33 40       	sbci	r19, 0x03	; 3
 7d8:	41 05       	cpc	r20, r1
 7da:	51 05       	cpc	r21, r1
 7dc:	61 05       	cpc	r22, r1
 7de:	71 05       	cpc	r23, r1
 7e0:	81 05       	cpc	r24, r1
 7e2:	91 05       	cpc	r25, r1
 7e4:	09 f0       	breq	.+2      	; 0x7e8 <ELECTRIC_WATER_HEATER+0x182>
 7e6:	0c f4       	brge	.+2      	; 0x7ea <ELECTRIC_WATER_HEATER+0x184>
 7e8:	8b cf       	rjmp	.-234    	; 0x700 <ELECTRIC_WATER_HEATER+0x9a>
		//super loop for repeating this code infinitely
		while(1)  
		{
			
			 on_off_mode();
			 while(flag==1)
 7ea:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <flag>
 7ee:	81 30       	cpi	r24, 0x01	; 1
 7f0:	09 f4       	brne	.+2      	; 0x7f4 <ELECTRIC_WATER_HEATER+0x18e>
 7f2:	6b cf       	rjmp	.-298    	; 0x6ca <ELECTRIC_WATER_HEATER+0x64>
 7f4:	67 cf       	rjmp	.-306    	; 0x6c4 <ELECTRIC_WATER_HEATER+0x5e>

000007f6 <main>:
 * Author : Kirollos Gerges Asaad
 */ 
#include "Electric water heater.c"
void main(void)
{
   ELECTRIC_WATER_HEATER();
 7f6:	0e 94 33 03 	call	0x666	; 0x666 <ELECTRIC_WATER_HEATER>

000007fa <__subsf3>:
 7fa:	50 58       	subi	r21, 0x80	; 128

000007fc <__addsf3>:
 7fc:	bb 27       	eor	r27, r27
 7fe:	aa 27       	eor	r26, r26
 800:	0e 94 15 04 	call	0x82a	; 0x82a <__addsf3x>
 804:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_round>
 808:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_pscA>
 80c:	38 f0       	brcs	.+14     	; 0x81c <__addsf3+0x20>
 80e:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_pscB>
 812:	20 f0       	brcs	.+8      	; 0x81c <__addsf3+0x20>
 814:	39 f4       	brne	.+14     	; 0x824 <__addsf3+0x28>
 816:	9f 3f       	cpi	r25, 0xFF	; 255
 818:	19 f4       	brne	.+6      	; 0x820 <__addsf3+0x24>
 81a:	26 f4       	brtc	.+8      	; 0x824 <__addsf3+0x28>
 81c:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_nan>
 820:	0e f4       	brtc	.+2      	; 0x824 <__addsf3+0x28>
 822:	e0 95       	com	r30
 824:	e7 fb       	bst	r30, 7
 826:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>

0000082a <__addsf3x>:
 82a:	e9 2f       	mov	r30, r25
 82c:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_split3>
 830:	58 f3       	brcs	.-42     	; 0x808 <__addsf3+0xc>
 832:	ba 17       	cp	r27, r26
 834:	62 07       	cpc	r22, r18
 836:	73 07       	cpc	r23, r19
 838:	84 07       	cpc	r24, r20
 83a:	95 07       	cpc	r25, r21
 83c:	20 f0       	brcs	.+8      	; 0x846 <__addsf3x+0x1c>
 83e:	79 f4       	brne	.+30     	; 0x85e <__addsf3x+0x34>
 840:	a6 f5       	brtc	.+104    	; 0x8aa <__addsf3x+0x80>
 842:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_zero>
 846:	0e f4       	brtc	.+2      	; 0x84a <__addsf3x+0x20>
 848:	e0 95       	com	r30
 84a:	0b 2e       	mov	r0, r27
 84c:	ba 2f       	mov	r27, r26
 84e:	a0 2d       	mov	r26, r0
 850:	0b 01       	movw	r0, r22
 852:	b9 01       	movw	r22, r18
 854:	90 01       	movw	r18, r0
 856:	0c 01       	movw	r0, r24
 858:	ca 01       	movw	r24, r20
 85a:	a0 01       	movw	r20, r0
 85c:	11 24       	eor	r1, r1
 85e:	ff 27       	eor	r31, r31
 860:	59 1b       	sub	r21, r25
 862:	99 f0       	breq	.+38     	; 0x88a <__addsf3x+0x60>
 864:	59 3f       	cpi	r21, 0xF9	; 249
 866:	50 f4       	brcc	.+20     	; 0x87c <__addsf3x+0x52>
 868:	50 3e       	cpi	r21, 0xE0	; 224
 86a:	68 f1       	brcs	.+90     	; 0x8c6 <__addsf3x+0x9c>
 86c:	1a 16       	cp	r1, r26
 86e:	f0 40       	sbci	r31, 0x00	; 0
 870:	a2 2f       	mov	r26, r18
 872:	23 2f       	mov	r18, r19
 874:	34 2f       	mov	r19, r20
 876:	44 27       	eor	r20, r20
 878:	58 5f       	subi	r21, 0xF8	; 248
 87a:	f3 cf       	rjmp	.-26     	; 0x862 <__addsf3x+0x38>
 87c:	46 95       	lsr	r20
 87e:	37 95       	ror	r19
 880:	27 95       	ror	r18
 882:	a7 95       	ror	r26
 884:	f0 40       	sbci	r31, 0x00	; 0
 886:	53 95       	inc	r21
 888:	c9 f7       	brne	.-14     	; 0x87c <__addsf3x+0x52>
 88a:	7e f4       	brtc	.+30     	; 0x8aa <__addsf3x+0x80>
 88c:	1f 16       	cp	r1, r31
 88e:	ba 0b       	sbc	r27, r26
 890:	62 0b       	sbc	r22, r18
 892:	73 0b       	sbc	r23, r19
 894:	84 0b       	sbc	r24, r20
 896:	ba f0       	brmi	.+46     	; 0x8c6 <__addsf3x+0x9c>
 898:	91 50       	subi	r25, 0x01	; 1
 89a:	a1 f0       	breq	.+40     	; 0x8c4 <__addsf3x+0x9a>
 89c:	ff 0f       	add	r31, r31
 89e:	bb 1f       	adc	r27, r27
 8a0:	66 1f       	adc	r22, r22
 8a2:	77 1f       	adc	r23, r23
 8a4:	88 1f       	adc	r24, r24
 8a6:	c2 f7       	brpl	.-16     	; 0x898 <__addsf3x+0x6e>
 8a8:	0e c0       	rjmp	.+28     	; 0x8c6 <__addsf3x+0x9c>
 8aa:	ba 0f       	add	r27, r26
 8ac:	62 1f       	adc	r22, r18
 8ae:	73 1f       	adc	r23, r19
 8b0:	84 1f       	adc	r24, r20
 8b2:	48 f4       	brcc	.+18     	; 0x8c6 <__addsf3x+0x9c>
 8b4:	87 95       	ror	r24
 8b6:	77 95       	ror	r23
 8b8:	67 95       	ror	r22
 8ba:	b7 95       	ror	r27
 8bc:	f7 95       	ror	r31
 8be:	9e 3f       	cpi	r25, 0xFE	; 254
 8c0:	08 f0       	brcs	.+2      	; 0x8c4 <__addsf3x+0x9a>
 8c2:	b0 cf       	rjmp	.-160    	; 0x824 <__addsf3+0x28>
 8c4:	93 95       	inc	r25
 8c6:	88 0f       	add	r24, r24
 8c8:	08 f0       	brcs	.+2      	; 0x8cc <__addsf3x+0xa2>
 8ca:	99 27       	eor	r25, r25
 8cc:	ee 0f       	add	r30, r30
 8ce:	97 95       	ror	r25
 8d0:	87 95       	ror	r24
 8d2:	08 95       	ret

000008d4 <__cmpsf2>:
 8d4:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__fp_cmp>
 8d8:	08 f4       	brcc	.+2      	; 0x8dc <__cmpsf2+0x8>
 8da:	81 e0       	ldi	r24, 0x01	; 1
 8dc:	08 95       	ret

000008de <__divsf3>:
 8de:	0e 94 83 04 	call	0x906	; 0x906 <__divsf3x>
 8e2:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_round>
 8e6:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_pscB>
 8ea:	58 f0       	brcs	.+22     	; 0x902 <__divsf3+0x24>
 8ec:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_pscA>
 8f0:	40 f0       	brcs	.+16     	; 0x902 <__divsf3+0x24>
 8f2:	29 f4       	brne	.+10     	; 0x8fe <__divsf3+0x20>
 8f4:	5f 3f       	cpi	r21, 0xFF	; 255
 8f6:	29 f0       	breq	.+10     	; 0x902 <__divsf3+0x24>
 8f8:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>
 8fc:	51 11       	cpse	r21, r1
 8fe:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 902:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_nan>

00000906 <__divsf3x>:
 906:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_split3>
 90a:	68 f3       	brcs	.-38     	; 0x8e6 <__divsf3+0x8>

0000090c <__divsf3_pse>:
 90c:	99 23       	and	r25, r25
 90e:	b1 f3       	breq	.-20     	; 0x8fc <__divsf3+0x1e>
 910:	55 23       	and	r21, r21
 912:	91 f3       	breq	.-28     	; 0x8f8 <__divsf3+0x1a>
 914:	95 1b       	sub	r25, r21
 916:	55 0b       	sbc	r21, r21
 918:	bb 27       	eor	r27, r27
 91a:	aa 27       	eor	r26, r26
 91c:	62 17       	cp	r22, r18
 91e:	73 07       	cpc	r23, r19
 920:	84 07       	cpc	r24, r20
 922:	38 f0       	brcs	.+14     	; 0x932 <__divsf3_pse+0x26>
 924:	9f 5f       	subi	r25, 0xFF	; 255
 926:	5f 4f       	sbci	r21, 0xFF	; 255
 928:	22 0f       	add	r18, r18
 92a:	33 1f       	adc	r19, r19
 92c:	44 1f       	adc	r20, r20
 92e:	aa 1f       	adc	r26, r26
 930:	a9 f3       	breq	.-22     	; 0x91c <__divsf3_pse+0x10>
 932:	35 d0       	rcall	.+106    	; 0x99e <__divsf3_pse+0x92>
 934:	0e 2e       	mov	r0, r30
 936:	3a f0       	brmi	.+14     	; 0x946 <__divsf3_pse+0x3a>
 938:	e0 e8       	ldi	r30, 0x80	; 128
 93a:	32 d0       	rcall	.+100    	; 0x9a0 <__divsf3_pse+0x94>
 93c:	91 50       	subi	r25, 0x01	; 1
 93e:	50 40       	sbci	r21, 0x00	; 0
 940:	e6 95       	lsr	r30
 942:	00 1c       	adc	r0, r0
 944:	ca f7       	brpl	.-14     	; 0x938 <__divsf3_pse+0x2c>
 946:	2b d0       	rcall	.+86     	; 0x99e <__divsf3_pse+0x92>
 948:	fe 2f       	mov	r31, r30
 94a:	29 d0       	rcall	.+82     	; 0x99e <__divsf3_pse+0x92>
 94c:	66 0f       	add	r22, r22
 94e:	77 1f       	adc	r23, r23
 950:	88 1f       	adc	r24, r24
 952:	bb 1f       	adc	r27, r27
 954:	26 17       	cp	r18, r22
 956:	37 07       	cpc	r19, r23
 958:	48 07       	cpc	r20, r24
 95a:	ab 07       	cpc	r26, r27
 95c:	b0 e8       	ldi	r27, 0x80	; 128
 95e:	09 f0       	breq	.+2      	; 0x962 <__divsf3_pse+0x56>
 960:	bb 0b       	sbc	r27, r27
 962:	80 2d       	mov	r24, r0
 964:	bf 01       	movw	r22, r30
 966:	ff 27       	eor	r31, r31
 968:	93 58       	subi	r25, 0x83	; 131
 96a:	5f 4f       	sbci	r21, 0xFF	; 255
 96c:	3a f0       	brmi	.+14     	; 0x97c <__divsf3_pse+0x70>
 96e:	9e 3f       	cpi	r25, 0xFE	; 254
 970:	51 05       	cpc	r21, r1
 972:	78 f0       	brcs	.+30     	; 0x992 <__divsf3_pse+0x86>
 974:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>
 978:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 97c:	5f 3f       	cpi	r21, 0xFF	; 255
 97e:	e4 f3       	brlt	.-8      	; 0x978 <__divsf3_pse+0x6c>
 980:	98 3e       	cpi	r25, 0xE8	; 232
 982:	d4 f3       	brlt	.-12     	; 0x978 <__divsf3_pse+0x6c>
 984:	86 95       	lsr	r24
 986:	77 95       	ror	r23
 988:	67 95       	ror	r22
 98a:	b7 95       	ror	r27
 98c:	f7 95       	ror	r31
 98e:	9f 5f       	subi	r25, 0xFF	; 255
 990:	c9 f7       	brne	.-14     	; 0x984 <__divsf3_pse+0x78>
 992:	88 0f       	add	r24, r24
 994:	91 1d       	adc	r25, r1
 996:	96 95       	lsr	r25
 998:	87 95       	ror	r24
 99a:	97 f9       	bld	r25, 7
 99c:	08 95       	ret
 99e:	e1 e0       	ldi	r30, 0x01	; 1
 9a0:	66 0f       	add	r22, r22
 9a2:	77 1f       	adc	r23, r23
 9a4:	88 1f       	adc	r24, r24
 9a6:	bb 1f       	adc	r27, r27
 9a8:	62 17       	cp	r22, r18
 9aa:	73 07       	cpc	r23, r19
 9ac:	84 07       	cpc	r24, r20
 9ae:	ba 07       	cpc	r27, r26
 9b0:	20 f0       	brcs	.+8      	; 0x9ba <__divsf3_pse+0xae>
 9b2:	62 1b       	sub	r22, r18
 9b4:	73 0b       	sbc	r23, r19
 9b6:	84 0b       	sbc	r24, r20
 9b8:	ba 0b       	sbc	r27, r26
 9ba:	ee 1f       	adc	r30, r30
 9bc:	88 f7       	brcc	.-30     	; 0x9a0 <__divsf3_pse+0x94>
 9be:	e0 95       	com	r30
 9c0:	08 95       	ret

000009c2 <__fixunssfsi>:
 9c2:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_splitA>
 9c6:	88 f0       	brcs	.+34     	; 0x9ea <__fixunssfsi+0x28>
 9c8:	9f 57       	subi	r25, 0x7F	; 127
 9ca:	98 f0       	brcs	.+38     	; 0x9f2 <__fixunssfsi+0x30>
 9cc:	b9 2f       	mov	r27, r25
 9ce:	99 27       	eor	r25, r25
 9d0:	b7 51       	subi	r27, 0x17	; 23
 9d2:	b0 f0       	brcs	.+44     	; 0xa00 <__fixunssfsi+0x3e>
 9d4:	e1 f0       	breq	.+56     	; 0xa0e <__fixunssfsi+0x4c>
 9d6:	66 0f       	add	r22, r22
 9d8:	77 1f       	adc	r23, r23
 9da:	88 1f       	adc	r24, r24
 9dc:	99 1f       	adc	r25, r25
 9de:	1a f0       	brmi	.+6      	; 0x9e6 <__fixunssfsi+0x24>
 9e0:	ba 95       	dec	r27
 9e2:	c9 f7       	brne	.-14     	; 0x9d6 <__fixunssfsi+0x14>
 9e4:	14 c0       	rjmp	.+40     	; 0xa0e <__fixunssfsi+0x4c>
 9e6:	b1 30       	cpi	r27, 0x01	; 1
 9e8:	91 f0       	breq	.+36     	; 0xa0e <__fixunssfsi+0x4c>
 9ea:	0e 94 bb 05 	call	0xb76	; 0xb76 <__fp_zero>
 9ee:	b1 e0       	ldi	r27, 0x01	; 1
 9f0:	08 95       	ret
 9f2:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_zero>
 9f6:	67 2f       	mov	r22, r23
 9f8:	78 2f       	mov	r23, r24
 9fa:	88 27       	eor	r24, r24
 9fc:	b8 5f       	subi	r27, 0xF8	; 248
 9fe:	39 f0       	breq	.+14     	; 0xa0e <__fixunssfsi+0x4c>
 a00:	b9 3f       	cpi	r27, 0xF9	; 249
 a02:	cc f3       	brlt	.-14     	; 0x9f6 <__fixunssfsi+0x34>
 a04:	86 95       	lsr	r24
 a06:	77 95       	ror	r23
 a08:	67 95       	ror	r22
 a0a:	b3 95       	inc	r27
 a0c:	d9 f7       	brne	.-10     	; 0xa04 <__fixunssfsi+0x42>
 a0e:	3e f4       	brtc	.+14     	; 0xa1e <__fixunssfsi+0x5c>
 a10:	90 95       	com	r25
 a12:	80 95       	com	r24
 a14:	70 95       	com	r23
 a16:	61 95       	neg	r22
 a18:	7f 4f       	sbci	r23, 0xFF	; 255
 a1a:	8f 4f       	sbci	r24, 0xFF	; 255
 a1c:	9f 4f       	sbci	r25, 0xFF	; 255
 a1e:	08 95       	ret

00000a20 <__floatunsisf>:
 a20:	e8 94       	clt
 a22:	09 c0       	rjmp	.+18     	; 0xa36 <__floatsisf+0x12>

00000a24 <__floatsisf>:
 a24:	97 fb       	bst	r25, 7
 a26:	3e f4       	brtc	.+14     	; 0xa36 <__floatsisf+0x12>
 a28:	90 95       	com	r25
 a2a:	80 95       	com	r24
 a2c:	70 95       	com	r23
 a2e:	61 95       	neg	r22
 a30:	7f 4f       	sbci	r23, 0xFF	; 255
 a32:	8f 4f       	sbci	r24, 0xFF	; 255
 a34:	9f 4f       	sbci	r25, 0xFF	; 255
 a36:	99 23       	and	r25, r25
 a38:	a9 f0       	breq	.+42     	; 0xa64 <__floatsisf+0x40>
 a3a:	f9 2f       	mov	r31, r25
 a3c:	96 e9       	ldi	r25, 0x96	; 150
 a3e:	bb 27       	eor	r27, r27
 a40:	93 95       	inc	r25
 a42:	f6 95       	lsr	r31
 a44:	87 95       	ror	r24
 a46:	77 95       	ror	r23
 a48:	67 95       	ror	r22
 a4a:	b7 95       	ror	r27
 a4c:	f1 11       	cpse	r31, r1
 a4e:	f8 cf       	rjmp	.-16     	; 0xa40 <__floatsisf+0x1c>
 a50:	fa f4       	brpl	.+62     	; 0xa90 <__floatsisf+0x6c>
 a52:	bb 0f       	add	r27, r27
 a54:	11 f4       	brne	.+4      	; 0xa5a <__floatsisf+0x36>
 a56:	60 ff       	sbrs	r22, 0
 a58:	1b c0       	rjmp	.+54     	; 0xa90 <__floatsisf+0x6c>
 a5a:	6f 5f       	subi	r22, 0xFF	; 255
 a5c:	7f 4f       	sbci	r23, 0xFF	; 255
 a5e:	8f 4f       	sbci	r24, 0xFF	; 255
 a60:	9f 4f       	sbci	r25, 0xFF	; 255
 a62:	16 c0       	rjmp	.+44     	; 0xa90 <__floatsisf+0x6c>
 a64:	88 23       	and	r24, r24
 a66:	11 f0       	breq	.+4      	; 0xa6c <__floatsisf+0x48>
 a68:	96 e9       	ldi	r25, 0x96	; 150
 a6a:	11 c0       	rjmp	.+34     	; 0xa8e <__floatsisf+0x6a>
 a6c:	77 23       	and	r23, r23
 a6e:	21 f0       	breq	.+8      	; 0xa78 <__floatsisf+0x54>
 a70:	9e e8       	ldi	r25, 0x8E	; 142
 a72:	87 2f       	mov	r24, r23
 a74:	76 2f       	mov	r23, r22
 a76:	05 c0       	rjmp	.+10     	; 0xa82 <__floatsisf+0x5e>
 a78:	66 23       	and	r22, r22
 a7a:	71 f0       	breq	.+28     	; 0xa98 <__floatsisf+0x74>
 a7c:	96 e8       	ldi	r25, 0x86	; 134
 a7e:	86 2f       	mov	r24, r22
 a80:	70 e0       	ldi	r23, 0x00	; 0
 a82:	60 e0       	ldi	r22, 0x00	; 0
 a84:	2a f0       	brmi	.+10     	; 0xa90 <__floatsisf+0x6c>
 a86:	9a 95       	dec	r25
 a88:	66 0f       	add	r22, r22
 a8a:	77 1f       	adc	r23, r23
 a8c:	88 1f       	adc	r24, r24
 a8e:	da f7       	brpl	.-10     	; 0xa86 <__floatsisf+0x62>
 a90:	88 0f       	add	r24, r24
 a92:	96 95       	lsr	r25
 a94:	87 95       	ror	r24
 a96:	97 f9       	bld	r25, 7
 a98:	08 95       	ret

00000a9a <__fp_cmp>:
 a9a:	99 0f       	add	r25, r25
 a9c:	00 08       	sbc	r0, r0
 a9e:	55 0f       	add	r21, r21
 aa0:	aa 0b       	sbc	r26, r26
 aa2:	e0 e8       	ldi	r30, 0x80	; 128
 aa4:	fe ef       	ldi	r31, 0xFE	; 254
 aa6:	16 16       	cp	r1, r22
 aa8:	17 06       	cpc	r1, r23
 aaa:	e8 07       	cpc	r30, r24
 aac:	f9 07       	cpc	r31, r25
 aae:	c0 f0       	brcs	.+48     	; 0xae0 <__fp_cmp+0x46>
 ab0:	12 16       	cp	r1, r18
 ab2:	13 06       	cpc	r1, r19
 ab4:	e4 07       	cpc	r30, r20
 ab6:	f5 07       	cpc	r31, r21
 ab8:	98 f0       	brcs	.+38     	; 0xae0 <__fp_cmp+0x46>
 aba:	62 1b       	sub	r22, r18
 abc:	73 0b       	sbc	r23, r19
 abe:	84 0b       	sbc	r24, r20
 ac0:	95 0b       	sbc	r25, r21
 ac2:	39 f4       	brne	.+14     	; 0xad2 <__fp_cmp+0x38>
 ac4:	0a 26       	eor	r0, r26
 ac6:	61 f0       	breq	.+24     	; 0xae0 <__fp_cmp+0x46>
 ac8:	23 2b       	or	r18, r19
 aca:	24 2b       	or	r18, r20
 acc:	25 2b       	or	r18, r21
 ace:	21 f4       	brne	.+8      	; 0xad8 <__fp_cmp+0x3e>
 ad0:	08 95       	ret
 ad2:	0a 26       	eor	r0, r26
 ad4:	09 f4       	brne	.+2      	; 0xad8 <__fp_cmp+0x3e>
 ad6:	a1 40       	sbci	r26, 0x01	; 1
 ad8:	a6 95       	lsr	r26
 ada:	8f ef       	ldi	r24, 0xFF	; 255
 adc:	81 1d       	adc	r24, r1
 ade:	81 1d       	adc	r24, r1
 ae0:	08 95       	ret

00000ae2 <__fp_inf>:
 ae2:	97 f9       	bld	r25, 7
 ae4:	9f 67       	ori	r25, 0x7F	; 127
 ae6:	80 e8       	ldi	r24, 0x80	; 128
 ae8:	70 e0       	ldi	r23, 0x00	; 0
 aea:	60 e0       	ldi	r22, 0x00	; 0
 aec:	08 95       	ret

00000aee <__fp_nan>:
 aee:	9f ef       	ldi	r25, 0xFF	; 255
 af0:	80 ec       	ldi	r24, 0xC0	; 192
 af2:	08 95       	ret

00000af4 <__fp_pscA>:
 af4:	00 24       	eor	r0, r0
 af6:	0a 94       	dec	r0
 af8:	16 16       	cp	r1, r22
 afa:	17 06       	cpc	r1, r23
 afc:	18 06       	cpc	r1, r24
 afe:	09 06       	cpc	r0, r25
 b00:	08 95       	ret

00000b02 <__fp_pscB>:
 b02:	00 24       	eor	r0, r0
 b04:	0a 94       	dec	r0
 b06:	12 16       	cp	r1, r18
 b08:	13 06       	cpc	r1, r19
 b0a:	14 06       	cpc	r1, r20
 b0c:	05 06       	cpc	r0, r21
 b0e:	08 95       	ret

00000b10 <__fp_round>:
 b10:	09 2e       	mov	r0, r25
 b12:	03 94       	inc	r0
 b14:	00 0c       	add	r0, r0
 b16:	11 f4       	brne	.+4      	; 0xb1c <__fp_round+0xc>
 b18:	88 23       	and	r24, r24
 b1a:	52 f0       	brmi	.+20     	; 0xb30 <__fp_round+0x20>
 b1c:	bb 0f       	add	r27, r27
 b1e:	40 f4       	brcc	.+16     	; 0xb30 <__fp_round+0x20>
 b20:	bf 2b       	or	r27, r31
 b22:	11 f4       	brne	.+4      	; 0xb28 <__fp_round+0x18>
 b24:	60 ff       	sbrs	r22, 0
 b26:	04 c0       	rjmp	.+8      	; 0xb30 <__fp_round+0x20>
 b28:	6f 5f       	subi	r22, 0xFF	; 255
 b2a:	7f 4f       	sbci	r23, 0xFF	; 255
 b2c:	8f 4f       	sbci	r24, 0xFF	; 255
 b2e:	9f 4f       	sbci	r25, 0xFF	; 255
 b30:	08 95       	ret

00000b32 <__fp_split3>:
 b32:	57 fd       	sbrc	r21, 7
 b34:	90 58       	subi	r25, 0x80	; 128
 b36:	44 0f       	add	r20, r20
 b38:	55 1f       	adc	r21, r21
 b3a:	59 f0       	breq	.+22     	; 0xb52 <__fp_splitA+0x10>
 b3c:	5f 3f       	cpi	r21, 0xFF	; 255
 b3e:	71 f0       	breq	.+28     	; 0xb5c <__fp_splitA+0x1a>
 b40:	47 95       	ror	r20

00000b42 <__fp_splitA>:
 b42:	88 0f       	add	r24, r24
 b44:	97 fb       	bst	r25, 7
 b46:	99 1f       	adc	r25, r25
 b48:	61 f0       	breq	.+24     	; 0xb62 <__fp_splitA+0x20>
 b4a:	9f 3f       	cpi	r25, 0xFF	; 255
 b4c:	79 f0       	breq	.+30     	; 0xb6c <__fp_splitA+0x2a>
 b4e:	87 95       	ror	r24
 b50:	08 95       	ret
 b52:	12 16       	cp	r1, r18
 b54:	13 06       	cpc	r1, r19
 b56:	14 06       	cpc	r1, r20
 b58:	55 1f       	adc	r21, r21
 b5a:	f2 cf       	rjmp	.-28     	; 0xb40 <__fp_split3+0xe>
 b5c:	46 95       	lsr	r20
 b5e:	f1 df       	rcall	.-30     	; 0xb42 <__fp_splitA>
 b60:	08 c0       	rjmp	.+16     	; 0xb72 <__fp_splitA+0x30>
 b62:	16 16       	cp	r1, r22
 b64:	17 06       	cpc	r1, r23
 b66:	18 06       	cpc	r1, r24
 b68:	99 1f       	adc	r25, r25
 b6a:	f1 cf       	rjmp	.-30     	; 0xb4e <__fp_splitA+0xc>
 b6c:	86 95       	lsr	r24
 b6e:	71 05       	cpc	r23, r1
 b70:	61 05       	cpc	r22, r1
 b72:	08 94       	sec
 b74:	08 95       	ret

00000b76 <__fp_zero>:
 b76:	e8 94       	clt

00000b78 <__fp_szero>:
 b78:	bb 27       	eor	r27, r27
 b7a:	66 27       	eor	r22, r22
 b7c:	77 27       	eor	r23, r23
 b7e:	cb 01       	movw	r24, r22
 b80:	97 f9       	bld	r25, 7
 b82:	08 95       	ret

00000b84 <__mulsf3>:
 b84:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__mulsf3x>
 b88:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_round>
 b8c:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_pscA>
 b90:	38 f0       	brcs	.+14     	; 0xba0 <__mulsf3+0x1c>
 b92:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_pscB>
 b96:	20 f0       	brcs	.+8      	; 0xba0 <__mulsf3+0x1c>
 b98:	95 23       	and	r25, r21
 b9a:	11 f0       	breq	.+4      	; 0xba0 <__mulsf3+0x1c>
 b9c:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>
 ba0:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_nan>
 ba4:	11 24       	eor	r1, r1
 ba6:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>

00000baa <__mulsf3x>:
 baa:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_split3>
 bae:	70 f3       	brcs	.-36     	; 0xb8c <__mulsf3+0x8>

00000bb0 <__mulsf3_pse>:
 bb0:	95 9f       	mul	r25, r21
 bb2:	c1 f3       	breq	.-16     	; 0xba4 <__mulsf3+0x20>
 bb4:	95 0f       	add	r25, r21
 bb6:	50 e0       	ldi	r21, 0x00	; 0
 bb8:	55 1f       	adc	r21, r21
 bba:	62 9f       	mul	r22, r18
 bbc:	f0 01       	movw	r30, r0
 bbe:	72 9f       	mul	r23, r18
 bc0:	bb 27       	eor	r27, r27
 bc2:	f0 0d       	add	r31, r0
 bc4:	b1 1d       	adc	r27, r1
 bc6:	63 9f       	mul	r22, r19
 bc8:	aa 27       	eor	r26, r26
 bca:	f0 0d       	add	r31, r0
 bcc:	b1 1d       	adc	r27, r1
 bce:	aa 1f       	adc	r26, r26
 bd0:	64 9f       	mul	r22, r20
 bd2:	66 27       	eor	r22, r22
 bd4:	b0 0d       	add	r27, r0
 bd6:	a1 1d       	adc	r26, r1
 bd8:	66 1f       	adc	r22, r22
 bda:	82 9f       	mul	r24, r18
 bdc:	22 27       	eor	r18, r18
 bde:	b0 0d       	add	r27, r0
 be0:	a1 1d       	adc	r26, r1
 be2:	62 1f       	adc	r22, r18
 be4:	73 9f       	mul	r23, r19
 be6:	b0 0d       	add	r27, r0
 be8:	a1 1d       	adc	r26, r1
 bea:	62 1f       	adc	r22, r18
 bec:	83 9f       	mul	r24, r19
 bee:	a0 0d       	add	r26, r0
 bf0:	61 1d       	adc	r22, r1
 bf2:	22 1f       	adc	r18, r18
 bf4:	74 9f       	mul	r23, r20
 bf6:	33 27       	eor	r19, r19
 bf8:	a0 0d       	add	r26, r0
 bfa:	61 1d       	adc	r22, r1
 bfc:	23 1f       	adc	r18, r19
 bfe:	84 9f       	mul	r24, r20
 c00:	60 0d       	add	r22, r0
 c02:	21 1d       	adc	r18, r1
 c04:	82 2f       	mov	r24, r18
 c06:	76 2f       	mov	r23, r22
 c08:	6a 2f       	mov	r22, r26
 c0a:	11 24       	eor	r1, r1
 c0c:	9f 57       	subi	r25, 0x7F	; 127
 c0e:	50 40       	sbci	r21, 0x00	; 0
 c10:	9a f0       	brmi	.+38     	; 0xc38 <__mulsf3_pse+0x88>
 c12:	f1 f0       	breq	.+60     	; 0xc50 <__mulsf3_pse+0xa0>
 c14:	88 23       	and	r24, r24
 c16:	4a f0       	brmi	.+18     	; 0xc2a <__mulsf3_pse+0x7a>
 c18:	ee 0f       	add	r30, r30
 c1a:	ff 1f       	adc	r31, r31
 c1c:	bb 1f       	adc	r27, r27
 c1e:	66 1f       	adc	r22, r22
 c20:	77 1f       	adc	r23, r23
 c22:	88 1f       	adc	r24, r24
 c24:	91 50       	subi	r25, 0x01	; 1
 c26:	50 40       	sbci	r21, 0x00	; 0
 c28:	a9 f7       	brne	.-22     	; 0xc14 <__mulsf3_pse+0x64>
 c2a:	9e 3f       	cpi	r25, 0xFE	; 254
 c2c:	51 05       	cpc	r21, r1
 c2e:	80 f0       	brcs	.+32     	; 0xc50 <__mulsf3_pse+0xa0>
 c30:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>
 c34:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 c38:	5f 3f       	cpi	r21, 0xFF	; 255
 c3a:	e4 f3       	brlt	.-8      	; 0xc34 <__mulsf3_pse+0x84>
 c3c:	98 3e       	cpi	r25, 0xE8	; 232
 c3e:	d4 f3       	brlt	.-12     	; 0xc34 <__mulsf3_pse+0x84>
 c40:	86 95       	lsr	r24
 c42:	77 95       	ror	r23
 c44:	67 95       	ror	r22
 c46:	b7 95       	ror	r27
 c48:	f7 95       	ror	r31
 c4a:	e7 95       	ror	r30
 c4c:	9f 5f       	subi	r25, 0xFF	; 255
 c4e:	c1 f7       	brne	.-16     	; 0xc40 <__mulsf3_pse+0x90>
 c50:	fe 2b       	or	r31, r30
 c52:	88 0f       	add	r24, r24
 c54:	91 1d       	adc	r25, r1
 c56:	96 95       	lsr	r25
 c58:	87 95       	ror	r24
 c5a:	97 f9       	bld	r25, 7
 c5c:	08 95       	ret

00000c5e <pow>:
 c5e:	fa 01       	movw	r30, r20
 c60:	ee 0f       	add	r30, r30
 c62:	ff 1f       	adc	r31, r31
 c64:	30 96       	adiw	r30, 0x00	; 0
 c66:	21 05       	cpc	r18, r1
 c68:	31 05       	cpc	r19, r1
 c6a:	a1 f1       	breq	.+104    	; 0xcd4 <pow+0x76>
 c6c:	61 15       	cp	r22, r1
 c6e:	71 05       	cpc	r23, r1
 c70:	61 f4       	brne	.+24     	; 0xc8a <pow+0x2c>
 c72:	80 38       	cpi	r24, 0x80	; 128
 c74:	bf e3       	ldi	r27, 0x3F	; 63
 c76:	9b 07       	cpc	r25, r27
 c78:	49 f1       	breq	.+82     	; 0xccc <pow+0x6e>
 c7a:	68 94       	set
 c7c:	90 38       	cpi	r25, 0x80	; 128
 c7e:	81 05       	cpc	r24, r1
 c80:	61 f0       	breq	.+24     	; 0xc9a <pow+0x3c>
 c82:	80 38       	cpi	r24, 0x80	; 128
 c84:	bf ef       	ldi	r27, 0xFF	; 255
 c86:	9b 07       	cpc	r25, r27
 c88:	41 f0       	breq	.+16     	; 0xc9a <pow+0x3c>
 c8a:	99 23       	and	r25, r25
 c8c:	4a f5       	brpl	.+82     	; 0xce0 <pow+0x82>
 c8e:	ff 3f       	cpi	r31, 0xFF	; 255
 c90:	e1 05       	cpc	r30, r1
 c92:	31 05       	cpc	r19, r1
 c94:	21 05       	cpc	r18, r1
 c96:	19 f1       	breq	.+70     	; 0xcde <pow+0x80>
 c98:	e8 94       	clt
 c9a:	08 94       	sec
 c9c:	e7 95       	ror	r30
 c9e:	d9 01       	movw	r26, r18
 ca0:	aa 23       	and	r26, r26
 ca2:	29 f4       	brne	.+10     	; 0xcae <pow+0x50>
 ca4:	ab 2f       	mov	r26, r27
 ca6:	be 2f       	mov	r27, r30
 ca8:	f8 5f       	subi	r31, 0xF8	; 248
 caa:	d0 f3       	brcs	.-12     	; 0xca0 <pow+0x42>
 cac:	10 c0       	rjmp	.+32     	; 0xcce <pow+0x70>
 cae:	ff 5f       	subi	r31, 0xFF	; 255
 cb0:	70 f4       	brcc	.+28     	; 0xcce <pow+0x70>
 cb2:	a6 95       	lsr	r26
 cb4:	e0 f7       	brcc	.-8      	; 0xcae <pow+0x50>
 cb6:	f7 39       	cpi	r31, 0x97	; 151
 cb8:	50 f0       	brcs	.+20     	; 0xcce <pow+0x70>
 cba:	19 f0       	breq	.+6      	; 0xcc2 <pow+0x64>
 cbc:	ff 3a       	cpi	r31, 0xAF	; 175
 cbe:	38 f4       	brcc	.+14     	; 0xcce <pow+0x70>
 cc0:	9f 77       	andi	r25, 0x7F	; 127
 cc2:	9f 93       	push	r25
 cc4:	0d d0       	rcall	.+26     	; 0xce0 <pow+0x82>
 cc6:	0f 90       	pop	r0
 cc8:	07 fc       	sbrc	r0, 7
 cca:	90 58       	subi	r25, 0x80	; 128
 ccc:	08 95       	ret
 cce:	46 f0       	brts	.+16     	; 0xce0 <pow+0x82>
 cd0:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_nan>
 cd4:	60 e0       	ldi	r22, 0x00	; 0
 cd6:	70 e0       	ldi	r23, 0x00	; 0
 cd8:	80 e8       	ldi	r24, 0x80	; 128
 cda:	9f e3       	ldi	r25, 0x3F	; 63
 cdc:	08 95       	ret
 cde:	4f e7       	ldi	r20, 0x7F	; 127
 ce0:	9f 77       	andi	r25, 0x7F	; 127
 ce2:	5f 93       	push	r21
 ce4:	4f 93       	push	r20
 ce6:	3f 93       	push	r19
 ce8:	2f 93       	push	r18
 cea:	0e 94 2a 07 	call	0xe54	; 0xe54 <log>
 cee:	2f 91       	pop	r18
 cf0:	3f 91       	pop	r19
 cf2:	4f 91       	pop	r20
 cf4:	5f 91       	pop	r21
 cf6:	0e 94 c2 05 	call	0xb84	; 0xb84 <__mulsf3>
 cfa:	0c 94 87 06 	jmp	0xd0e	; 0xd0e <exp>
 cfe:	29 f4       	brne	.+10     	; 0xd0a <pow+0xac>
 d00:	16 f0       	brts	.+4      	; 0xd06 <pow+0xa8>
 d02:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>
 d06:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_zero>
 d0a:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_nan>

00000d0e <exp>:
 d0e:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_splitA>
 d12:	a8 f3       	brcs	.-22     	; 0xcfe <pow+0xa0>
 d14:	96 38       	cpi	r25, 0x86	; 134
 d16:	a0 f7       	brcc	.-24     	; 0xd00 <pow+0xa2>
 d18:	07 f8       	bld	r0, 7
 d1a:	0f 92       	push	r0
 d1c:	e8 94       	clt
 d1e:	2b e3       	ldi	r18, 0x3B	; 59
 d20:	3a ea       	ldi	r19, 0xAA	; 170
 d22:	48 eb       	ldi	r20, 0xB8	; 184
 d24:	5f e7       	ldi	r21, 0x7F	; 127
 d26:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3_pse>
 d2a:	0f 92       	push	r0
 d2c:	0f 92       	push	r0
 d2e:	0f 92       	push	r0
 d30:	4d b7       	in	r20, 0x3d	; 61
 d32:	5e b7       	in	r21, 0x3e	; 62
 d34:	0f 92       	push	r0
 d36:	0e 94 72 07 	call	0xee4	; 0xee4 <modf>
 d3a:	e8 e7       	ldi	r30, 0x78	; 120
 d3c:	f0 e0       	ldi	r31, 0x00	; 0
 d3e:	0e 94 b9 06 	call	0xd72	; 0xd72 <__fp_powser>
 d42:	4f 91       	pop	r20
 d44:	5f 91       	pop	r21
 d46:	ef 91       	pop	r30
 d48:	ff 91       	pop	r31
 d4a:	e5 95       	asr	r30
 d4c:	ee 1f       	adc	r30, r30
 d4e:	ff 1f       	adc	r31, r31
 d50:	49 f0       	breq	.+18     	; 0xd64 <exp+0x56>
 d52:	fe 57       	subi	r31, 0x7E	; 126
 d54:	e0 68       	ori	r30, 0x80	; 128
 d56:	44 27       	eor	r20, r20
 d58:	ee 0f       	add	r30, r30
 d5a:	44 1f       	adc	r20, r20
 d5c:	fa 95       	dec	r31
 d5e:	e1 f7       	brne	.-8      	; 0xd58 <exp+0x4a>
 d60:	41 95       	neg	r20
 d62:	55 0b       	sbc	r21, r21
 d64:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <ldexp>
 d68:	0f 90       	pop	r0
 d6a:	07 fe       	sbrs	r0, 7
 d6c:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <inverse>
 d70:	08 95       	ret

00000d72 <__fp_powser>:
 d72:	df 93       	push	r29
 d74:	cf 93       	push	r28
 d76:	1f 93       	push	r17
 d78:	0f 93       	push	r16
 d7a:	ff 92       	push	r15
 d7c:	ef 92       	push	r14
 d7e:	df 92       	push	r13
 d80:	7b 01       	movw	r14, r22
 d82:	8c 01       	movw	r16, r24
 d84:	68 94       	set
 d86:	06 c0       	rjmp	.+12     	; 0xd94 <__fp_powser+0x22>
 d88:	da 2e       	mov	r13, r26
 d8a:	ef 01       	movw	r28, r30
 d8c:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__mulsf3x>
 d90:	fe 01       	movw	r30, r28
 d92:	e8 94       	clt
 d94:	a5 91       	lpm	r26, Z+
 d96:	25 91       	lpm	r18, Z+
 d98:	35 91       	lpm	r19, Z+
 d9a:	45 91       	lpm	r20, Z+
 d9c:	55 91       	lpm	r21, Z+
 d9e:	a6 f3       	brts	.-24     	; 0xd88 <__fp_powser+0x16>
 da0:	ef 01       	movw	r28, r30
 da2:	0e 94 15 04 	call	0x82a	; 0x82a <__addsf3x>
 da6:	fe 01       	movw	r30, r28
 da8:	97 01       	movw	r18, r14
 daa:	a8 01       	movw	r20, r16
 dac:	da 94       	dec	r13
 dae:	69 f7       	brne	.-38     	; 0xd8a <__fp_powser+0x18>
 db0:	df 90       	pop	r13
 db2:	ef 90       	pop	r14
 db4:	ff 90       	pop	r15
 db6:	0f 91       	pop	r16
 db8:	1f 91       	pop	r17
 dba:	cf 91       	pop	r28
 dbc:	df 91       	pop	r29
 dbe:	08 95       	ret

00000dc0 <inverse>:
 dc0:	9b 01       	movw	r18, r22
 dc2:	ac 01       	movw	r20, r24
 dc4:	60 e0       	ldi	r22, 0x00	; 0
 dc6:	70 e0       	ldi	r23, 0x00	; 0
 dc8:	80 e8       	ldi	r24, 0x80	; 128
 dca:	9f e3       	ldi	r25, 0x3F	; 63
 dcc:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__divsf3>
 dd0:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>
 dd4:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__fp_mpack>

00000dd8 <ldexp>:
 dd8:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_splitA>
 ddc:	d8 f3       	brcs	.-10     	; 0xdd4 <inverse+0x14>
 dde:	99 23       	and	r25, r25
 de0:	c9 f3       	breq	.-14     	; 0xdd4 <inverse+0x14>
 de2:	94 0f       	add	r25, r20
 de4:	51 1d       	adc	r21, r1
 de6:	a3 f3       	brvs	.-24     	; 0xdd0 <inverse+0x10>
 de8:	91 50       	subi	r25, 0x01	; 1
 dea:	50 40       	sbci	r21, 0x00	; 0
 dec:	94 f0       	brlt	.+36     	; 0xe12 <ldexp+0x3a>
 dee:	59 f0       	breq	.+22     	; 0xe06 <ldexp+0x2e>
 df0:	88 23       	and	r24, r24
 df2:	32 f0       	brmi	.+12     	; 0xe00 <ldexp+0x28>
 df4:	66 0f       	add	r22, r22
 df6:	77 1f       	adc	r23, r23
 df8:	88 1f       	adc	r24, r24
 dfa:	91 50       	subi	r25, 0x01	; 1
 dfc:	50 40       	sbci	r21, 0x00	; 0
 dfe:	c1 f7       	brne	.-16     	; 0xdf0 <ldexp+0x18>
 e00:	9e 3f       	cpi	r25, 0xFE	; 254
 e02:	51 05       	cpc	r21, r1
 e04:	2c f7       	brge	.-54     	; 0xdd0 <inverse+0x10>
 e06:	88 0f       	add	r24, r24
 e08:	91 1d       	adc	r25, r1
 e0a:	96 95       	lsr	r25
 e0c:	87 95       	ror	r24
 e0e:	97 f9       	bld	r25, 7
 e10:	08 95       	ret
 e12:	5f 3f       	cpi	r21, 0xFF	; 255
 e14:	ac f0       	brlt	.+42     	; 0xe40 <ldexp+0x68>
 e16:	98 3e       	cpi	r25, 0xE8	; 232
 e18:	9c f0       	brlt	.+38     	; 0xe40 <ldexp+0x68>
 e1a:	bb 27       	eor	r27, r27
 e1c:	86 95       	lsr	r24
 e1e:	77 95       	ror	r23
 e20:	67 95       	ror	r22
 e22:	b7 95       	ror	r27
 e24:	08 f4       	brcc	.+2      	; 0xe28 <ldexp+0x50>
 e26:	b1 60       	ori	r27, 0x01	; 1
 e28:	93 95       	inc	r25
 e2a:	c1 f7       	brne	.-16     	; 0xe1c <ldexp+0x44>
 e2c:	bb 0f       	add	r27, r27
 e2e:	58 f7       	brcc	.-42     	; 0xe06 <ldexp+0x2e>
 e30:	11 f4       	brne	.+4      	; 0xe36 <ldexp+0x5e>
 e32:	60 ff       	sbrs	r22, 0
 e34:	e8 cf       	rjmp	.-48     	; 0xe06 <ldexp+0x2e>
 e36:	6f 5f       	subi	r22, 0xFF	; 255
 e38:	7f 4f       	sbci	r23, 0xFF	; 255
 e3a:	8f 4f       	sbci	r24, 0xFF	; 255
 e3c:	9f 4f       	sbci	r25, 0xFF	; 255
 e3e:	e3 cf       	rjmp	.-58     	; 0xe06 <ldexp+0x2e>
 e40:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 e44:	16 f0       	brts	.+4      	; 0xe4a <ldexp+0x72>
 e46:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__fp_mpack>
 e4a:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_nan>
 e4e:	68 94       	set
 e50:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__fp_inf>

00000e54 <log>:
 e54:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_splitA>
 e58:	a8 f3       	brcs	.-22     	; 0xe44 <ldexp+0x6c>
 e5a:	99 23       	and	r25, r25
 e5c:	c1 f3       	breq	.-16     	; 0xe4e <ldexp+0x76>
 e5e:	ae f3       	brts	.-22     	; 0xe4a <ldexp+0x72>
 e60:	df 93       	push	r29
 e62:	cf 93       	push	r28
 e64:	1f 93       	push	r17
 e66:	0f 93       	push	r16
 e68:	ff 92       	push	r15
 e6a:	c9 2f       	mov	r28, r25
 e6c:	dd 27       	eor	r29, r29
 e6e:	88 23       	and	r24, r24
 e70:	2a f0       	brmi	.+10     	; 0xe7c <log+0x28>
 e72:	21 97       	sbiw	r28, 0x01	; 1
 e74:	66 0f       	add	r22, r22
 e76:	77 1f       	adc	r23, r23
 e78:	88 1f       	adc	r24, r24
 e7a:	da f7       	brpl	.-10     	; 0xe72 <log+0x1e>
 e7c:	20 e0       	ldi	r18, 0x00	; 0
 e7e:	30 e0       	ldi	r19, 0x00	; 0
 e80:	40 e8       	ldi	r20, 0x80	; 128
 e82:	5f eb       	ldi	r21, 0xBF	; 191
 e84:	9f e3       	ldi	r25, 0x3F	; 63
 e86:	88 39       	cpi	r24, 0x98	; 152
 e88:	20 f0       	brcs	.+8      	; 0xe92 <log+0x3e>
 e8a:	80 3e       	cpi	r24, 0xE0	; 224
 e8c:	38 f0       	brcs	.+14     	; 0xe9c <log+0x48>
 e8e:	21 96       	adiw	r28, 0x01	; 1
 e90:	8f 77       	andi	r24, 0x7F	; 127
 e92:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__addsf3>
 e96:	e0 ea       	ldi	r30, 0xA0	; 160
 e98:	f0 e0       	ldi	r31, 0x00	; 0
 e9a:	04 c0       	rjmp	.+8      	; 0xea4 <log+0x50>
 e9c:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__addsf3>
 ea0:	ed ec       	ldi	r30, 0xCD	; 205
 ea2:	f0 e0       	ldi	r31, 0x00	; 0
 ea4:	0e 94 b9 06 	call	0xd72	; 0xd72 <__fp_powser>
 ea8:	8b 01       	movw	r16, r22
 eaa:	be 01       	movw	r22, r28
 eac:	ec 01       	movw	r28, r24
 eae:	fb 2e       	mov	r15, r27
 eb0:	6f 57       	subi	r22, 0x7F	; 127
 eb2:	71 09       	sbc	r23, r1
 eb4:	75 95       	asr	r23
 eb6:	77 1f       	adc	r23, r23
 eb8:	88 0b       	sbc	r24, r24
 eba:	99 0b       	sbc	r25, r25
 ebc:	0e 94 12 05 	call	0xa24	; 0xa24 <__floatsisf>
 ec0:	28 e1       	ldi	r18, 0x18	; 24
 ec2:	32 e7       	ldi	r19, 0x72	; 114
 ec4:	41 e3       	ldi	r20, 0x31	; 49
 ec6:	5f e3       	ldi	r21, 0x3F	; 63
 ec8:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__mulsf3x>
 ecc:	af 2d       	mov	r26, r15
 ece:	98 01       	movw	r18, r16
 ed0:	ae 01       	movw	r20, r28
 ed2:	ff 90       	pop	r15
 ed4:	0f 91       	pop	r16
 ed6:	1f 91       	pop	r17
 ed8:	cf 91       	pop	r28
 eda:	df 91       	pop	r29
 edc:	0e 94 15 04 	call	0x82a	; 0x82a <__addsf3x>
 ee0:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_round>

00000ee4 <modf>:
 ee4:	fa 01       	movw	r30, r20
 ee6:	dc 01       	movw	r26, r24
 ee8:	aa 0f       	add	r26, r26
 eea:	bb 1f       	adc	r27, r27
 eec:	9b 01       	movw	r18, r22
 eee:	ac 01       	movw	r20, r24
 ef0:	bf 57       	subi	r27, 0x7F	; 127
 ef2:	28 f4       	brcc	.+10     	; 0xefe <modf+0x1a>
 ef4:	22 27       	eor	r18, r18
 ef6:	33 27       	eor	r19, r19
 ef8:	44 27       	eor	r20, r20
 efa:	50 78       	andi	r21, 0x80	; 128
 efc:	20 c0       	rjmp	.+64     	; 0xf3e <modf+0x5a>
 efe:	b7 51       	subi	r27, 0x17	; 23
 f00:	90 f4       	brcc	.+36     	; 0xf26 <modf+0x42>
 f02:	ab 2f       	mov	r26, r27
 f04:	00 24       	eor	r0, r0
 f06:	46 95       	lsr	r20
 f08:	37 95       	ror	r19
 f0a:	27 95       	ror	r18
 f0c:	01 1c       	adc	r0, r1
 f0e:	a3 95       	inc	r26
 f10:	d2 f3       	brmi	.-12     	; 0xf06 <modf+0x22>
 f12:	00 20       	and	r0, r0
 f14:	71 f0       	breq	.+28     	; 0xf32 <modf+0x4e>
 f16:	22 0f       	add	r18, r18
 f18:	33 1f       	adc	r19, r19
 f1a:	44 1f       	adc	r20, r20
 f1c:	b3 95       	inc	r27
 f1e:	da f3       	brmi	.-10     	; 0xf16 <modf+0x32>
 f20:	0e d0       	rcall	.+28     	; 0xf3e <modf+0x5a>
 f22:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <__subsf3>
 f26:	61 30       	cpi	r22, 0x01	; 1
 f28:	71 05       	cpc	r23, r1
 f2a:	a0 e8       	ldi	r26, 0x80	; 128
 f2c:	8a 07       	cpc	r24, r26
 f2e:	b9 46       	sbci	r27, 0x69	; 105
 f30:	30 f4       	brcc	.+12     	; 0xf3e <modf+0x5a>
 f32:	9b 01       	movw	r18, r22
 f34:	ac 01       	movw	r20, r24
 f36:	66 27       	eor	r22, r22
 f38:	77 27       	eor	r23, r23
 f3a:	88 27       	eor	r24, r24
 f3c:	90 78       	andi	r25, 0x80	; 128
 f3e:	30 96       	adiw	r30, 0x00	; 0
 f40:	21 f0       	breq	.+8      	; 0xf4a <modf+0x66>
 f42:	20 83       	st	Z, r18
 f44:	31 83       	std	Z+1, r19	; 0x01
 f46:	42 83       	std	Z+2, r20	; 0x02
 f48:	53 83       	std	Z+3, r21	; 0x03
 f4a:	08 95       	ret

00000f4c <__fp_mpack>:
 f4c:	9f 3f       	cpi	r25, 0xFF	; 255
 f4e:	31 f0       	breq	.+12     	; 0xf5c <__fp_mpack_finite+0xc>

00000f50 <__fp_mpack_finite>:
 f50:	91 50       	subi	r25, 0x01	; 1
 f52:	20 f4       	brcc	.+8      	; 0xf5c <__fp_mpack_finite+0xc>
 f54:	87 95       	ror	r24
 f56:	77 95       	ror	r23
 f58:	67 95       	ror	r22
 f5a:	b7 95       	ror	r27
 f5c:	88 0f       	add	r24, r24
 f5e:	91 1d       	adc	r25, r1
 f60:	96 95       	lsr	r25
 f62:	87 95       	ror	r24
 f64:	97 f9       	bld	r25, 7
 f66:	08 95       	ret

00000f68 <__tablejump2__>:
 f68:	ee 0f       	add	r30, r30
 f6a:	ff 1f       	adc	r31, r31
 f6c:	05 90       	lpm	r0, Z+
 f6e:	f4 91       	lpm	r31, Z
 f70:	e0 2d       	mov	r30, r0
 f72:	09 94       	ijmp

00000f74 <__adddi3_s8>:
 f74:	00 24       	eor	r0, r0
 f76:	a7 fd       	sbrc	r26, 7
 f78:	00 94       	com	r0
 f7a:	2a 0f       	add	r18, r26
 f7c:	30 1d       	adc	r19, r0
 f7e:	40 1d       	adc	r20, r0
 f80:	50 1d       	adc	r21, r0
 f82:	60 1d       	adc	r22, r0
 f84:	70 1d       	adc	r23, r0
 f86:	80 1d       	adc	r24, r0
 f88:	90 1d       	adc	r25, r0
 f8a:	08 95       	ret

00000f8c <_exit>:
 f8c:	f8 94       	cli

00000f8e <__stop_program>:
 f8e:	ff cf       	rjmp	.-2      	; 0xf8e <__stop_program>
