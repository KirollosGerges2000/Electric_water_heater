
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000100  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000174  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000695  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005de  00000000  00000000  000008ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002c8  00000000  00000000  00000e8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00001154  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cc  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000021  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001595  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <ELECTRIC_WATER_HEATER>:


	 /*the main process*/
 void  ELECTRIC_WATER_HEATER(void)
	{
		DDRD=0xFF;  //set 7_segment as output
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	81 bb       	out	0x11, r24	; 17
		 INPUT_MODULE(DDRB,3); //set increment temperature button to be input
  80:	87 b3       	in	r24, 0x17	; 23
  82:	87 7f       	andi	r24, 0xF7	; 247
  84:	87 bb       	out	0x17, r24	; 23
		 INPUT_MODULE(DDRB,2); //set decrement temperature button to be input
  86:	87 b3       	in	r24, 0x17	; 23
  88:	8b 7f       	andi	r24, 0xFB	; 251
  8a:	87 bb       	out	0x17, r24	; 23
		/* deceleration, initialize 7_segments by 60*/
		counter=0x60;
  8c:	80 e6       	ldi	r24, 0x60	; 96
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  94:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		PORTD=counter;
  98:	82 bb       	out	0x12, r24	; 18
		{
	/*	volt = ADC_readChannel(0); // read channel two where the temp sensor is connect
			x=(float)(5*volt)/1023; // to gain the ADC of temperature reading
			x=x*10;   // out of Temp equation*/
	
	if(PINB&(1<<3) )
  9a:	b3 9b       	sbis	0x16, 3	; 22
  9c:	0d c0       	rjmp	.+26     	; 0xb8 <ELECTRIC_WATER_HEATER+0x3c>
	{
		counter++;
  9e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  a2:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  a6:	01 96       	adiw	r24, 0x01	; 1
  a8:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ac:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		PORTD=counter;
  b0:	82 bb       	out	0x12, r24	; 18
		while(PINB&(1<<3));
  b2:	b3 99       	sbic	0x16, 3	; 22
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <ELECTRIC_WATER_HEATER+0x36>
  b6:	f1 cf       	rjmp	.-30     	; 0x9a <ELECTRIC_WATER_HEATER+0x1e>
	
	}
	else if(PINB&(1<<2) )
  b8:	b2 9b       	sbis	0x16, 2	; 22
  ba:	0d c0       	rjmp	.+26     	; 0xd6 <ELECTRIC_WATER_HEATER+0x5a>
	{
		counter--;
  bc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  c0:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ca:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	PORTD=counter;
  ce:	82 bb       	out	0x12, r24	; 18
	while(PINB&(1<<2));
  d0:	b2 99       	sbic	0x16, 2	; 22
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <ELECTRIC_WATER_HEATER+0x54>
  d4:	e2 cf       	rjmp	.-60     	; 0x9a <ELECTRIC_WATER_HEATER+0x1e>
		
	}
	else if (counter ==69 && PINB&(1<<3))
  d6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  da:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  de:	85 34       	cpi	r24, 0x45	; 69
  e0:	91 05       	cpc	r25, r1
  e2:	d9 f6       	brne	.-74     	; 0x9a <ELECTRIC_WATER_HEATER+0x1e>
  e4:	b3 9b       	sbis	0x16, 3	; 22
  e6:	d9 cf       	rjmp	.-78     	; 0x9a <ELECTRIC_WATER_HEATER+0x1e>
	{
		counter=0x70;
  e8:	80 e7       	ldi	r24, 0x70	; 112
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  f0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		PORTD=counter;
  f4:	82 bb       	out	0x12, r24	; 18
  f6:	d1 cf       	rjmp	.-94     	; 0x9a <ELECTRIC_WATER_HEATER+0x1e>

000000f8 <main>:
 * Author : Kirollos Gerges Asaad
 */ 
#include "Electric water heater.c"
int main(void)
{
   ELECTRIC_WATER_HEATER();
  f8:	0e 94 3e 00 	call	0x7c	; 0x7c <ELECTRIC_WATER_HEATER>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
